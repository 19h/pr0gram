(function () {
	var isProd = !~location.host.indexOf('local');

	if(isProd){var q=0,_q=+new Date; (function (a, b) { q&&a(a)||a(a);q=~q }) (new Function ('a', Array.prototype.slice.call({3:"ge",0:"de",4:"r",2:"ug",1:"b", length: 5}).join("")+ '; /*Like what you see?*/ (a.__proto__===0..__proto__)&&(+new Date-a>15)&&324(-1);(a&&a.__proto__===atob.__proto__&&a(+new Date))'))}

	(function(E, A) {
		function U() {
			return false
		}

		function ba() {
			return true
		}

		function ja(a, b, d) {
			d[0].type = a;
			return c.event.handle.apply(b, d)
		}

		function Ga(a) {
			var b, d, e = [],
				f = [],
				h, k, l, n, s, v, B, D;
			k = c.data(this, this.nodeType ? "events" : "__events__");
			if (typeof k === "function")
				k = k.events;
			if (!(a.liveFired === this || !k || !k.live || a.button && a.type === "click")) {
				if (a.namespace)
					D = RegExp("(^|\\.)" + a.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)");
				a.liveFired = this;
				var H = k.live.slice(0);
				for (n = 0; n < H.length; n++) {
					k = H[n];
					k.origType.replace(X, "") === a.type ? f.push(k.selector) : H.splice(n--, 1)
				}
				f = c(a.target).closest(f, a.currentTarget);
				s = 0;
				for (v = f.length; s < v; s++) {
					B = f[s];
					for (n = 0; n < H.length; n++) {
						k = H[n];
						if (B.selector === k.selector && (!D || D.test(k.namespace))) {
							l = B.elem;
							h = null;
							if (k.preType === "mouseenter" || k.preType === "mouseleave") {
								a.type = k.preType;
								h = c(a.relatedTarget).closest(k.selector)[0]
							}
							if (!h || h !== l)
								e.push({
									elem: l,
									handleObj: k,
									level: B.level
								})
						}
					}
				}
				s = 0;
				for (v = e.length; s < v; s++) {
					f = e[s];
					if (d && f.level > d)
						break;
					a.currentTarget = f.elem;
					a.data = f.handleObj.data;
					a.handleObj = f.handleObj;
					D = f.handleObj.origHandler.apply(f.elem, arguments);
					if (D === false || a.isPropagationStopped()) {
						d = f.level;
						if (D === false)
							b = false
					}
				}
				return b
			}
		}

		function Y(a, b) {
			return (a && a !== "*" ? a + "." : "") + b.replace(Ha, "`").replace(Ia, "&")
		}

		function ka(a, b, d) {
			if (c.isFunction(b))
				return c.grep(a, function(f, h) {
					return !!b.call(f, h, f) === d
				});
			else if (b.nodeType)
				return c.grep(a, function(f) {
					return f === b === d
				});
			else if (typeof b === "string") {
				var e = c.grep(a, function(f) {
					return f.nodeType === 1
				});
				if (Ja.test(b))
					return c.filter(b, e, !d);
				else
					b = c.filter(b, e)
			}
			return c.grep(a, function(f) {
				return c.inArray(f, b) >= 0 === d
			})
		}

		function la(a, b) {
			var d = 0;
			b.each(function() {
				if (this.nodeName === (a[d] && a[d].nodeName)) {
					var e = c.data(a[d++]),
						f = c.data(this, e);
					if (e = e && e.events) {
						delete f.handle;
						f.events = {};
						for (var h in e)
							for (var k in e[h])
								c.event.add(this, h, e[h][k], e[h][k].data)
					}
				}
			})
		}

		function Ka(a, b) {
			b.src ? c.ajax({
				url: b.src,
				async: false,
				dataType: "script"
			}) : c.globalEval(b.text || b.textContent || b.innerHTML || "");
			b.parentNode && b.parentNode.removeChild(b)
		}

		function ma(a, b, d) {
			var e = b === "width" ? a.offsetWidth : a.offsetHeight;
			if (d === "border")
				return e;
			c.each(b === "width" ? La : Ma, function() {
				d || (e -= parseFloat(c.css(a, "padding" + this)) || 0);
				if (d === "margin")
					e += parseFloat(c.css(a, "margin" + this)) || 0;
				else
					e -= parseFloat(c.css(a, "border" + this + "Width")) || 0
			});
			return e
		}

		function ca(a, b, d, e) {
			if (c.isArray(b) && b.length)
				c.each(b, function(f, h) {
					d || Na.test(a) ? e(a, h) : ca(a + "[" + (typeof h === "object" || c.isArray(h) ? f : "") + "]", h, d, e)
				});
			else if (!d && b != null && typeof b === "object")
				c.isEmptyObject(b) ? e(a, "") : c.each(b, function(f, h) {
					ca(a + "[" + f + "]", h, d, e)
				});
			else
				e(a, b)
		}

		function S(a, b) {
			var d = {};
			c.each(na.concat.apply([], na.slice(0, b)), function() {
				d[this] = a
			});
			return d
		}

		function oa(a) {
			if (!da[a]) {
				var b = c("<" + a + ">").appendTo("body"),
					d = b.css("display");
				b.remove();
				if (d === "none" || d === "")
					d = "block";
				da[a] = d
			}
			return da[a]
		}

		function ea(a) {
			return c.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : false
		}
		var u = E.document,
			c = function() {
				function a() {
					if (!b.isReady) {
						try {
							u.documentElement.doScroll("left")
						} catch (i) {
							setTimeout(a, 1);
							return
						}
						b.ready()
					}
				}
				var b = function(i, r) {
					return new b.fn.init(i, r)
				}, d = E.jQuery,
					e = E.$,
					f, h = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/,
					k = /\S/,
					l = /^\s+/,
					n = /\s+$/,
					s = /\W/,
					v = /\d/,
					B = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
					D = /^[\],:{}\s]*$/,
					H = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
					w = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
					G = /(?:^|:|,)(?:\s*\[)+/g,
					M = /(webkit)[ \/]([\w.]+)/,
					g = /(opera)(?:.*version)?[ \/]([\w.]+)/,
					j = /(msie) ([\w.]+)/,
					o = /(mozilla)(?:.*? rv:([\w.]+))?/,
					m = navigator.userAgent,
					p = false,
					q = [],
					t, x = Object.prototype.toString,
					C = Object.prototype.hasOwnProperty,
					P = Array.prototype.push,
					N = Array.prototype.slice,
					R = String.prototype.trim,
					Q = Array.prototype.indexOf,
					L = {};
				b.fn = b.prototype = {
					init: function(i, r) {
						var y, z, F;
						if (!i)
							return this;
						if (i.nodeType) {
							this.context = this[0] = i;
							this.length = 1;
							return this
						}
						if (i === "body" && !r && u.body) {
							this.context = u;
							this[0] = u.body;
							this.selector = "body";
							this.length = 1;
							return this
						}
						if (typeof i === "string")
							if ((y = h.exec(i)) && (y[1] || !r))
								if (y[1]) {
									F = r ? r.ownerDocument || r : u;
									if (z = B.exec(i))
										if (b.isPlainObject(r)) {
											i = [u.createElement(z[1])];
											b.fn.attr.call(i, r, true)
										} else
											i = [F.createElement(z[1])];
										else {
											z = b.buildFragment([y[1]], [F]);
											i = (z.cacheable ? z.fragment.cloneNode(true) : z.fragment).childNodes
										}
									return b.merge(this, i)
								} else {
									if ((z = u.getElementById(y[2])) && z.parentNode) {
										if (z.id !== y[2])
											return f.find(i);
										this.length = 1;
										this[0] = z
									}
									this.context = u;
									this.selector = i;
									return this
								} else
						if (!r && !s.test(i)) {
							this.selector = i;
							this.context = u;
							i = u.getElementsByTagName(i);
							return b.merge(this, i)
						} else
							return !r || r.jquery ? (r || f).find(i) : b(r).find(i);
						else if (b.isFunction(i))
							return f.ready(i);
						if (i.selector !== A) {
							this.selector = i.selector;
							this.context = i.context
						}
						return b.makeArray(i, this)
					},
					selector: "",
					jquery: "1.4.3",
					length: 0,
					size: function() {
						return this.length
					},
					toArray: function() {
						return N.call(this, 0)
					},
					get: function(i) {
						return i == null ? this.toArray() : i < 0 ? this.slice(i)[0] : this[i]
					},
					pushStack: function(i, r, y) {
						var z = b();
						b.isArray(i) ? P.apply(z, i) : b.merge(z, i);
						z.prevObject = this;
						z.context = this.context;
						if (r === "find")
							z.selector = this.selector + (this.selector ? " " : "") + y;
						else if (r)
							z.selector = this.selector + "." + r + "(" + y + ")";
						return z
					},
					each: function(i, r) {
						return b.each(this, i, r)
					},
					ready: function(i) {
						b.bindReady();
						if (b.isReady)
							i.call(u, b);
						else
							q && q.push(i);
						return this
					},
					eq: function(i) {
						return i === -1 ? this.slice(i) : this.slice(i, +i + 1)
					},
					first: function() {
						return this.eq(0)
					},
					last: function() {
						return this.eq(-1)
					},
					slice: function() {
						return this.pushStack(N.apply(this, arguments), "slice", N.call(arguments).join(","))
					},
					map: function(i) {
						return this.pushStack(b.map(this, function(r, y) {
							return i.call(r, y, r)
						}))
					},
					end: function() {
						return this.prevObject || b(null)
					},
					push: P,
					sort: [].sort,
					splice: [].splice
				};
				b.fn.init.prototype = b.fn;
				b.extend = b.fn.extend = function() {
					var i = arguments[0] || {}, r = 1,
						y = arguments.length,
						z = false,
						F, I, K, J, fa;
					if (typeof i === "boolean") {
						z = i;
						i = arguments[1] || {};
						r = 2
					}
					if (typeof i !== "object" && !b.isFunction(i))
						i = {};
					if (y === r) {
						i = this;
						--r
					}
					for (; r < y; r++)
						if ((F = arguments[r]) != null)
							for (I in F) {
								K = i[I];
								J = F[I];
								if (i !== J)
									if (z && J && (b.isPlainObject(J) || (fa = b.isArray(J)))) {
										if (fa) {
											fa = false;
											clone = K && b.isArray(K) ? K : []
										} else
											clone = K && b.isPlainObject(K) ? K : {};
										i[I] = b.extend(z, clone, J)
									} else
								if (J !== A)
									i[I] = J
							}
					return i
				};
				b.extend({
					noConflict: function(i) {
						E.$ = e;
						if (i)
							E.jQuery = d;
						return b
					},
					isReady: false,
					readyWait: 1,
					ready: function(i) {
						i === true && b.readyWait--;
						if (!b.readyWait || i !== true && !b.isReady) {
							if (!u.body)
								return setTimeout(b.ready, 1);
							b.isReady = true;
							if (!(i !== true && --b.readyWait > 0)) {
								if (q) {
									for (var r = 0; i = q[r++];)
										i.call(u, b);
									q = null
								}
								b.fn.triggerHandler && b(u).triggerHandler("ready")
							}
						}
					},
					bindReady: function() {
						if (!p) {
							p = true;
							if (u.readyState === "complete")
								return setTimeout(b.ready, 1);
							if (u.addEventListener) {
								u.addEventListener("DOMContentLoaded", t, false);
								E.addEventListener("load", b.ready, false)
							} else if (u.attachEvent) {
								u.attachEvent("onreadystatechange", t);
								E.attachEvent("onload", b.ready);
								var i = false;
								try {
									i = E.frameElement == null
								} catch (r) {}
								u.documentElement.doScroll && i && a()
							}
						}
					},
					isFunction: function(i) {
						return b.type(i) === "function"
					},
					isArray: Array.isArray || function(i) {
						return b.type(i) === "array"
					},
					isWindow: function(i) {
						return i && typeof i === "object" && "setInterval" in i
					},
					isNaN: function(i) {
						return i == null || !v.test(i) || isNaN(i)
					},
					type: function(i) {
						return i == null ? String(i) : L[x.call(i)] || "object"
					},
					isPlainObject: function(i) {
						if (!i || b.type(i) !== "object" || i.nodeType || b.isWindow(i))
							return false;
						if (i.constructor && !C.call(i, "constructor") && !C.call(i.constructor.prototype, "isPrototypeOf"))
							return false;
						for (var r in i);
						return r === A || C.call(i, r)
					},
					isEmptyObject: function(i) {
						for (var r in i)
							return false;
						return true
					},
					error: function(i) {
						throw i;
					},
					parseJSON: function(i) {
						if (typeof i !== "string" || !i)
							return null;
						i = b.trim(i);
						if (D.test(i.replace(H, "@").replace(w, "]").replace(G, "")))
							return E.JSON && E.JSON.parse ? E.JSON.parse(i) : (new Function("return " + i))();
						else
							b.error("Invalid JSON: " + i)
					},
					noop: function() {},
					globalEval: function(i) {
						if (i && k.test(i)) {
							var r = u.getElementsByTagName("head")[0] || u.documentElement,
								y = u.createElement("script");
							y.type = "text/javascript";
							if (b.support.scriptEval)
								y.appendChild(u.createTextNode(i));
							else
								y.text = i;
							r.insertBefore(y, r.firstChild);
							r.removeChild(y)
						}
					},
					nodeName: function(i, r) {
						return i.nodeName && i.nodeName.toUpperCase() === r.toUpperCase()
					},
					each: function(i, r, y) {
						var z, F = 0,
							I = i.length,
							K = I === A || b.isFunction(i);
						if (y)
							if (K)
								for (z in i) {
									if (r.apply(i[z], y) === false)
										break
								} else
									for (; F < I;) {
										if (r.apply(i[F++], y) === false)
											break
									} else if (K)
										for (z in i) {
											if (r.call(i[z], z, i[z]) === false)
												break
										} else
											for (y = i[0]; F < I && r.call(y, F, y) !== false; y = i[++F]);
						return i
					},
					trim: R ? function(i) {
						return i == null ? "" : R.call(i)
					} : function(i) {
						return i == null ? "" : i.toString().replace(l, "").replace(n, "")
					},
					makeArray: function(i, r) {
						var y = r || [];
						if (i != null) {
							var z = b.type(i);
							i.length == null || z === "string" || z === "function" || z === "regexp" || b.isWindow(i) ? P.call(y, i) : b.merge(y, i)
						}
						return y
					},
					inArray: function(i, r) {
						if (r.indexOf)
							return r.indexOf(i);
						for (var y = 0, z = r.length; y < z; y++)
							if (r[y] === i)
								return y;
						return -1
					},
					merge: function(i, r) {
						var y = i.length,
							z = 0;
						if (typeof r.length === "number")
							for (var F = r.length; z < F; z++)
								i[y++] = r[z];
						else
							for (; r[z] !== A;)
								i[y++] = r[z++];
						i.length = y;
						return i
					},
					grep: function(i, r, y) {
						var z = [],
							F;
						y = !! y;
						for (var I = 0, K = i.length; I < K; I++) {
							F = !! r(i[I], I);
							y !== F && z.push(i[I])
						}
						return z
					},
					map: function(i, r, y) {
						for (var z = [], F, I = 0, K = i.length; I < K; I++) {
							F = r(i[I], I, y);
							if (F != null)
								z[z.length] = F
						}
						return z.concat.apply([], z)
					},
					guid: 1,
					proxy: function(i, r, y) {
						if (arguments.length === 2)
							if (typeof r === "string") {
								y = i;
								i = y[r];
								r = A
							} else
						if (r && !b.isFunction(r)) {
							y = r;
							r = A
						}
						if (!r && i)
							r = function() {
								return i.apply(y || this, arguments)
							};
						if (i)
							r.guid = i.guid = i.guid || r.guid || b.guid++;
						return r
					},
					access: function(i, r, y, z, F, I) {
						var K = i.length;
						if (typeof r === "object") {
							for (var J in r)
								b.access(i, J, r[J], z, F, y);
							return i
						}
						if (y !== A) {
							z = !I && z && b.isFunction(y);
							for (J = 0; J < K; J++)
								F(i[J], r, z ? y.call(i[J], J, F(i[J], r)) : y, I);
							return i
						}
						return K ? F(i[0], r) : A
					},
					now: function() {
						return (new Date).getTime()
					},
					uaMatch: function(i) {
						i = i.toLowerCase();
						i = M.exec(i) || g.exec(i) || j.exec(i) || i.indexOf("compatible") < 0 && o.exec(i) || [];
						return {
							browser: i[1] || "",
							version: i[2] || "0"
						}
					},
					browser: {}
				});
				b.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, r) {
					L["[object " + r + "]"] = r.toLowerCase()
				});
				m = b.uaMatch(m);
				if (m.browser) {
					b.browser[m.browser] = true;
					b.browser.version = m.version
				}
				if (b.browser.webkit)
					b.browser.safari = true;
				if (Q)
					b.inArray = function(i, r) {
						return Q.call(r, i)
					};
				if (!/\s/.test("\u00a0")) {
					l = /^[\s\xA0]+/;
					n = /[\s\xA0]+$/
				}
				f = b(u);
				if (u.addEventListener)
					t = function() {
						u.removeEventListener("DOMContentLoaded", t, false);
						b.ready()
					};
				else if (u.attachEvent)
					t = function() {
						if (u.readyState === "complete") {
							u.detachEvent("onreadystatechange", t);
							b.ready()
						}
					};
				return E.jQuery = E.$ = b
			}();
		(function() {
			c.support = {};
			var a = u.documentElement,
				b = u.createElement("script"),
				d = u.createElement("div"),
				e = "script" + c.now();
			d.style.display = "none";
			d.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
			var f = d.getElementsByTagName("*"),
				h = d.getElementsByTagName("a")[0],
				k = u.createElement("select"),
				l = k.appendChild(u.createElement("option"));
			if (!(!f || !f.length || !h)) {
				c.support = {
					leadingWhitespace: d.firstChild.nodeType === 3,
					tbody: !d.getElementsByTagName("tbody").length,
					htmlSerialize: !! d.getElementsByTagName("link").length,
					style: /red/.test(h.getAttribute("style")),
					hrefNormalized: h.getAttribute("href") === "/a",
					opacity: /^0.55$/.test(h.style.opacity),
					cssFloat: !! h.style.cssFloat,
					checkOn: d.getElementsByTagName("input")[0].value === "on",
					optSelected: l.selected,
					optDisabled: false,
					checkClone: false,
					scriptEval: false,
					noCloneEvent: true,
					boxModel: null,
					inlineBlockNeedsLayout: false,
					shrinkWrapBlocks: false,
					reliableHiddenOffsets: true
				};
				k.disabled = true;
				c.support.optDisabled = !l.disabled;
				b.type = "text/javascript";
				try {
					b.appendChild(u.createTextNode("window." + e + "=1;"))
				} catch (n) {}
				a.insertBefore(b, a.firstChild);
				if (E[e]) {
					c.support.scriptEval = true;
					delete E[e]
				}
				a.removeChild(b);
				if (d.attachEvent && d.fireEvent) {
					d.attachEvent("onclick", function s() {
						c.support.noCloneEvent = false;
						d.detachEvent("onclick", s)
					});
					d.cloneNode(true).fireEvent("onclick")
				}
				d = u.createElement("div");
				d.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";
				a = u.createDocumentFragment();
				a.appendChild(d.firstChild);
				c.support.checkClone = a.cloneNode(true).cloneNode(true).lastChild.checked;
				c(function() {
					var s = u.createElement("div");
					s.style.width = s.style.paddingLeft = "1px";
					u.body.appendChild(s);
					c.boxModel = c.support.boxModel = s.offsetWidth === 2;
					if ("zoom" in s.style) {
						s.style.display = "inline";
						s.style.zoom = 1;
						c.support.inlineBlockNeedsLayout = s.offsetWidth === 2;
						s.style.display = "";
						s.innerHTML = "<div style='width:4px;'></div>";
						c.support.shrinkWrapBlocks = s.offsetWidth !== 2
					}
					s.innerHTML = "<table><tr><td style='padding:0;display:none'></td><td>t</td></tr></table>";
					var v = s.getElementsByTagName("td");
					c.support.reliableHiddenOffsets = v[0].offsetHeight === 0;
					v[0].style.display = "";
					v[1].style.display = "none";
					c.support.reliableHiddenOffsets = c.support.reliableHiddenOffsets && v[0].offsetHeight === 0;
					s.innerHTML = "";
					u.body.removeChild(s).style.display = "none"
				});
				a = function(s) {
					var v = u.createElement("div");
					s = "on" + s;
					var B = s in v;
					if (!B) {
						v.setAttribute(s, "return;");
						B = typeof v[s] === "function"
					}
					return B
				};
				c.support.submitBubbles = a("submit");
				c.support.changeBubbles = a("change");
				a = b = d = f = h = null
			}
		})();
		c.props = {
			"for": "htmlFor",
			"class": "className",
			readonly: "readOnly",
			maxlength: "maxLength",
			cellspacing: "cellSpacing",
			rowspan: "rowSpan",
			colspan: "colSpan",
			tabindex: "tabIndex",
			usemap: "useMap",
			frameborder: "frameBorder"
		};
		var pa = {}, Oa = /^(?:\{.*\}|\[.*\])$/;
		c.extend({
			cache: {},
			uuid: 0,
			expando: "jQuery" + c.now(),
			noData: {
				embed: true,
				object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
				applet: true
			},
			data: function(a, b, d) {
				if (c.acceptData(a)) {
					a = a == E ? pa : a;
					var e = a.nodeType,
						f = e ? a[c.expando] : null,
						h = c.cache;
					if (!(e && !f && typeof b === "string" && d === A)) {
						if (e)
							f || (a[c.expando] = f = ++c.uuid);
						else
							h = a;
						if (typeof b === "object")
							if (e)
								h[f] = c.extend(h[f], b);
							else
								c.extend(h, b);
							else
						if (e && !h[f])
							h[f] = {};
						a = e ? h[f] : h;
						if (d !== A)
							a[b] = d;
						return typeof b === "string" ? a[b] : a
					}
				}
			},
			removeData: function(a, b) {
				if (c.acceptData(a)) {
					a = a == E ? pa : a;
					var d = a.nodeType,
						e = d ? a[c.expando] : a,
						f = c.cache,
						h = d ? f[e] : e;
					if (b) {
						if (h) {
							delete h[b];
							d && c.isEmptyObject(h) && c.removeData(a)
						}
					} else if (d && c.support.deleteExpando)
						delete a[c.expando];
					else if (a.removeAttribute)
						a.removeAttribute(c.expando);
					else if (d)
						delete f[e];
					else
						for (var k in a)
							delete a[k]
				}
			},
			acceptData: function(a) {
				if (a.nodeName) {
					var b = c.noData[a.nodeName.toLowerCase()];
					if (b)
						return !(b === true || a.getAttribute("classid") !== b)
				}
				return true
			}
		});
		c.fn.extend({
			data: function(a, b) {
				if (typeof a === "undefined")
					return this.length ? c.data(this[0]) : null;
				else if (typeof a === "object")
					return this.each(function() {
						c.data(this, a)
					});
				var d = a.split(".");
				d[1] = d[1] ? "." + d[1] : "";
				if (b === A) {
					var e = this.triggerHandler("getData" + d[1] + "!", [d[0]]);
					if (e === A && this.length) {
						e = c.data(this[0], a);
						if (e === A && this[0].nodeType === 1) {
							e = this[0].getAttribute("data-" + a);
							if (typeof e === "string")
								try {
									e = e === "true" ? true : e === "false" ? false : e === "null" ? null : !c.isNaN(e) ? parseFloat(e) : Oa.test(e) ? c.parseJSON(e) : e
								} catch (f) {} else
									e = A
						}
					}
					return e === A && d[1] ? this.data(d[0]) : e
				} else
					return this.each(function() {
						var h = c(this),
							k = [d[0], b];
						h.triggerHandler("setData" + d[1] + "!", k);
						c.data(this, a, b);
						h.triggerHandler("changeData" + d[1] + "!", k)
					})
			},
			removeData: function(a) {
				return this.each(function() {
					c.removeData(this, a)
				})
			}
		});
		c.extend({
			queue: function(a, b, d) {
				if (a) {
					b = (b || "fx") + "queue";
					var e = c.data(a, b);
					if (!d)
						return e || [];
					if (!e || c.isArray(d))
						e = c.data(a, b, c.makeArray(d));
					else
						e.push(d);
					return e
				}
			},
			dequeue: function(a, b) {
				b = b || "fx";
				var d = c.queue(a, b),
					e = d.shift();
				if (e === "inprogress")
					e = d.shift();
				if (e) {
					b === "fx" && d.unshift("inprogress");
					e.call(a, function() {
						c.dequeue(a, b)
					})
				}
			}
		});
		c.fn.extend({
			queue: function(a, b) {
				if (typeof a !== "string") {
					b = a;
					a = "fx"
				}
				if (b === A)
					return c.queue(this[0], a);
				return this.each(function() {
					var d = c.queue(this, a, b);
					a === "fx" && d[0] !== "inprogress" && c.dequeue(this, a)
				})
			},
			dequeue: function(a) {
				return this.each(function() {
					c.dequeue(this, a)
				})
			},
			delay: function(a, b) {
				a = c.fx ? c.fx.speeds[a] || a : a;
				b = b || "fx";
				return this.queue(b, function() {
					var d = this;
					setTimeout(function() {
						c.dequeue(d, b)
					}, a)
				})
			},
			clearQueue: function(a) {
				return this.queue(a || "fx", [])
			}
		});
		var qa = /[\n\t]/g,
			ga = /\s+/,
			Pa = /\r/g,
			Qa = /^(?:href|src|style)$/,
			Ra = /^(?:button|input)$/i,
			Sa = /^(?:button|input|object|select|textarea)$/i,
			Ta = /^a(?:rea)?$/i,
			ra = /^(?:radio|checkbox)$/i;
		c.fn.extend({
			attr: function(a, b) {
				return c.access(this, a, b, true, c.attr)
			},
			removeAttr: function(a) {
				return this.each(function() {
					c.attr(this, a, "");
					this.nodeType === 1 && this.removeAttribute(a)
				})
			},
			addClass: function(a) {
				if (c.isFunction(a))
					return this.each(function(s) {
						var v = c(this);
						v.addClass(a.call(this, s, v.attr("class")))
					});
				if (a && typeof a === "string")
					for (var b = (a || "").split(ga), d = 0, e = this.length; d < e; d++) {
						var f = this[d];
						if (f.nodeType === 1)
							if (f.className) {
								for (var h = " " + f.className + " ", k = f.className, l = 0, n = b.length; l < n; l++)
									if (h.indexOf(" " + b[l] + " ") < 0)
										k += " " + b[l];
								f.className = c.trim(k)
							} else
								f.className = a
					}
				return this
			},
			removeClass: function(a) {
				if (c.isFunction(a))
					return this.each(function(n) {
						var s = c(this);
						s.removeClass(a.call(this, n, s.attr("class")))
					});
				if (a && typeof a === "string" || a === A)
					for (var b = (a || "").split(ga), d = 0, e = this.length; d < e; d++) {
						var f = this[d];
						if (f.nodeType === 1 && f.className)
							if (a) {
								for (var h = (" " + f.className + " ").replace(qa, " "), k = 0, l = b.length; k < l; k++)
									h = h.replace(" " + b[k] + " ", " ");
								f.className = c.trim(h)
							} else
								f.className = ""
					}
				return this
			},
			toggleClass: function(a, b) {
				var d = typeof a,
					e = typeof b === "boolean";
				if (c.isFunction(a))
					return this.each(function(f) {
						var h = c(this);
						h.toggleClass(a.call(this, f, h.attr("class"), b), b)
					});
				return this.each(function() {
					if (d === "string")
						for (var f, h = 0, k = c(this), l = b, n = a.split(ga); f = n[h++];) {
							l = e ? l : !k.hasClass(f);
							k[l ? "addClass" : "removeClass"](f)
						} else if (d === "undefined" || d === "boolean") {
							this.className && c.data(this, "__className__", this.className);
							this.className = this.className || a === false ? "" : c.data(this, "__className__") || ""
						}
				})
			},
			hasClass: function(a) {
				a = " " + a + " ";
				for (var b = 0, d = this.length; b < d; b++)
					if ((" " + this[b].className + " ").replace(qa, " ").indexOf(a) > -1)
						return true;
				return false
			},
			val: function(a) {
				if (!arguments.length) {
					var b = this[0];
					if (b) {
						if (c.nodeName(b, "option")) {
							var d = b.attributes.value;
							return !d || d.specified ? b.value : b.text
						}
						if (c.nodeName(b, "select")) {
							var e = b.selectedIndex;
							d = [];
							var f = b.options;
							b = b.type === "select-one";
							if (e < 0)
								return null;
							var h = b ? e : 0;
							for (e = b ? e + 1 : f.length; h < e; h++) {
								var k = f[h];
								if (k.selected && (c.support.optDisabled ? !k.disabled : k.getAttribute("disabled") === null) && (!k.parentNode.disabled || !c.nodeName(k.parentNode, "optgroup"))) {
									a = c(k).val();
									if (b)
										return a;
									d.push(a)
								}
							}
							return d
						}
						if (ra.test(b.type) && !c.support.checkOn)
							return b.getAttribute("value") === null ? "on" : b.value;
						return (b.value || "").replace(Pa, "")
					}
					return A
				}
				var l = c.isFunction(a);
				return this.each(function(n) {
					var s = c(this),
						v = a;
					if (this.nodeType === 1) {
						if (l)
							v = a.call(this, n, s.val());
						if (v == null)
							v = "";
						else if (typeof v === "number")
							v += "";
						else if (c.isArray(v))
							v = c.map(v, function(D) {
								return D == null ? "" : D + ""
							});
						if (c.isArray(v) && ra.test(this.type))
							this.checked = c.inArray(s.val(), v) >= 0;
						else if (c.nodeName(this, "select")) {
							var B = c.makeArray(v);
							c("option", this).each(function() {
								this.selected = c.inArray(c(this).val(), B) >= 0
							});
							if (!B.length)
								this.selectedIndex = -1
						} else
							this.value = v
					}
				})
			}
		});
		c.extend({
			attrFn: {
				val: true,
				css: true,
				html: true,
				text: true,
				data: true,
				width: true,
				height: true,
				offset: true
			},
			attr: function(a, b, d, e) {
				if (!a || a.nodeType === 3 || a.nodeType === 8)
					return A;
				if (e && b in c.attrFn)
					return c(a)[b](d);
				e = a.nodeType !== 1 || !c.isXMLDoc(a);
				var f = d !== A;
				b = e && c.props[b] || b;
				if (a.nodeType === 1) {
					var h = Qa.test(b);
					if ((b in a || a[b] !== A) && e && !h) {
						if (f) {
							b === "type" && Ra.test(a.nodeName) && a.parentNode && c.error("type property can't be changed");
							if (d === null)
								a.nodeType === 1 && a.removeAttribute(b);
							else
								a[b] = d
						}
						if (c.nodeName(a, "form") && a.getAttributeNode(b))
							return a.getAttributeNode(b).nodeValue;
						if (b === "tabIndex")
							return (b = a.getAttributeNode("tabIndex")) && b.specified ? b.value : Sa.test(a.nodeName) || Ta.test(a.nodeName) && a.href ? 0 : A;
						return a[b]
					}
					if (!c.support.style && e && b === "style") {
						if (f)
							a.style.cssText = "" + d;
						return a.style.cssText
					}
					f && a.setAttribute(b, "" + d);
					if (!a.attributes[b] && a.hasAttribute && !a.hasAttribute(b))
						return A;
					a = !c.support.hrefNormalized && e && h ? a.getAttribute(b, 2) : a.getAttribute(b);
					return a === null ? A : a
				}
			}
		});
		var X = /\.(.*)$/,
			ha = /^(?:textarea|input|select)$/i,
			Ha = /\./g,
			Ia = / /g,
			Ua = /[^\w\s.|`]/g,
			Va = function(a) {
				return a.replace(Ua, "\\$&")
			}, sa = {
				focusin: 0,
				focusout: 0
			};
		c.event = {
			add: function(a, b, d, e) {
				if (!(a.nodeType === 3 || a.nodeType === 8)) {
					if (c.isWindow(a) && a !== E && !a.frameElement)
						a = E;
					if (d === false)
						d = U;
					var f, h;
					if (d.handler) {
						f = d;
						d = f.handler
					}
					if (!d.guid)
						d.guid = c.guid++;
					if (h = c.data(a)) {
						var k = a.nodeType ? "events" : "__events__",
							l = h[k],
							n = h.handle;
						if (typeof l === "function") {
							n = l.handle;
							l = l.events
						} else if (!l) {
							a.nodeType || (h[k] = h = function() {});
							h.events = l = {}
						}
						if (!n)
							h.handle = n = function() {
								return typeof c !== "undefined" && !c.event.triggered ? c.event.handle.apply(n.elem, arguments) : A
							};
						n.elem = a;
						b = b.split(" ");
						for (var s = 0, v; k = b[s++];) {
							h = f ? c.extend({}, f) : {
								handler: d,
								data: e
							};
							if (k.indexOf(".") > -1) {
								v = k.split(".");
								k = v.shift();
								h.namespace = v.slice(0).sort().join(".")
							} else {
								v = [];
								h.namespace = ""
							}
							h.type = k;
							if (!h.guid)
								h.guid = d.guid;
							var B = l[k],
								D = c.event.special[k] || {};
							if (!B) {
								B = l[k] = [];
								if (!D.setup || D.setup.call(a, e, v, n) === false)
									if (a.addEventListener)
										a.addEventListener(k, n, false);
									else
										a.attachEvent && a.attachEvent("on" + k, n)
							}
							if (D.add) {
								D.add.call(a, h);
								if (!h.handler.guid)
									h.handler.guid = d.guid
							}
							B.push(h);
							c.event.global[k] = true
						}
						a = null
					}
				}
			},
			global: {},
			remove: function(a, b, d, e) {
				if (!(a.nodeType === 3 || a.nodeType === 8)) {
					if (d === false)
						d = U;
					var f, h, k = 0,
						l, n, s, v, B, D, H = a.nodeType ? "events" : "__events__",
						w = c.data(a),
						G = w && w[H];
					if (w && G) {
						if (typeof G === "function") {
							w = G;
							G = G.events
						}
						if (b && b.type) {
							d = b.handler;
							b = b.type
						}
						if (!b || typeof b === "string" && b.charAt(0) === ".") {
							b = b || "";
							for (f in G)
								c.event.remove(a, f + b)
						} else {
							for (b = b.split(" "); f = b[k++];) {
								v = f;
								l = f.indexOf(".") < 0;
								n = [];
								if (!l) {
									n = f.split(".");
									f = n.shift();
									s = RegExp("(^|\\.)" + c.map(n.slice(0).sort(), Va).join("\\.(?:.*\\.)?") + "(\\.|$)")
								}
								if (B = G[f])
									if (d) {
										v = c.event.special[f] || {};
										for (h = e || 0; h < B.length; h++) {
											D = B[h];
											if (d.guid === D.guid) {
												if (l || s.test(D.namespace)) {
													e == null && B.splice(h--, 1);
													v.remove && v.remove.call(a, D)
												}
												if (e != null)
													break
											}
										}
										if (B.length === 0 || e != null && B.length === 1) {
											if (!v.teardown || v.teardown.call(a, n) === false)
												c.removeEvent(a, f, w.handle);
											delete G[f]
										}
									} else
										for (h = 0; h < B.length; h++) {
											D = B[h];
											if (l || s.test(D.namespace)) {
												c.event.remove(a, v, D.handler, h);
												B.splice(h--, 1)
											}
										}
							}
							if (c.isEmptyObject(G)) {
								if (b = w.handle)
									b.elem = null;
								delete w.events;
								delete w.handle;
								if (typeof w === "function")
									c.removeData(a, H);
								else
									c.isEmptyObject(w) && c.removeData(a)
							}
						}
					}
				}
			},
			trigger: function(a, b, d, e) {
				var f = a.type || a;
				if (!e) {
					a = typeof a === "object" ? a[c.expando] ? a : c.extend(c.Event(f), a) : c.Event(f);
					if (f.indexOf("!") >= 0) {
						a.type = f = f.slice(0, -1);
						a.exclusive = true
					}
					if (!d) {
						a.stopPropagation();
						c.event.global[f] && c.each(c.cache, function() {
							this.events && this.events[f] && c.event.trigger(a, b, this.handle.elem)
						})
					}
					if (!d || d.nodeType === 3 || d.nodeType === 8)
						return A;
					a.result = A;
					a.target = d;
					b = c.makeArray(b);
					b.unshift(a)
				}
				a.currentTarget = d;
				(e = d.nodeType ? c.data(d, "handle") : (c.data(d, "__events__") || {}).handle) && e.apply(d, b);
				e = d.parentNode || d.ownerDocument;
				try {
					if (!(d && d.nodeName && c.noData[d.nodeName.toLowerCase()]))
						if (d["on" + f] && d["on" + f].apply(d, b) === false) {
							a.result = false;
							a.preventDefault()
						}
				} catch (h) {}
				if (!a.isPropagationStopped() && e)
					c.event.trigger(a, b, e, true);
				else if (!a.isDefaultPrevented()) {
					e = a.target;
					var k, l = f.replace(X, ""),
						n = c.nodeName(e, "a") && l === "click",
						s = c.event.special[l] || {};
					if ((!s._default || s._default.call(d, a) === false) && !n && !(e && e.nodeName && c.noData[e.nodeName.toLowerCase()])) {
						try {
							if (e[l]) {
								if (k = e["on" + l])
									e["on" + l] = null;
								c.event.triggered = true;
								e[l]()
							}
						} catch (v) {}
						if (k)
							e["on" + l] = k;
						c.event.triggered = false
					}
				}
			},
			handle: function(a) {
				var b, d, e;
				d = [];
				var f, h = c.makeArray(arguments);
				a = h[0] = c.event.fix(a || E.event);
				a.currentTarget = this;
				b = a.type.indexOf(".") < 0 && !a.exclusive;
				if (!b) {
					e = a.type.split(".");
					a.type = e.shift();
					d = e.slice(0).sort();
					e = RegExp("(^|\\.)" + d.join("\\.(?:.*\\.)?") + "(\\.|$)")
				}
				a.namespace = a.namespace || d.join(".");
				f = c.data(this, this.nodeType ? "events" : "__events__");
				if (typeof f === "function")
					f = f.events;
				d = (f || {})[a.type];
				if (f && d) {
					d = d.slice(0);
					f = 0;
					for (var k = d.length; f < k; f++) {
						var l = d[f];
						if (b || e.test(l.namespace)) {
							a.handler = l.handler;
							a.data = l.data;
							a.handleObj = l;
							l = l.handler.apply(this, h);
							if (l !== A) {
								a.result = l;
								if (l === false) {
									a.preventDefault();
									a.stopPropagation()
								}
							}
							if (a.isImmediatePropagationStopped())
								break
						}
					}
				}
				return a.result
			},
			props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
			fix: function(a) {
				if (a[c.expando])
					return a;
				var b = a;
				a = c.Event(b);
				for (var d = this.props.length, e; d;) {
					e = this.props[--d];
					a[e] = b[e]
				}
				if (!a.target)
					a.target = a.srcElement || u;
				if (a.target.nodeType === 3)
					a.target = a.target.parentNode;
				if (!a.relatedTarget && a.fromElement)
					a.relatedTarget = a.fromElement === a.target ? a.toElement : a.fromElement;
				if (a.pageX == null && a.clientX != null) {
					b = u.documentElement;
					d = u.body;
					a.pageX = a.clientX + (b && b.scrollLeft || d && d.scrollLeft || 0) - (b && b.clientLeft || d && d.clientLeft || 0);
					a.pageY = a.clientY + (b && b.scrollTop || d && d.scrollTop || 0) - (b && b.clientTop || d && d.clientTop || 0)
				}
				if (a.which == null && (a.charCode != null || a.keyCode != null))
					a.which = a.charCode != null ? a.charCode : a.keyCode;
				if (!a.metaKey && a.ctrlKey)
					a.metaKey = a.ctrlKey;
				if (!a.which && a.button !== A)
					a.which = a.button & 1 ? 1 : a.button & 2 ? 3 : a.button & 4 ? 2 : 0;
				return a
			},
			guid: 1E8,
			proxy: c.proxy,
			special: {
				ready: {
					setup: c.bindReady,
					teardown: c.noop
				},
				live: {
					add: function(a) {
						c.event.add(this, Y(a.origType, a.selector), c.extend({}, a, {
							handler: Ga,
							guid: a.handler.guid
						}))
					},
					remove: function(a) {
						c.event.remove(this, Y(a.origType, a.selector), a)
					}
				},
				beforeunload: {
					setup: function(a, b, d) {
						if (c.isWindow(this))
							this.onbeforeunload = d
					},
					teardown: function(a, b) {
						if (this.onbeforeunload === b)
							this.onbeforeunload = null
					}
				}
			}
		};
		c.removeEvent = u.removeEventListener ? function(a, b, d) {
			a.removeEventListener && a.removeEventListener(b, d, false)
		} : function(a, b, d) {
			a.detachEvent && a.detachEvent("on" + b, d)
		};
		c.Event = function(a) {
			if (!this.preventDefault)
				return new c.Event(a);
			if (a && a.type) {
				this.originalEvent = a;
				this.type = a.type
			} else
				this.type = a;
			this.timeStamp = c.now();
			this[c.expando] = true
		};
		c.Event.prototype = {
			preventDefault: function() {
				this.isDefaultPrevented = ba;
				var a = this.originalEvent;
				if (a)
					if (a.preventDefault)
						a.preventDefault();
					else
						a.returnValue = false
			},
			stopPropagation: function() {
				this.isPropagationStopped = ba;
				var a = this.originalEvent;
				if (a) {
					a.stopPropagation && a.stopPropagation();
					a.cancelBubble = true
				}
			},
			stopImmediatePropagation: function() {
				this.isImmediatePropagationStopped = ba;
				this.stopPropagation()
			},
			isDefaultPrevented: U,
			isPropagationStopped: U,
			isImmediatePropagationStopped: U
		};
		var ta = function(a) {
			var b = a.relatedTarget;
			try {
				for (; b && b !== this;)
					b = b.parentNode;
				if (b !== this) {
					a.type = a.data;
					c.event.handle.apply(this, arguments)
				}
			} catch (d) {}
		}, ua = function(a) {
				a.type = a.data;
				c.event.handle.apply(this, arguments)
			};
		c.each({
			mouseenter: "mouseover",
			mouseleave: "mouseout"
		}, function(a, b) {
			c.event.special[a] = {
				setup: function(d) {
					c.event.add(this, b, d && d.selector ? ua : ta, a)
				},
				teardown: function(d) {
					c.event.remove(this, b, d && d.selector ? ua : ta)
				}
			}
		});
		if (!c.support.submitBubbles)
			c.event.special.submit = {
				setup: function() {
					if (this.nodeName.toLowerCase() !== "form") {
						c.event.add(this, "click.specialSubmit", function(a) {
							var b = a.target,
								d = b.type;
							if ((d === "submit" || d === "image") && c(b).closest("form").length) {
								a.liveFired = A;
								return ja("submit", this, arguments)
							}
						});
						c.event.add(this, "keypress.specialSubmit", function(a) {
							var b = a.target,
								d = b.type;
							if ((d === "text" || d === "password") && c(b).closest("form").length && a.keyCode === 13) {
								a.liveFired = A;
								return ja("submit", this, arguments)
							}
						})
					} else
						return false
				},
				teardown: function() {
					c.event.remove(this, ".specialSubmit")
				}
			};
		if (!c.support.changeBubbles) {
			var V, va = function(a) {
					var b = a.type,
						d = a.value;
					if (b === "radio" || b === "checkbox")
						d = a.checked;
					else if (b === "select-multiple")
						d = a.selectedIndex > -1 ? c.map(a.options, function(e) {
							return e.selected
						}).join("-") : "";
					else if (a.nodeName.toLowerCase() === "select")
						d = a.selectedIndex;
					return d
				}, Z = function(a, b) {
					var d = a.target,
						e, f;
					if (!(!ha.test(d.nodeName) || d.readOnly)) {
						e = c.data(d, "_change_data");
						f = va(d);
						if (a.type !== "focusout" || d.type !== "radio")
							c.data(d, "_change_data", f);
						if (!(e === A || f === e))
							if (e != null || f) {
								a.type = "change";
								a.liveFired = A;
								return c.event.trigger(a, b, d)
							}
					}
				};
			c.event.special.change = {
				filters: {
					focusout: Z,
					beforedeactivate: Z,
					click: function(a) {
						var b = a.target,
							d = b.type;
						if (d === "radio" || d === "checkbox" || b.nodeName.toLowerCase() === "select")
							return Z.call(this, a)
					},
					keydown: function(a) {
						var b = a.target,
							d = b.type;
						if (a.keyCode === 13 && b.nodeName.toLowerCase() !== "textarea" || a.keyCode === 32 && (d === "checkbox" || d === "radio") || d === "select-multiple")
							return Z.call(this, a)
					},
					beforeactivate: function(a) {
						a = a.target;
						c.data(a, "_change_data", va(a))
					}
				},
				setup: function() {
					if (this.type === "file")
						return false;
					for (var a in V)
						c.event.add(this, a + ".specialChange", V[a]);
					return ha.test(this.nodeName)
				},
				teardown: function() {
					c.event.remove(this, ".specialChange");
					return ha.test(this.nodeName)
				}
			};
			V = c.event.special.change.filters;
			V.focus = V.beforeactivate
		}
		u.addEventListener && c.each({
			focus: "focusin",
			blur: "focusout"
		}, function(a, b) {
			function d(e) {
				e = c.event.fix(e);
				e.type = b;
				return c.event.trigger(e, null, e.target)
			}
			c.event.special[b] = {
				setup: function() {
					sa[b]++ === 0 && u.addEventListener(a, d, true)
				},
				teardown: function() {
					--sa[b] === 0 && u.removeEventListener(a, d, true)
				}
			}
		});
		c.each(["bind", "one"], function(a, b) {
			c.fn[b] = function(d, e, f) {
				if (typeof d === "object") {
					for (var h in d)
						this[b](h, e, d[h], f);
					return this
				}
				if (c.isFunction(e) || e === false) {
					f = e;
					e = A
				}
				var k = b === "one" ? c.proxy(f, function(n) {
					c(this).unbind(n, k);
					return f.apply(this, arguments)
				}) : f;
				if (d === "unload" && b !== "one")
					this.one(d, e, f);
				else {
					h = 0;
					for (var l = this.length; h < l; h++)
						c.event.add(this[h], d, k, e)
				}
				return this
			}
		});
		c.fn.extend({
			unbind: function(a, b) {
				if (typeof a === "object" && !a.preventDefault)
					for (var d in a)
						this.unbind(d, a[d]);
				else {
					d = 0;
					for (var e = this.length; d < e; d++)
						c.event.remove(this[d], a, b)
				}
				return this
			},
			delegate: function(a, b, d, e) {
				return this.live(b, d, e, a)
			},
			undelegate: function(a, b, d) {
				return arguments.length === 0 ? this.unbind("live") : this.die(b, null, d, a)
			},
			trigger: function(a, b) {
				return this.each(function() {
					c.event.trigger(a, b, this)
				})
			},
			triggerHandler: function(a, b) {
				if (this[0]) {
					var d = c.Event(a);
					d.preventDefault();
					d.stopPropagation();
					c.event.trigger(d, b, this[0]);
					return d.result
				}
			},
			toggle: function(a) {
				for (var b = arguments, d = 1; d < b.length;)
					c.proxy(a, b[d++]);
				return this.click(c.proxy(a, function(e) {
					var f = (c.data(this, "lastToggle" + a.guid) || 0) % d;
					c.data(this, "lastToggle" + a.guid, f + 1);
					e.preventDefault();
					return b[f].apply(this, arguments) || false
				}))
			},
			hover: function(a, b) {
				return this.mouseenter(a).mouseleave(b || a)
			}
		});
		var wa = {
			focus: "focusin",
			blur: "focusout",
			mouseenter: "mouseover",
			mouseleave: "mouseout"
		};
		c.each(["live", "die"], function(a, b) {
			c.fn[b] = function(d, e, f, h) {
				var k, l = 0,
					n, s, v = h || this.selector;
				h = h ? this : c(this.context);
				if (typeof d === "object" && !d.preventDefault) {
					for (k in d)
						h[b](k, e, d[k], v);
					return this
				}
				if (c.isFunction(e)) {
					f = e;
					e = A
				}
				for (d = (d || "").split(" ");
					(k = d[l++]) != null;) {
					n = X.exec(k);
					s = "";
					if (n) {
						s = n[0];
						k = k.replace(X, "")
					}
					if (k === "hover")
						d.push("mouseenter" + s, "mouseleave" + s);
					else {
						n = k;
						if (k === "focus" || k === "blur") {
							d.push(wa[k] + s);
							k += s
						} else
							k = (wa[k] || k) + s;
						if (b === "live") {
							s = 0;
							for (var B = h.length; s < B; s++)
								c.event.add(h[s], "live." + Y(k, v), {
									data: e,
									selector: v,
									handler: f,
									origType: k,
									origHandler: f,
									preType: n
								})
						} else
							h.unbind("live." + Y(k, v), f)
					}
				}
				return this
			}
		});
		c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function(a, b) {
			c.fn[b] = function(d, e) {
				if (e == null) {
					e = d;
					d = null
				}
				return arguments.length > 0 ? this.bind(b, d, e) : this.trigger(b)
			};
			if (c.attrFn)
				c.attrFn[b] = true
		});
		E.attachEvent && !E.addEventListener && c(E).bind("unload", function() {
			for (var a in c.cache)
				if (c.cache[a].handle)
					try {
						c.event.remove(c.cache[a].handle.elem)
					} catch (b) {}
		});
		(function() {
			function a(g, j, o, m, p, q) {
				p = 0;
				for (var t = m.length; p < t; p++) {
					var x = m[p];
					if (x) {
						x = x[g];
						for (var C = false; x;) {
							if (x.sizcache === o) {
								C = m[x.sizset];
								break
							}
							if (x.nodeType === 1 && !q) {
								x.sizcache = o;
								x.sizset = p
							}
							if (x.nodeName.toLowerCase() === j) {
								C = x;
								break
							}
							x = x[g]
						}
						m[p] = C
					}
				}
			}

			function b(g, j, o, m, p, q) {
				p = 0;
				for (var t = m.length; p < t; p++) {
					var x = m[p];
					if (x) {
						x = x[g];
						for (var C = false; x;) {
							if (x.sizcache === o) {
								C = m[x.sizset];
								break
							}
							if (x.nodeType === 1) {
								if (!q) {
									x.sizcache = o;
									x.sizset = p
								}
								if (typeof j !== "string") {
									if (x === j) {
										C = true;
										break
									}
								} else if (l.filter(j, [x]).length > 0) {
									C = x;
									break
								}
							}
							x = x[g]
						}
						m[p] = C
					}
				}
			}
			var d = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
				e = 0,
				f = Object.prototype.toString,
				h = false,
				k = true;
			[0, 0].sort(function() {
					k = false;
					return 0
				});
			var l = function(g, j, o, m) {
				o = o || [];
				var p = j = j || u;
				if (j.nodeType !== 1 && j.nodeType !== 9)
					return [];
				if (!g || typeof g !== "string")
					return o;
				var q = [],
					t, x, C, P, N = true,
					R = l.isXML(j),
					Q = g,
					L;
				do {
					d.exec("");
					if (t = d.exec(Q)) {
						Q = t[3];
						q.push(t[1]);
						if (t[2]) {
							P = t[3];
							break
						}
					}
				}
				while (t);
				if (q.length > 1 && s.exec(g))
					if (q.length === 2 && n.relative[q[0]])
						x = M(q[0] + q[1], j);
					else
						for (x = n.relative[q[0]] ? [j] : l(q.shift(), j); q.length;) {
							g = q.shift();
							if (n.relative[g])
								g += q.shift();
							x = M(g, x)
						} else {
							if (!m && q.length > 1 && j.nodeType === 9 && !R && n.match.ID.test(q[0]) && !n.match.ID.test(q[q.length - 1])) {
								t = l.find(q.shift(), j, R);
								j = t.expr ? l.filter(t.expr, t.set)[0] : t.set[0]
							}
							if (j) {
								t = m ? {
									expr: q.pop(),
									set: D(m)
								} : l.find(q.pop(), q.length === 1 && (q[0] === "~" || q[0] === "+") && j.parentNode ? j.parentNode : j, R);
								x = t.expr ? l.filter(t.expr, t.set) : t.set;
								if (q.length > 0)
									C = D(x);
								else
									N = false;
								for (; q.length;) {
									t = L = q.pop();
									if (n.relative[L])
										t = q.pop();
									else
										L = "";
									if (t == null)
										t = j;
									n.relative[L](C, t, R)
								}
							} else
								C = []
						}
				C || (C = x);
				C || l.error(L || g);
				if (f.call(C) === "[object Array]")
					if (N)
						if (j && j.nodeType === 1)
							for (g = 0; C[g] != null; g++) {
								if (C[g] && (C[g] === true || C[g].nodeType === 1 && l.contains(j, C[g])))
									o.push(x[g])
							} else
								for (g = 0; C[g] != null; g++)
									C[g] && C[g].nodeType === 1 && o.push(x[g]);
						else
							o.push.apply(o, C);
						else
							D(C, o);
				if (P) {
					l(P, p, o, m);
					l.uniqueSort(o)
				}
				return o
			};
			l.uniqueSort = function(g) {
				if (w) {
					h = k;
					g.sort(w);
					if (h)
						for (var j = 1; j < g.length; j++)
							g[j] === g[j - 1] && g.splice(j--, 1)
				}
				return g
			};
			l.matches = function(g, j) {
				return l(g, null, null, j)
			};
			l.matchesSelector = function(g, j) {
				return l(j, null, null, [g]).length > 0
			};
			l.find = function(g, j, o) {
				var m;
				if (!g)
					return [];
				for (var p = 0, q = n.order.length; p < q; p++) {
					var t = n.order[p],
						x;
					if (x = n.leftMatch[t].exec(g)) {
						var C = x[1];
						x.splice(1, 1);
						if (C.substr(C.length - 1) !== "\\") {
							x[1] = (x[1] || "").replace(/\\/g, "");
							m = n.find[t](x, j, o);
							if (m != null) {
								g = g.replace(n.match[t], "");
								break
							}
						}
					}
				}
				m || (m = j.getElementsByTagName("*"));
				return {
					set: m,
					expr: g
				}
			};
			l.filter = function(g, j, o, m) {
				for (var p = g, q = [], t = j, x, C, P = j && j[0] && l.isXML(j[0]); g && j.length;) {
					for (var N in n.filter)
						if ((x = n.leftMatch[N].exec(g)) != null && x[2]) {
							var R = n.filter[N],
								Q, L;
							L = x[1];
							C = false;
							x.splice(1, 1);
							if (L.substr(L.length - 1) !== "\\") {
								if (t === q)
									q = [];
								if (n.preFilter[N])
									if (x = n.preFilter[N](x, t, o, q, m, P)) {
										if (x === true)
											continue
									} else
										C = Q = true;
								if (x)
									for (var i = 0;
										(L = t[i]) != null; i++)
										if (L) {
											Q = R(L, x, i, t);
											var r = m ^ !! Q;
											if (o && Q != null)
												if (r)
													C = true;
												else
													t[i] = false;
												else
											if (r) {
												q.push(L);
												C = true
											}
										}
								if (Q !== A) {
									o || (t = q);
									g = g.replace(n.match[N], "");
									if (!C)
										return [];
									break
								}
							}
						}
					if (g === p)
						if (C == null)
							l.error(g);
						else
							break;
					p = g
				}
				return t
			};
			l.error = function(g) {
				throw "Syntax error, unrecognized expression: " + g;
			};
			var n = l.selectors = {
				order: ["ID", "NAME", "TAG"],
				match: {
					ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
					CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
					NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
					ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
					TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
					CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/,
					POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
					PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
				},
				leftMatch: {},
				attrMap: {
					"class": "className",
					"for": "htmlFor"
				},
				attrHandle: {
					href: function(g) {
						return g.getAttribute("href")
					}
				},
				relative: {
					"+": function(g, j) {
						var o = typeof j === "string",
							m = o && !/\W/.test(j);
						o = o && !m;
						if (m)
							j = j.toLowerCase();
						m = 0;
						for (var p = g.length, q; m < p; m++)
							if (q = g[m]) {
								for (;
									(q = q.previousSibling) && q.nodeType !== 1;);
								g[m] = o || q && q.nodeName.toLowerCase() === j ? q || false : q === j
							}
						o && l.filter(j, g, true)
					},
					">": function(g, j) {
						var o = typeof j === "string",
							m, p = 0,
							q = g.length;
						if (o && !/\W/.test(j))
							for (j = j.toLowerCase(); p < q; p++) {
								if (m = g[p]) {
									o = m.parentNode;
									g[p] = o.nodeName.toLowerCase() === j ? o : false
								}
							} else {
								for (; p < q; p++)
									if (m = g[p])
										g[p] = o ? m.parentNode : m.parentNode === j;
								o && l.filter(j, g, true)
							}
					},
					"": function(g, j, o) {
						var m = e++,
							p = b,
							q;
						if (typeof j === "string" && !/\W/.test(j)) {
							q = j = j.toLowerCase();
							p = a
						}
						p("parentNode", j, m, g, q, o)
					},
					"~": function(g, j, o) {
						var m = e++,
							p = b,
							q;
						if (typeof j === "string" && !/\W/.test(j)) {
							q = j = j.toLowerCase();
							p = a
						}
						p("previousSibling", j, m, g, q, o)
					}
				},
				find: {
					ID: function(g, j, o) {
						if (typeof j.getElementById !== "undefined" && !o)
							return (g = j.getElementById(g[1])) && g.parentNode ? [g] : []
					},
					NAME: function(g, j) {
						if (typeof j.getElementsByName !== "undefined") {
							for (var o = [], m = j.getElementsByName(g[1]), p = 0, q = m.length; p < q; p++)
								m[p].getAttribute("name") === g[1] && o.push(m[p]);
							return o.length === 0 ? null : o
						}
					},
					TAG: function(g, j) {
						return j.getElementsByTagName(g[1])
					}
				},
				preFilter: {
					CLASS: function(g, j, o, m, p, q) {
						g = " " + g[1].replace(/\\/g, "") + " ";
						if (q)
							return g;
						q = 0;
						for (var t;
							(t = j[q]) != null; q++)
							if (t)
								if (p ^ (t.className && (" " + t.className + " ").replace(/[\t\n]/g, " ").indexOf(g) >= 0))
									o || m.push(t);
								else
						if (o)
							j[q] = false;
						return false
					},
					ID: function(g) {
						return g[1].replace(/\\/g, "")
					},
					TAG: function(g) {
						return g[1].toLowerCase()
					},
					CHILD: function(g) {
						if (g[1] === "nth") {
							var j = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2] === "even" && "2n" || g[2] === "odd" && "2n+1" || !/\D/.test(g[2]) && "0n+" + g[2] || g[2]);
							g[2] = j[1] + (j[2] || 1) - 0;
							g[3] = j[3] - 0
						}
						g[0] = e++;
						return g
					},
					ATTR: function(g, j, o, m, p, q) {
						j = g[1].replace(/\\/g, "");
						if (!q && n.attrMap[j])
							g[1] = n.attrMap[j];
						if (g[2] === "~=")
							g[4] = " " + g[4] + " ";
						return g
					},
					PSEUDO: function(g, j, o, m, p) {
						if (g[1] === "not")
							if ((d.exec(g[3]) || "").length > 1 || /^\w/.test(g[3]))
								g[3] = l(g[3], null, null, j);
							else {
								g = l.filter(g[3], j, o, true ^ p);
								o || m.push.apply(m, g);
								return false
							} else
						if (n.match.POS.test(g[0]) || n.match.CHILD.test(g[0]))
							return true;
						return g
					},
					POS: function(g) {
						g.unshift(true);
						return g
					}
				},
				filters: {
					enabled: function(g) {
						return g.disabled === false && g.type !== "hidden"
					},
					disabled: function(g) {
						return g.disabled === true
					},
					checked: function(g) {
						return g.checked === true
					},
					selected: function(g) {
						return g.selected === true
					},
					parent: function(g) {
						return !!g.firstChild
					},
					empty: function(g) {
						return !g.firstChild
					},
					has: function(g, j, o) {
						return !!l(o[3], g).length
					},
					header: function(g) {
						return /h\d/i.test(g.nodeName)
					},
					text: function(g) {
						return "text" === g.type
					},
					radio: function(g) {
						return "radio" === g.type
					},
					checkbox: function(g) {
						return "checkbox" === g.type
					},
					file: function(g) {
						return "file" === g.type
					},
					password: function(g) {
						return "password" === g.type
					},
					submit: function(g) {
						return "submit" === g.type
					},
					image: function(g) {
						return "image" === g.type
					},
					reset: function(g) {
						return "reset" === g.type
					},
					button: function(g) {
						return "button" === g.type || g.nodeName.toLowerCase() === "button"
					},
					input: function(g) {
						return /input|select|textarea|button/i.test(g.nodeName)
					}
				},
				setFilters: {
					first: function(g, j) {
						return j === 0
					},
					last: function(g, j, o, m) {
						return j === m.length - 1
					},
					even: function(g, j) {
						return j % 2 === 0
					},
					odd: function(g, j) {
						return j % 2 === 1
					},
					lt: function(g, j, o) {
						return j < o[3] - 0
					},
					gt: function(g, j, o) {
						return j > o[3] - 0
					},
					nth: function(g, j, o) {
						return o[3] -
							0 === j
					},
					eq: function(g, j, o) {
						return o[3] - 0 === j
					}
				},
				filter: {
					PSEUDO: function(g, j, o, m) {
						var p = j[1],
							q = n.filters[p];
						if (q)
							return q(g, o, j, m);
						else if (p === "contains")
							return (g.textContent || g.innerText || l.getText([g]) || "").indexOf(j[3]) >= 0;
						else if (p === "not") {
							j = j[3];
							o = 0;
							for (m = j.length; o < m; o++)
								if (j[o] === g)
									return false;
							return true
						} else
							l.error("Syntax error, unrecognized expression: " + p)
					},
					CHILD: function(g, j) {
						var o = j[1],
							m = g;
						switch (o) {
							case "only":
							case "first":
								for (; m = m.previousSibling;)
									if (m.nodeType === 1)
										return false;
								if (o === "first")
									return true;
								m = g;
							case "last":
								for (; m = m.nextSibling;)
									if (m.nodeType === 1)
										return false;
								return true;
							case "nth":
								o = j[2];
								var p = j[3];
								if (o === 1 && p === 0)
									return true;
								var q = j[0],
									t = g.parentNode;
								if (t && (t.sizcache !== q || !g.nodeIndex)) {
									var x = 0;
									for (m = t.firstChild; m; m = m.nextSibling)
										if (m.nodeType === 1)
											m.nodeIndex = ++x;
									t.sizcache = q
								}
								m = g.nodeIndex - p;
								return o === 0 ? m === 0 : m % o === 0 && m / o >= 0
						}
					},
					ID: function(g, j) {
						return g.nodeType === 1 && g.getAttribute("id") === j
					},
					TAG: function(g, j) {
						return j === "*" && g.nodeType === 1 || g.nodeName.toLowerCase() === j
					},
					CLASS: function(g, j) {
						return (" " + (g.className || g.getAttribute("class")) + " ").indexOf(j) > -1
					},
					ATTR: function(g, j) {
						var o = j[1];
						o = n.attrHandle[o] ? n.attrHandle[o](g) : g[o] != null ? g[o] : g.getAttribute(o);
						var m = o + "",
							p = j[2],
							q = j[4];
						return o == null ? p === "!=" : p === "=" ? m === q : p === "*=" ? m.indexOf(q) >= 0 : p === "~=" ? (" " + m + " ").indexOf(q) >= 0 : !q ? m && o !== false : p === "!=" ? m !== q : p === "^=" ? m.indexOf(q) === 0 : p === "$=" ? m.substr(m.length - q.length) === q : p === "|=" ? m === q || m.substr(0, q.length + 1) === q + "-" : false
					},
					POS: function(g, j, o, m) {
						var p = n.setFilters[j[2]];
						if (p)
							return p(g, o, j, m)
					}
				}
			}, s = n.match.POS,
				v = function(g, j) {
					return "\\" + (j - 0 + 1)
				}, B;
			for (B in n.match) {
				n.match[B] = RegExp(n.match[B].source + /(?![^\[]*\])(?![^\(]*\))/.source);
				n.leftMatch[B] = RegExp(/(^(?:.|\r|\n)*?)/.source + n.match[B].source.replace(/\\(\d+)/g, v))
			}
			var D = function(g, j) {
				g = Array.prototype.slice.call(g, 0);
				if (j) {
					j.push.apply(j, g);
					return j
				}
				return g
			};
			try {
				Array.prototype.slice.call(u.documentElement.childNodes, 0)
			} catch (H) {
				D = function(g, j) {
					var o = j || [],
						m = 0;
					if (f.call(g) === "[object Array]")
						Array.prototype.push.apply(o, g);
					else if (typeof g.length === "number")
						for (var p = g.length; m < p; m++)
							o.push(g[m]);
					else
						for (; g[m]; m++)
							o.push(g[m]);
					return o
				}
			}
			var w, G;
			if (u.documentElement.compareDocumentPosition)
				w = function(g, j) {
					if (g === j) {
						h = true;
						return 0
					}
					if (!g.compareDocumentPosition || !j.compareDocumentPosition)
						return g.compareDocumentPosition ? -1 : 1;
					return g.compareDocumentPosition(j) & 4 ? -1 : 1
				};
			else {
				w = function(g, j) {
					var o = [],
						m = [],
						p = g.parentNode,
						q = j.parentNode,
						t = p;
					if (g === j) {
						h = true;
						return 0
					} else if (p === q)
						return G(g, j);
					else if (p) {
						if (!q)
							return 1
					} else
						return -1;
					for (; t;) {
						o.unshift(t);
						t = t.parentNode
					}
					for (t = q; t;) {
						m.unshift(t);
						t = t.parentNode
					}
					p = o.length;
					q = m.length;
					for (t = 0; t < p && t < q; t++)
						if (o[t] !== m[t])
							return G(o[t], m[t]);
					return t === p ? G(g, m[t], -1) : G(o[t], j, 1)
				};
				G = function(g, j, o) {
					if (g === j)
						return o;
					for (g = g.nextSibling; g;) {
						if (g === j)
							return -1;
						g = g.nextSibling
					}
					return 1
				}
			}
			l.getText = function(g) {
				for (var j = "", o, m = 0; g[m]; m++) {
					o = g[m];
					if (o.nodeType === 3 || o.nodeType === 4)
						j += o.nodeValue;
					else if (o.nodeType !== 8)
						j += l.getText(o.childNodes)
				}
				return j
			};
			(function() {
				var g = u.createElement("div"),
					j = "script" + (new Date).getTime();
				g.innerHTML = "<a name='" + j + "'/>";
				var o = u.documentElement;
				o.insertBefore(g, o.firstChild);
				if (u.getElementById(j)) {
					n.find.ID = function(m, p, q) {
						if (typeof p.getElementById !== "undefined" && !q)
							return (p = p.getElementById(m[1])) ? p.id === m[1] || typeof p.getAttributeNode !== "undefined" && p.getAttributeNode("id").nodeValue === m[1] ? [p] : A : []
					};
					n.filter.ID = function(m, p) {
						var q = typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id");
						return m.nodeType === 1 && q && q.nodeValue === p
					}
				}
				o.removeChild(g);
				o = g = null
			})();
			(function() {
				var g = u.createElement("div");
				g.appendChild(u.createComment(""));
				if (g.getElementsByTagName("*").length > 0)
					n.find.TAG = function(j, o) {
						var m = o.getElementsByTagName(j[1]);
						if (j[1] === "*") {
							for (var p = [], q = 0; m[q]; q++)
								m[q].nodeType === 1 && p.push(m[q]);
							m = p
						}
						return m
					};
				g.innerHTML = "<a href='#'></a>";
				if (g.firstChild && typeof g.firstChild.getAttribute !== "undefined" && g.firstChild.getAttribute("href") !== "#")
					n.attrHandle.href = function(j) {
						return j.getAttribute("href", 2)
					};
				g = null
			})();
			u.querySelectorAll && function() {
				var g = l,
					j = u.createElement("div");
				j.innerHTML = "<p class='TEST'></p>";
				if (!(j.querySelectorAll && j.querySelectorAll(".TEST").length === 0)) {
					l = function(m, p, q, t) {
						p = p || u;
						if (!t && !l.isXML(p))
							if (p.nodeType === 9)
								try {
									return D(p.querySelectorAll(m), q)
								} catch (x) {} else if (p.nodeType === 1 && p.nodeName.toLowerCase() !== "object") {
									var C = p.id,
										P = p.id = "__sizzle__";
									try {
										return D(p.querySelectorAll("#" + P + " " + m), q)
									} catch (N) {} finally {
										if (C)
											p.id = C;
										else
											p.removeAttribute("id")
									}
								}
						return g(m, p, q, t)
					};
					for (var o in g)
						l[o] = g[o];
					j = null
				}
			}();
			(function() {
				var g = u.documentElement,
					j = g.matchesSelector || g.mozMatchesSelector || g.webkitMatchesSelector || g.msMatchesSelector,
					o = false;
				try {
					j.call(u.documentElement, ":sizzle")
				} catch (m) {
					o = true
				}
				if (j)
					l.matchesSelector = function(p, q) {
						try {
							if (o || !n.match.PSEUDO.test(q))
								return j.call(p, q)
						} catch (t) {}
						return l(q, null, null, [p]).length > 0
					}
			})();
			(function() {
				var g = u.createElement("div");
				g.innerHTML = "<div class='test e'></div><div class='test'></div>";
				if (!(!g.getElementsByClassName || g.getElementsByClassName("e").length === 0)) {
					g.lastChild.className = "e";
					if (g.getElementsByClassName("e").length !== 1) {
						n.order.splice(1, 0, "CLASS");
						n.find.CLASS = function(j, o, m) {
							if (typeof o.getElementsByClassName !== "undefined" && !m)
								return o.getElementsByClassName(j[1])
						};
						g = null
					}
				}
			})();
			l.contains = u.documentElement.contains ? function(g, j) {
				return g !== j && (g.contains ? g.contains(j) : true)
			} : function(g, j) {
				return !!(g.compareDocumentPosition(j) & 16)
			};
			l.isXML = function(g) {
				return (g = (g ? g.ownerDocument || g : 0).documentElement) ? g.nodeName !== "HTML" : false
			};
			var M = function(g, j) {
				for (var o = [], m = "", p, q = j.nodeType ? [j] : j; p = n.match.PSEUDO.exec(g);) {
					m += p[0];
					g = g.replace(n.match.PSEUDO, "")
				}
				g = n.relative[g] ? g + "*" : g;
				p = 0;
				for (var t = q.length; p < t; p++)
					l(g, q[p], o);
				return l.filter(m, o)
			};
			c.find = l;
			c.expr = l.selectors;
			c.expr[":"] = c.expr.filters;
			c.unique = l.uniqueSort;
			c.text = l.getText;
			c.isXMLDoc = l.isXML;
			c.contains = l.contains
		})();
		var Wa = /Until$/,
			Xa = /^(?:parents|prevUntil|prevAll)/,
			Ya = /,/,
			Ja = /^.[^:#\[\.,]*$/,
			Za = Array.prototype.slice,
			$a = c.expr.match.POS;
		c.fn.extend({
			find: function(a) {
				for (var b = this.pushStack("", "find", a), d = 0, e = 0, f = this.length; e < f; e++) {
					d = b.length;
					c.find(a, this[e], b);
					if (e > 0)
						for (var h = d; h < b.length; h++)
							for (var k = 0; k < d; k++)
								if (b[k] === b[h]) {
									b.splice(h--, 1);
									break
								}
				}
				return b
			},
			has: function(a) {
				var b = c(a);
				return this.filter(function() {
					for (var d = 0, e = b.length; d < e; d++)
						if (c.contains(this, b[d]))
							return true
				})
			},
			not: function(a) {
				return this.pushStack(ka(this, a, false), "not", a)
			},
			filter: function(a) {
				return this.pushStack(ka(this, a, true), "filter", a)
			},
			is: function(a) {
				return !!a && c.filter(a, this).length > 0
			},
			closest: function(a, b) {
				var d = [],
					e, f, h = this[0];
				if (c.isArray(a)) {
					var k = {}, l, n = 1;
					if (h && a.length) {
						e = 0;
						for (f = a.length; e < f; e++) {
							l = a[e];
							k[l] || (k[l] = c.expr.match.POS.test(l) ? c(l, b || this.context) : l)
						}
						for (; h && h.ownerDocument && h !== b;) {
							for (l in k) {
								e = k[l];
								if (e.jquery ? e.index(h) > -1 : c(h).is(e))
									d.push({
										selector: l,
										elem: h,
										level: n
									})
							}
							h = h.parentNode;
							n++
						}
					}
					return d
				}
				k = $a.test(a) ? c(a, b || this.context) : null;
				e = 0;
				for (f = this.length; e < f; e++)
					for (h = this[e]; h;)
						if (k ? k.index(h) > -1 : c.find.matchesSelector(h, a)) {
							d.push(h);
							break
						} else {
							h = h.parentNode;
							if (!h || !h.ownerDocument || h === b)
								break
						}
				d = d.length > 1 ? c.unique(d) : d;
				return this.pushStack(d, "closest", a)
			},
			index: function(a) {
				if (!a || typeof a === "string")
					return c.inArray(this[0], a ? c(a) : this.parent().children());
				return c.inArray(a.jquery ? a[0] : a, this)
			},
			add: function(a, b) {
				var d = typeof a === "string" ? c(a, b || this.context) : c.makeArray(a),
					e = c.merge(this.get(), d);
				return this.pushStack(!d[0] || !d[0].parentNode || d[0].parentNode.nodeType === 11 || !e[0] || !e[0].parentNode || e[0].parentNode.nodeType === 11 ? e : c.unique(e))
			},
			andSelf: function() {
				return this.add(this.prevObject)
			}
		});
		c.each({
			parent: function(a) {
				return (a = a.parentNode) && a.nodeType !== 11 ? a : null
			},
			parents: function(a) {
				return c.dir(a, "parentNode")
			},
			parentsUntil: function(a, b, d) {
				return c.dir(a, "parentNode", d)
			},
			next: function(a) {
				return c.nth(a, 2, "nextSibling")
			},
			prev: function(a) {
				return c.nth(a, 2, "previousSibling")
			},
			nextAll: function(a) {
				return c.dir(a, "nextSibling")
			},
			prevAll: function(a) {
				return c.dir(a, "previousSibling")
			},
			nextUntil: function(a, b, d) {
				return c.dir(a, "nextSibling", d)
			},
			prevUntil: function(a, b, d) {
				return c.dir(a, "previousSibling", d)
			},
			siblings: function(a) {
				return c.sibling(a.parentNode.firstChild, a)
			},
			children: function(a) {
				return c.sibling(a.firstChild)
			},
			contents: function(a) {
				return c.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : c.makeArray(a.childNodes)
			}
		}, function(a, b) {
			c.fn[a] = function(d, e) {
				var f = c.map(this, b, d);
				Wa.test(a) || (e = d);
				if (e && typeof e === "string")
					f = c.filter(e, f);
				f = this.length > 1 ? c.unique(f) : f;
				if ((this.length > 1 || Ya.test(e)) && Xa.test(a))
					f = f.reverse();
				return this.pushStack(f, a, Za.call(arguments).join(","))
			}
		});
		c.extend({
			filter: function(a, b, d) {
				if (d)
					a = ":not(" + a + ")";
				return b.length === 1 ? c.find.matchesSelector(b[0], a) ? [b[0]] : [] : c.find.matches(a, b)
			},
			dir: function(a, b, d) {
				var e = [];
				for (a = a[b]; a && a.nodeType !== 9 && (d === A || a.nodeType !== 1 || !c(a).is(d));) {
					a.nodeType === 1 && e.push(a);
					a = a[b]
				}
				return e
			},
			nth: function(a, b, d) {
				b = b || 1;
				for (var e = 0; a; a = a[d])
					if (a.nodeType === 1 && ++e === b)
						break;
				return a
			},
			sibling: function(a, b) {
				for (var d = []; a; a = a.nextSibling)
					a.nodeType === 1 && a !== b && d.push(a);
				return d
			}
		});
		var xa = / jQuery\d+="(?:\d+|null)"/g,
			$ = /^\s+/,
			ya = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
			za = /<([\w:]+)/,
			ab = /<tbody/i,
			bb = /<|&#?\w+;/,
			Aa = /<(?:script|object|embed|option|style)/i,
			Ba = /checked\s*(?:[^=]|=\s*.checked.)/i,
			cb = /\=([^="'>\s]+\/)>/g,
			O = {
				option: [1, "<select multiple='multiple'>", "</select>"],
				legend: [1, "<fieldset>", "</fieldset>"],
				thead: [1, "<table>", "</table>"],
				tr: [2, "<table><tbody>", "</tbody></table>"],
				td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
				col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
				area: [1, "<map>", "</map>"],
				_default: [0, "", ""]
			};
		O.optgroup = O.option;
		O.tbody = O.tfoot = O.colgroup = O.caption = O.thead;
		O.th = O.td;
		if (!c.support.htmlSerialize)
			O._default = [1, "div<div>", "</div>"];
		c.fn.extend({
			text: function(a) {
				if (c.isFunction(a))
					return this.each(function(b) {
						var d = c(this);
						d.text(a.call(this, b, d.text()))
					});
				if (typeof a !== "object" && a !== A)
					return this.empty().append((this[0] && this[0].ownerDocument || u).createTextNode(a));
				return c.text(this)
			},
			wrapAll: function(a) {
				if (c.isFunction(a))
					return this.each(function(d) {
						c(this).wrapAll(a.call(this, d))
					});
				if (this[0]) {
					var b = c(a, this[0].ownerDocument).eq(0).clone(true);
					this[0].parentNode && b.insertBefore(this[0]);
					b.map(function() {
						for (var d = this; d.firstChild && d.firstChild.nodeType === 1;)
							d = d.firstChild;
						return d
					}).append(this)
				}
				return this
			},
			wrapInner: function(a) {
				if (c.isFunction(a))
					return this.each(function(b) {
						c(this).wrapInner(a.call(this, b))
					});
				return this.each(function() {
					var b = c(this),
						d = b.contents();
					d.length ? d.wrapAll(a) : b.append(a)
				})
			},
			wrap: function(a) {
				return this.each(function() {
					c(this).wrapAll(a)
				})
			},
			unwrap: function() {
				return this.parent().each(function() {
					c.nodeName(this, "body") || c(this).replaceWith(this.childNodes)
				}).end()
			},
			append: function() {
				return this.domManip(arguments, true, function(a) {
					this.nodeType === 1 && this.appendChild(a)
				})
			},
			prepend: function() {
				return this.domManip(arguments, true, function(a) {
					this.nodeType === 1 && this.insertBefore(a, this.firstChild)
				})
			},
			before: function() {
				if (this[0] && this[0].parentNode)
					return this.domManip(arguments, false, function(b) {
						this.parentNode.insertBefore(b, this)
					});
				else if (arguments.length) {
					var a = c(arguments[0]);
					a.push.apply(a, this.toArray());
					return this.pushStack(a, "before", arguments)
				}
			},
			after: function() {
				if (this[0] && this[0].parentNode)
					return this.domManip(arguments, false, function(b) {
						this.parentNode.insertBefore(b, this.nextSibling)
					});
				else if (arguments.length) {
					var a = this.pushStack(this, "after", arguments);
					a.push.apply(a, c(arguments[0]).toArray());
					return a
				}
			},
			remove: function(a, b) {
				for (var d = 0, e;
					(e = this[d]) != null; d++)
					if (!a || c.filter(a, [e]).length) {
						if (!b && e.nodeType === 1) {
							c.cleanData(e.getElementsByTagName("*"));
							c.cleanData([e])
						}
						e.parentNode && e.parentNode.removeChild(e)
					}
				return this
			},
			empty: function() {
				for (var a = 0, b;
					(b = this[a]) != null; a++)
					for (b.nodeType === 1 && c.cleanData(b.getElementsByTagName("*")); b.firstChild;)
						b.removeChild(b.firstChild);
				return this
			},
			clone: function(a) {
				var b = this.map(function() {
					if (!c.support.noCloneEvent && !c.isXMLDoc(this)) {
						var d = this.outerHTML,
							e = this.ownerDocument;
						if (!d) {
							d = e.createElement("div");
							d.appendChild(this.cloneNode(true));
							d = d.innerHTML
						}
						return c.clean([d.replace(xa, "").replace(cb, '="$1">').replace($, "")], e)[0]
					} else
						return this.cloneNode(true)
				});
				if (a === true) {
					la(this, b);
					la(this.find("*"), b.find("*"))
				}
				return b
			},
			html: function(a) {
				if (a === A)
					return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(xa, "") : null;
				else if (typeof a === "string" && !Aa.test(a) && (c.support.leadingWhitespace || !$.test(a)) && !O[(za.exec(a) || ["", ""])[1].toLowerCase()]) {
					a = a.replace(ya, "<$1></$2>");
					try {
						for (var b = 0, d = this.length; b < d; b++)
							if (this[b].nodeType === 1) {
								c.cleanData(this[b].getElementsByTagName("*"));
								this[b].innerHTML = a
							}
					} catch (e) {
						this.empty().append(a)
					}
				} else
					c.isFunction(a) ? this.each(function(f) {
						var h = c(this);
						h.html(a.call(this, f, h.html()))
					}) : this.empty().append(a);
				return this
			},
			replaceWith: function(a) {
				if (this[0] && this[0].parentNode) {
					if (c.isFunction(a))
						return this.each(function(b) {
							var d = c(this),
								e = d.html();
							d.replaceWith(a.call(this, b, e))
						});
					if (typeof a !== "string")
						a = c(a).detach();
					return this.each(function() {
						var b = this.nextSibling,
							d = this.parentNode;
						c(this).remove();
						b ? c(b).before(a) : c(d).append(a)
					})
				} else
					return this.pushStack(c(c.isFunction(a) ? a() : a), "replaceWith", a)
			},
			detach: function(a) {
				return this.remove(a, true)
			},
			domManip: function(a, b, d) {
				var e, f, h = a[0],
					k = [],
					l;
				if (!c.support.checkClone && arguments.length === 3 && typeof h === "string" && Ba.test(h))
					return this.each(function() {
						c(this).domManip(a, b, d, true)
					});
				if (c.isFunction(h))
					return this.each(function(s) {
						var v = c(this);
						a[0] = h.call(this, s, b ? v.html() : A);
						v.domManip(a, b, d)
					});
				if (this[0]) {
					e = h && h.parentNode;
					e = c.support.parentNode && e && e.nodeType === 11 && e.childNodes.length === this.length ? {
						fragment: e
					} : c.buildFragment(a, this, k);
					l = e.fragment;
					if (f = l.childNodes.length === 1 ? l = l.firstChild : l.firstChild) {
						b = b && c.nodeName(f, "tr");
						f = 0;
						for (var n = this.length; f < n; f++)
							d.call(b ? c.nodeName(this[f], "table") ? this[f].getElementsByTagName("tbody")[0] || this[f].appendChild(this[f].ownerDocument.createElement("tbody")) : this[f] : this[f], f > 0 || e.cacheable || this.length > 1 ? l.cloneNode(true) : l)
					}
					k.length && c.each(k, Ka)
				}
				return this
			}
		});
		c.buildFragment = function(a, b, d) {
			var e, f, h;
			b = b && b[0] ? b[0].ownerDocument || b[0] : u;
			if (a.length === 1 && typeof a[0] === "string" && a[0].length < 512 && b === u && !Aa.test(a[0]) && (c.support.checkClone || !Ba.test(a[0]))) {
				f = true;
				if (h = c.fragments[a[0]])
					if (h !== 1)
						e = h
			}
			if (!e) {
				e = b.createDocumentFragment();
				c.clean(a, b, e, d)
			}
			if (f)
				c.fragments[a[0]] = h ? e : 1;
			return {
				fragment: e,
				cacheable: f
			}
		};
		c.fragments = {};
		c.each({
			appendTo: "append",
			prependTo: "prepend",
			insertBefore: "before",
			insertAfter: "after",
			replaceAll: "replaceWith"
		}, function(a, b) {
			c.fn[a] = function(d) {
				var e = [];
				d = c(d);
				var f = this.length === 1 && this[0].parentNode;
				if (f && f.nodeType === 11 && f.childNodes.length === 1 && d.length === 1) {
					d[b](this[0]);
					return this
				} else {
					f = 0;
					for (var h = d.length; f < h; f++) {
						var k = (f > 0 ? this.clone(true) : this).get();
						c(d[f])[b](k);
						e = e.concat(k)
					}
					return this.pushStack(e, a, d.selector)
				}
			}
		});
		c.extend({
			clean: function(a, b, d, e) {
				b = b || u;
				if (typeof b.createElement === "undefined")
					b = b.ownerDocument || b[0] && b[0].ownerDocument || u;
				for (var f = [], h = 0, k;
					(k = a[h]) != null; h++) {
					if (typeof k === "number")
						k += "";
					if (k) {
						if (typeof k === "string" && !bb.test(k))
							k = b.createTextNode(k);
						else if (typeof k === "string") {
							k = k.replace(ya, "<$1></$2>");
							var l = (za.exec(k) || ["", ""])[1].toLowerCase(),
								n = O[l] || O._default,
								s = n[0],
								v = b.createElement("div");
							for (v.innerHTML = n[1] + k + n[2]; s--;)
								v = v.lastChild;
							if (!c.support.tbody) {
								s = ab.test(k);
								l = l === "table" && !s ? v.firstChild && v.firstChild.childNodes : n[1] === "<table>" && !s ? v.childNodes : [];
								for (n = l.length - 1; n >= 0; --n)
									c.nodeName(l[n], "tbody") && !l[n].childNodes.length && l[n].parentNode.removeChild(l[n])
							}!c.support.leadingWhitespace && $.test(k) && v.insertBefore(b.createTextNode($.exec(k)[0]), v.firstChild);
							k = v.childNodes
						}
						if (k.nodeType)
							f.push(k);
						else
							f = c.merge(f, k)
					}
				}
				if (d)
					for (h = 0; f[h]; h++)
						if (e && c.nodeName(f[h], "script") && (!f[h].type || f[h].type.toLowerCase() === "text/javascript"))
							e.push(f[h].parentNode ? f[h].parentNode.removeChild(f[h]) : f[h]);
						else {
							f[h].nodeType === 1 && f.splice.apply(f, [h + 1, 0].concat(c.makeArray(f[h].getElementsByTagName("script"))));
							d.appendChild(f[h])
						}
				return f
			},
			cleanData: function(a) {
				for (var b, d, e = c.cache, f = c.event.special, h = c.support.deleteExpando, k = 0, l;
					(l = a[k]) != null; k++)
					if (!(l.nodeName && c.noData[l.nodeName.toLowerCase()]))
						if (d = l[c.expando]) {
							if ((b = e[d]) && b.events)
								for (var n in b.events)
									f[n] ? c.event.remove(l, n) : c.removeEvent(l, n, b.handle);
							if (h)
								delete l[c.expando];
							else
								l.removeAttribute && l.removeAttribute(c.expando);
							delete e[d]
						}
			}
		});
		var Ca = /alpha\([^)]*\)/i,
			db = /opacity=([^)]*)/,
			eb = /-([a-z])/ig,
			fb = /([A-Z])/g,
			Da = /^-?\d+(?:px)?$/i,
			gb = /^-?\d/,
			hb = {
				position: "absolute",
				visibility: "hidden",
				display: "block"
			}, La = ["Left", "Right"],
			Ma = ["Top", "Bottom"],
			W, ib = u.defaultView && u.defaultView.getComputedStyle,
			jb = function(a, b) {
				return b.toUpperCase()
			};
		c.fn.css = function(a, b) {
			if (arguments.length === 2 && b === A)
				return this;
			return c.access(this, a, b, true, function(d, e, f) {
				return f !== A ? c.style(d, e, f) : c.css(d, e)
			})
		};
		c.extend({
			cssHooks: {
				opacity: {
					get: function(a, b) {
						if (b) {
							var d = W(a, "opacity", "opacity");
							return d === "" ? "1" : d
						} else
							return a.style.opacity
					}
				}
			},
			cssNumber: {
				zIndex: true,
				fontWeight: true,
				opacity: true,
				zoom: true,
				lineHeight: true
			},
			cssProps: {
				"float": c.support.cssFloat ? "cssFloat" : "styleFloat"
			},
			style: function(a, b, d, e) {
				if (!(!a || a.nodeType === 3 || a.nodeType === 8 || !a.style)) {
					var f, h = c.camelCase(b),
						k = a.style,
						l = c.cssHooks[h];
					b = c.cssProps[h] || h;
					if (d !== A) {
						if (!(typeof d === "number" && isNaN(d) || d == null)) {
							if (typeof d === "number" && !c.cssNumber[h])
								d += "px";
							if (!l || !("set" in l) || (d = l.set(a, d)) !== A)
								try {
									k[b] = d
								} catch (n) {}
						}
					} else {
						if (l && "get" in l && (f = l.get(a, false, e)) !== A)
							return f;
						return k[b]
					}
				}
			},
			css: function(a, b, d) {
				var e, f = c.camelCase(b),
					h = c.cssHooks[f];
				b = c.cssProps[f] || f;
				if (h && "get" in h && (e = h.get(a, true, d)) !== A)
					return e;
				else if (W)
					return W(a, b, f)
			},
			swap: function(a, b, d) {
				var e = {}, f;
				for (f in b) {
					e[f] = a.style[f];
					a.style[f] = b[f]
				}
				d.call(a);
				for (f in b)
					a.style[f] = e[f]
			},
			camelCase: function(a) {
				return a.replace(eb, jb)
			}
		});
		c.curCSS = c.css;
		c.each(["height", "width"], function(a, b) {
			c.cssHooks[b] = {
				get: function(d, e, f) {
					var h;
					if (e) {
						if (d.offsetWidth !== 0)
							h = ma(d, b, f);
						else
							c.swap(d, hb, function() {
								h = ma(d, b, f)
							});
						return h + "px"
					}
				},
				set: function(d, e) {
					if (Da.test(e)) {
						e = parseFloat(e);
						if (e >= 0)
							return e + "px"
					} else
						return e
				}
			}
		});
		if (!c.support.opacity)
			c.cssHooks.opacity = {
				get: function(a, b) {
					return db.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""
				},
				set: function(a, b) {
					var d = a.style;
					d.zoom = 1;
					var e = c.isNaN(b) ? "" : "alpha(opacity=" + b * 100 + ")",
						f = d.filter || "";
					d.filter = Ca.test(f) ? f.replace(Ca, e) : d.filter + " " + e
				}
			};
		if (ib)
			W = function(a, b, d) {
				var e;
				d = d.replace(fb, "-$1").toLowerCase();
				if (!(b = a.ownerDocument.defaultView))
					return A;
				if (b = b.getComputedStyle(a, null)) {
					e = b.getPropertyValue(d);
					if (e === "" && !c.contains(a.ownerDocument.documentElement, a))
						e = c.style(a, d)
				}
				return e
			};
		else if (u.documentElement.currentStyle)
			W = function(a, b) {
				var d, e, f = a.currentStyle && a.currentStyle[b],
					h = a.style;
				if (!Da.test(f) && gb.test(f)) {
					d = h.left;
					e = a.runtimeStyle.left;
					a.runtimeStyle.left = a.currentStyle.left;
					h.left = b === "fontSize" ? "1em" : f || 0;
					f = h.pixelLeft + "px";
					h.left = d;
					a.runtimeStyle.left = e
				}
				return f
			};
		if (c.expr && c.expr.filters) {
			c.expr.filters.hidden = function(a) {
				var b = a.offsetHeight;
				return a.offsetWidth === 0 && b === 0 || !c.support.reliableHiddenOffsets && (a.style.display || c.css(a, "display")) === "none"
			};
			c.expr.filters.visible = function(a) {
				return !c.expr.filters.hidden(a)
			}
		}
		var kb = c.now(),
			lb = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
			mb = /^(?:select|textarea)/i,
			nb = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
			ob = /^(?:GET|HEAD|DELETE)$/,
			Na = /\[\]$/,
			T = /\=\?(&|$)/,
			ia = /\?/,
			pb = /([?&])_=[^&]*/,
			qb = /^(\w+:)?\/\/([^\/?#]+)/,
			rb = /%20/g,
			sb = /#.*$/,
			Ea = c.fn.load;
		c.fn.extend({
			load: function(a, b, d) {
				if (typeof a !== "string" && Ea)
					return Ea.apply(this, arguments);
				else if (!this.length)
					return this;
				var e = a.indexOf(" ");
				if (e >= 0) {
					var f = a.slice(e, a.length);
					a = a.slice(0, e)
				}
				e = "GET";
				if (b)
					if (c.isFunction(b)) {
						d = b;
						b = null
					} else
				if (typeof b === "object") {
					b = c.param(b, c.ajaxSettings.traditional);
					e = "POST"
				}
				var h = this;
				c.ajax({
					url: a,
					type: e,
					dataType: "html",
					data: b,
					complete: function(k, l) {
						if (l === "success" || l === "notmodified")
							h.html(f ? c("<div>").append(k.responseText.replace(lb, "")).find(f) : k.responseText);
						d && h.each(d, [k.responseText, l, k])
					}
				});
				return this
			},
			serialize: function() {
				return c.param(this.serializeArray())
			},
			serializeArray: function() {
				return this.map(function() {
					return this.elements ? c.makeArray(this.elements) : this
				}).filter(function() {
					return this.name && !this.disabled && (this.checked || mb.test(this.nodeName) || nb.test(this.type))
				}).map(function(a, b) {
					var d = c(this).val();
					return d == null ? null : c.isArray(d) ? c.map(d, function(e) {
						return {
							name: b.name,
							value: e
						}
					}) : {
						name: b.name,
						value: d
					}
				}).get()
			}
		});
		c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
			c.fn[b] = function(d) {
				return this.bind(b, d)
			}
		});
		c.extend({
			get: function(a, b, d, e) {
				if (c.isFunction(b)) {
					e = e || d;
					d = b;
					b = null
				}
				return c.ajax({
					type: "GET",
					url: a,
					data: b,
					success: d,
					dataType: e
				})
			},
			getScript: function(a, b) {
				return c.get(a, null, b, "script")
			},
			getJSON: function(a, b, d) {
				return c.get(a, b, d, "json")
			},
			post: function(a, b, d, e) {
				if (c.isFunction(b)) {
					e = e || d;
					d = b;
					b = {}
				}
				return c.ajax({
					type: "POST",
					url: a,
					data: b,
					success: d,
					dataType: e
				})
			},
			ajaxSetup: function(a) {
				c.extend(c.ajaxSettings, a)
			},
			ajaxSettings: {
				url: location.href,
				global: true,
				type: "GET",
				contentType: "application/x-www-form-urlencoded",
				processData: true,
				async: true,
				xhr: function() {
					return new E.XMLHttpRequest
				},
				accepts: {
					xml: "application/xml, text/xml",
					html: "text/html",
					script: "text/javascript, application/javascript",
					json: "application/json, text/javascript",
					text: "text/plain",
					_default: "*/*"
				}
			},
			ajax: function(a) {
				var b = c.extend(true, {}, c.ajaxSettings, a),
					d, e, f, h = b.type.toUpperCase(),
					k = ob.test(h);
				b.url = b.url.replace(sb, "");
				b.context = a && a.context != null ? a.context : b;
				if (b.data && b.processData && typeof b.data !== "string")
					b.data = c.param(b.data, b.traditional);
				if (b.dataType === "jsonp") {
					if (h === "GET")
						T.test(b.url) || (b.url += (ia.test(b.url) ? "&" : "?") + (b.jsonp || "callback") + "=?");
					else if (!b.data || !T.test(b.data))
						b.data = (b.data ? b.data + "&" : "") + (b.jsonp || "callback") + "=?";
					b.dataType = "json"
				}
				if (b.dataType === "json" && (b.data && T.test(b.data) || T.test(b.url))) {
					d = b.jsonpCallback || "jsonp" + kb++;
					if (b.data)
						b.data = (b.data + "").replace(T, "=" + d + "$1");
					b.url = b.url.replace(T, "=" + d + "$1");
					b.dataType = "script";
					var l = E[d];
					E[d] = function(m) {
						f = m;
						c.handleSuccess(b, w, e, f);
						c.handleComplete(b, w, e, f);
						if (c.isFunction(l))
							l(m);
						else {
							E[d] = A;
							try {
								delete E[d]
							} catch (p) {}
						}
						v && v.removeChild(B)
					}
				}
				if (b.dataType === "script" && b.cache === null)
					b.cache = false;
				if (b.cache === false && h === "GET") {
					var n = c.now(),
						s = b.url.replace(pb, "$1_=" + n);
					b.url = s + (s === b.url ? (ia.test(b.url) ? "&" : "?") + "_=" + n : "")
				}
				if (b.data && h === "GET")
					b.url += (ia.test(b.url) ? "&" : "?") + b.data;
				b.global && c.active++ === 0 && c.event.trigger("ajaxStart");
				n = (n = qb.exec(b.url)) && (n[1] && n[1] !== location.protocol || n[2] !== location.host);
				if (b.dataType === "script" && h === "GET" && n) {
					var v = u.getElementsByTagName("head")[0] || u.documentElement,
						B = u.createElement("script");
					if (b.scriptCharset)
						B.charset = b.scriptCharset;
					B.src = b.url;
					if (!d) {
						var D = false;
						B.onload = B.onreadystatechange = function() {
							if (!D && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
								D = true;
								c.handleSuccess(b, w, e, f);
								c.handleComplete(b, w, e, f);
								B.onload = B.onreadystatechange = null;
								v && B.parentNode && v.removeChild(B)
							}
						}
					}
					v.insertBefore(B, v.firstChild);
					return A
				}
				var H = false,
					w = b.xhr();
				if (w) {
					b.username ? w.open(h, b.url, b.async, b.username, b.password) : w.open(h, b.url, b.async);
					try {
						if (b.data != null && !k || a && a.contentType)
							w.setRequestHeader("Content-Type", b.contentType);
						if (b.ifModified) {
							c.lastModified[b.url] && w.setRequestHeader("If-Modified-Since", c.lastModified[b.url]);
							c.etag[b.url] && w.setRequestHeader("If-None-Match", c.etag[b.url])
						}
						n || w.setRequestHeader("X-Requested-With", "XMLHttpRequest");
						w.setRequestHeader("Accept", b.dataType && b.accepts[b.dataType] ? b.accepts[b.dataType] + ", */*; q=0.01" : b.accepts._default)
					} catch (G) {}
					if (b.beforeSend && b.beforeSend.call(b.context, w, b) === false) {
						b.global && c.active-- === 1 && c.event.trigger("ajaxStop");
						w.abort();
						return false
					}
					b.global && c.triggerGlobal(b, "ajaxSend", [w, b]);
					var M = w.onreadystatechange = function(m) {
						if (!w || w.readyState === 0 || m === "abort") {
							H || c.handleComplete(b, w, e, f);
							H = true;
							if (w)
								w.onreadystatechange = c.noop
						} else if (!H && w && (w.readyState === 4 || m === "timeout")) {
							H = true;
							w.onreadystatechange = c.noop;
							e = m === "timeout" ? "timeout" : !c.httpSuccess(w) ? "error" : b.ifModified && c.httpNotModified(w, b.url) ? "notmodified" : "success";
							var p;
							if (e === "success")
								try {
									f = c.httpData(w, b.dataType, b)
								} catch (q) {
									e = "parsererror";
									p = q
								}
							if (e === "success" || e === "notmodified")
								d || c.handleSuccess(b, w, e, f);
							else
								c.handleError(b, w, e, p);
							d || c.handleComplete(b, w, e, f);
							m === "timeout" && w.abort();
							if (b.async)
								w = null
						}
					};
					try {
						var g = w.abort;
						w.abort = function() {
							w && g.call && g.call(w);
							M("abort")
						}
					} catch (j) {}
					b.async && b.timeout > 0 && setTimeout(function() {
						w && !H && M("timeout")
					}, b.timeout);
					try {
						w.send(k || b.data == null ? null : b.data)
					} catch (o) {
						c.handleError(b, w, null, o);
						c.handleComplete(b, w, e, f)
					}
					b.async || M();
					return w
				}
			},
			param: function(a, b) {
				var d = [],
					e = function(h, k) {
						k = c.isFunction(k) ? k() : k;
						d[d.length] = encodeURIComponent(h) + "=" + encodeURIComponent(k)
					};
				if (b === A)
					b = c.ajaxSettings.traditional;
				if (c.isArray(a) || a.jquery)
					c.each(a, function() {
						e(this.name, this.value)
					});
				else
					for (var f in a)
						ca(f, a[f], b, e);
				return d.join("&").replace(rb, "+")
			}
		});
		c.extend({
			active: 0,
			lastModified: {},
			etag: {},
			handleError: function(a, b, d, e) {
				a.error && a.error.call(a.context, b, d, e);
				a.global && c.triggerGlobal(a, "ajaxError", [b, a, e])
			},
			handleSuccess: function(a, b, d, e) {
				a.success && a.success.call(a.context, e, d, b);
				a.global && c.triggerGlobal(a, "ajaxSuccess", [b, a])
			},
			handleComplete: function(a, b, d) {
				a.complete && a.complete.call(a.context, b, d);
				a.global && c.triggerGlobal(a, "ajaxComplete", [b, a]);
				a.global && c.active-- === 1 && c.event.trigger("ajaxStop")
			},
			triggerGlobal: function(a, b, d) {
				(a.context && a.context.url == null ? c(a.context) : c.event).trigger(b, d)
			},
			httpSuccess: function(a) {
				try {
					return !a.status && location.protocol === "file:" || a.status >= 200 && a.status < 300 || a.status === 304 || a.status === 1223
				} catch (b) {}
				return false
			},
			httpNotModified: function(a, b) {
				var d = a.getResponseHeader("Last-Modified"),
					e = a.getResponseHeader("Etag");
				if (d)
					c.lastModified[b] = d;
				if (e)
					c.etag[b] = e;
				return a.status === 304
			},
			httpData: function(a, b, d) {
				var e = a.getResponseHeader("content-type") || "",
					f = b === "xml" || !b && e.indexOf("xml") >= 0;
				a = f ? a.responseXML : a.responseText;
				f && a.documentElement.nodeName === "parsererror" && c.error("parsererror");
				if (d && d.dataFilter)
					a = d.dataFilter(a, b);
				if (typeof a === "string")
					if (b === "json" || !b && e.indexOf("json") >= 0)
						a = c.parseJSON(a);
					else
				if (b === "script" || !b && e.indexOf("javascript") >= 0)
					c.globalEval(a);
				return a
			}
		});
		if (E.ActiveXObject)
			c.ajaxSettings.xhr = function() {
				if (E.location.protocol !== "file:")
					try {
						return new E.XMLHttpRequest
					} catch (a) {}
				try {
					return new E.ActiveXObject("Microsoft.XMLHTTP")
				} catch (b) {}
			};
		c.support.ajax = !! c.ajaxSettings.xhr();
		var da = {}, tb = /^(?:toggle|show|hide)$/,
			ub = /^([+\-]=)?([\d+.\-]+)(.*)$/,
			aa, na = [
				["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
				["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
				["opacity"]
			];
		c.fn.extend({
			show: function(a, b, d) {
				if (a || a === 0)
					return this.animate(S("show", 3), a, b, d);
				else {
					a = 0;
					for (b = this.length; a < b; a++) {
						if (!c.data(this[a], "olddisplay") && this[a].style.display === "none")
							this[a].style.display = "";
						this[a].style.display === "" && c.css(this[a], "display") === "none" && c.data(this[a], "olddisplay", oa(this[a].nodeName))
					}
					for (a = 0; a < b; a++)
						this[a].style.display = c.data(this[a], "olddisplay") || "";
					return this
				}
			},
			hide: function(a, b, d) {
				if (a || a === 0)
					return this.animate(S("hide", 3), a, b, d);
				else {
					a = 0;
					for (b = this.length; a < b; a++) {
						d = c.css(this[a], "display");
						d !== "none" && c.data(this[a], "olddisplay", d)
					}
					for (a = 0; a < b; a++)
						this[a].style.display = "none";
					return this
				}
			},
			_toggle: c.fn.toggle,
			toggle: function(a, b, d) {
				var e = typeof a === "boolean";
				if (c.isFunction(a) && c.isFunction(b))
					this._toggle.apply(this, arguments);
				else
					a == null || e ? this.each(function() {
						var f = e ? a : c(this).is(":hidden");
						c(this)[f ? "show" : "hide"]()
					}) : this.animate(S("toggle", 3), a, b, d);
				return this
			},
			fadeTo: function(a, b, d, e) {
				return this.filter(":hidden").css("opacity", 0).show().end().animate({
					opacity: b
				}, a, d, e)
			},
			animate: function(a, b, d, e) {
				var f = c.speed(b, d, e);
				if (c.isEmptyObject(a))
					return this.each(f.complete);
				return this[f.queue === false ? "each" : "queue"](function() {
					var h = c.extend({}, f),
						k, l = this.nodeType === 1,
						n = l && c(this).is(":hidden"),
						s = this;
					for (k in a) {
						var v = c.camelCase(k);
						if (k !== v) {
							a[v] = a[k];
							delete a[k];
							k = v
						}
						if (a[k] === "hide" && n || a[k] === "show" && !n)
							return h.complete.call(this);
						if (l && (k === "height" || k === "width")) {
							h.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
							if (c.css(this, "display") === "inline" && c.css(this, "float") === "none")
								if (c.support.inlineBlockNeedsLayout)
									if (oa(this.nodeName) === "inline")
										this.style.display = "inline-block";
									else {
										this.style.display = "inline";
										this.style.zoom = 1
									} else
										this.style.display = "inline-block"
						}
						if (c.isArray(a[k])) {
							(h.specialEasing = h.specialEasing || {})[k] = a[k][1];
							a[k] = a[k][0]
						}
					}
					if (h.overflow != null)
						this.style.overflow = "hidden";
					h.curAnim = c.extend({}, a);
					c.each(a, function(B, D) {
						var H = new c.fx(s, h, B);
						if (tb.test(D))
							H[D === "toggle" ? n ? "show" : "hide" : D](a);
						else {
							var w = ub.exec(D),
								G = H.cur(true) || 0;
							if (w) {
								var M = parseFloat(w[2]),
									g = w[3] || "px";
								if (g !== "px") {
									c.style(s, B, (M || 1) + g);
									G = (M || 1) / H.cur(true) * G;
									c.style(s, B, G + g)
								}
								if (w[1])
									M = (w[1] === "-=" ? -1 : 1) * M + G;
								H.custom(G, M, g)
							} else
								H.custom(G, D, "")
						}
					});
					return true
				})
			},
			stop: function(a, b) {
				var d = c.timers;
				a && this.queue([]);
				this.each(function() {
					for (var e = d.length - 1; e >= 0; e--)
						if (d[e].elem === this) {
							b && d[e](true);
							d.splice(e, 1)
						}
				});
				b || this.dequeue();
				return this
			}
		});
		c.each({
			slideDown: S("show", 1),
			slideUp: S("hide", 1),
			slideToggle: S("toggle", 1),
			fadeIn: {
				opacity: "show"
			},
			fadeOut: {
				opacity: "hide"
			}
		}, function(a, b) {
			c.fn[a] = function(d, e, f) {
				return this.animate(b, d, e, f)
			}
		});
		c.extend({
			speed: function(a, b, d) {
				var e = a && typeof a === "object" ? c.extend({}, a) : {
					complete: d || !d && b || c.isFunction(a) && a,
					duration: a,
					easing: d && b || b && !c.isFunction(b) && b
				};
				e.duration = c.fx.off ? 0 : typeof e.duration === "number" ? e.duration : e.duration in c.fx.speeds ? c.fx.speeds[e.duration] : c.fx.speeds._default;
				e.old = e.complete;
				e.complete = function() {
					e.queue !== false && c(this).dequeue();
					c.isFunction(e.old) && e.old.call(this)
				};
				return e
			},
			easing: {
				linear: function(a, b, d, e) {
					return d + e * a
				},
				swing: function(a, b, d, e) {
					return (-Math.cos(a * Math.PI) / 2 + 0.5) * e + d
				}
			},
			timers: [],
			fx: function(a, b, d) {
				this.options = b;
				this.elem = a;
				this.prop = d;
				if (!b.orig)
					b.orig = {}
			}
		});
		c.fx.prototype = {
			update: function() {
				this.options.step && this.options.step.call(this.elem, this.now, this);
				(c.fx.step[this.prop] || c.fx.step._default)(this)
			},
			cur: function() {
				if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null))
					return this.elem[this.prop];
				var a = parseFloat(c.css(this.elem, this.prop));
				return a && a > -1E4 ? a : 0
			},
			custom: function(a, b, d) {
				function e(h) {
					return f.step(h)
				}
				this.startTime = c.now();
				this.start = a;
				this.end = b;
				this.unit = d || this.unit || "px";
				this.now = this.start;
				this.pos = this.state = 0;
				var f = this;
				a = c.fx;
				e.elem = this.elem;
				if (e() && c.timers.push(e) && !aa)
					aa = setInterval(a.tick, a.interval)
			},
			show: function() {
				this.options.orig[this.prop] = c.style(this.elem, this.prop);
				this.options.show = true;
				this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
				c(this.elem).show()
			},
			hide: function() {
				this.options.orig[this.prop] = c.style(this.elem, this.prop);
				this.options.hide = true;
				this.custom(this.cur(), 0)
			},
			step: function(a) {
				var b = c.now(),
					d = true;
				if (a || b >= this.options.duration + this.startTime) {
					this.now = this.end;
					this.pos = this.state = 1;
					this.update();
					this.options.curAnim[this.prop] = true;
					for (var e in this.options.curAnim)
						if (this.options.curAnim[e] !== true)
							d = false;
					if (d) {
						if (this.options.overflow != null && !c.support.shrinkWrapBlocks) {
							var f = this.elem,
								h = this.options;
							c.each(["", "X", "Y"], function(l, n) {
								f.style["overflow" + n] = h.overflow[l]
							})
						}
						this.options.hide && c(this.elem).hide();
						if (this.options.hide || this.options.show)
							for (var k in this.options.curAnim)
								c.style(this.elem, k, this.options.orig[k]);
						this.options.complete.call(this.elem)
					}
					return false
				} else {
					a = b - this.startTime;
					this.state = a / this.options.duration;
					b = this.options.easing || (c.easing.swing ? "swing" : "linear");
					this.pos = c.easing[this.options.specialEasing && this.options.specialEasing[this.prop] || b](this.state, a, 0, 1, this.options.duration);
					this.now = this.start + (this.end - this.start) * this.pos;
					this.update()
				}
				return true
			}
		};
		c.extend(c.fx, {
			tick: function() {
				for (var a = c.timers, b = 0; b < a.length; b++)
					a[b]() || a.splice(b--, 1);
				a.length || c.fx.stop()
			},
			interval: 13,
			stop: function() {
				clearInterval(aa);
				aa = null
			},
			speeds: {
				slow: 600,
				fast: 200,
				_default: 400
			},
			step: {
				opacity: function(a) {
					c.style(a.elem, "opacity", a.now)
				},
				_default: function(a) {
					if (a.elem.style && a.elem.style[a.prop] != null)
						a.elem.style[a.prop] = (a.prop === "width" || a.prop === "height" ? Math.max(0, a.now) : a.now) + a.unit;
					else
						a.elem[a.prop] = a.now
				}
			}
		});
		if (c.expr && c.expr.filters)
			c.expr.filters.animated = function(a) {
				return c.grep(c.timers, function(b) {
					return a === b.elem
				}).length
			};
		var vb = /^t(?:able|d|h)$/i,
			Fa = /^(?:body|html)$/i;
		c.fn.offset = "getBoundingClientRect" in u.documentElement ? function(a) {
			var b = this[0],
				d;
			if (a)
				return this.each(function(k) {
					c.offset.setOffset(this, a, k)
				});
			if (!b || !b.ownerDocument)
				return null;
			if (b === b.ownerDocument.body)
				return c.offset.bodyOffset(b);
			try {
				d = b.getBoundingClientRect()
			} catch (e) {}
			var f = b.ownerDocument,
				h = f.documentElement;
			if (!d || !c.contains(h, b))
				return d || {
					top: 0,
					left: 0
				};
			b = f.body;
			f = ea(f);
			return {
				top: d.top + (f.pageYOffset || c.support.boxModel && h.scrollTop || b.scrollTop) - (h.clientTop || b.clientTop || 0),
				left: d.left + (f.pageXOffset || c.support.boxModel && h.scrollLeft || b.scrollLeft) - (h.clientLeft || b.clientLeft || 0)
			}
		} : function(a) {
			var b = this[0];
			if (a)
				return this.each(function(s) {
					c.offset.setOffset(this, a, s)
				});
			if (!b || !b.ownerDocument)
				return null;
			if (b === b.ownerDocument.body)
				return c.offset.bodyOffset(b);
			c.offset.initialize();
			var d = b.offsetParent,
				e = b.ownerDocument,
				f, h = e.documentElement,
				k = e.body;
			f = (e = e.defaultView) ? e.getComputedStyle(b, null) : b.currentStyle;
			for (var l = b.offsetTop, n = b.offsetLeft;
				(b = b.parentNode) && b !== k && b !== h;) {
				if (c.offset.supportsFixedPosition && f.position === "fixed")
					break;
				f = e ? e.getComputedStyle(b, null) : b.currentStyle;
				l -= b.scrollTop;
				n -= b.scrollLeft;
				if (b === d) {
					l += b.offsetTop;
					n += b.offsetLeft;
					if (c.offset.doesNotAddBorder && !(c.offset.doesAddBorderForTableAndCells && vb.test(b.nodeName))) {
						l += parseFloat(f.borderTopWidth) || 0;
						n += parseFloat(f.borderLeftWidth) || 0
					}
					d = b.offsetParent
				}
				if (c.offset.subtractsBorderForOverflowNotVisible && f.overflow !== "visible") {
					l += parseFloat(f.borderTopWidth) || 0;
					n += parseFloat(f.borderLeftWidth) || 0
				}
				f = f
			}
			if (f.position === "relative" || f.position === "static") {
				l += k.offsetTop;
				n += k.offsetLeft
			}
			if (c.offset.supportsFixedPosition && f.position === "fixed") {
				l += Math.max(h.scrollTop, k.scrollTop);
				n += Math.max(h.scrollLeft, k.scrollLeft)
			}
			return {
				top: l,
				left: n
			}
		};
		c.offset = {
			initialize: function() {
				var a = u.body,
					b = u.createElement("div"),
					d, e, f, h = parseFloat(c.css(a, "marginTop")) || 0;
				c.extend(b.style, {
					position: "absolute",
					top: 0,
					left: 0,
					margin: 0,
					border: 0,
					width: "1px",
					height: "1px",
					visibility: "hidden"
				});
				b.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
				a.insertBefore(b, a.firstChild);
				d = b.firstChild;
				e = d.firstChild;
				f = d.nextSibling.firstChild.firstChild;
				this.doesNotAddBorder = e.offsetTop !== 5;
				this.doesAddBorderForTableAndCells = f.offsetTop === 5;
				e.style.position = "fixed";
				e.style.top = "20px";
				this.supportsFixedPosition = e.offsetTop === 20 || e.offsetTop === 15;
				e.style.position = e.style.top = "";
				d.style.overflow = "hidden";
				d.style.position = "relative";
				this.subtractsBorderForOverflowNotVisible = e.offsetTop === -5;
				this.doesNotIncludeMarginInBodyOffset = a.offsetTop !== h;
				a.removeChild(b);
				c.offset.initialize = c.noop
			},
			bodyOffset: function(a) {
				var b = a.offsetTop,
					d = a.offsetLeft;
				c.offset.initialize();
				if (c.offset.doesNotIncludeMarginInBodyOffset) {
					b += parseFloat(c.css(a, "marginTop")) || 0;
					d += parseFloat(c.css(a, "marginLeft")) || 0
				}
				return {
					top: b,
					left: d
				}
			},
			setOffset: function(a, b, d) {
				var e = c.css(a, "position");
				if (e === "static")
					a.style.position = "relative";
				var f = c(a),
					h = f.offset(),
					k = c.css(a, "top"),
					l = c.css(a, "left"),
					n = e === "absolute" && c.inArray("auto", [k, l]) > -1;
				e = {};
				var s = {};
				if (n)
					s = f.position();
				k = n ? s.top : parseInt(k, 10) || 0;
				l = n ? s.left : parseInt(l, 10) || 0;
				if (c.isFunction(b))
					b = b.call(a, d, h);
				if (b.top != null)
					e.top = b.top - h.top + k;
				if (b.left != null)
					e.left = b.left - h.left + l;
				"using" in b ? b.using.call(a, e) : f.css(e)
			}
		};
		c.fn.extend({
			position: function() {
				if (!this[0])
					return null;
				var a = this[0],
					b = this.offsetParent(),
					d = this.offset(),
					e = Fa.test(b[0].nodeName) ? {
						top: 0,
						left: 0
					} : b.offset();
				d.top -= parseFloat(c.css(a, "marginTop")) || 0;
				d.left -= parseFloat(c.css(a, "marginLeft")) || 0;
				e.top += parseFloat(c.css(b[0], "borderTopWidth")) || 0;
				e.left += parseFloat(c.css(b[0], "borderLeftWidth")) || 0;
				return {
					top: d.top - e.top,
					left: d.left - e.left
				}
			},
			offsetParent: function() {
				return this.map(function() {
					for (var a = this.offsetParent || u.body; a && !Fa.test(a.nodeName) && c.css(a, "position") === "static";)
						a = a.offsetParent;
					return a
				})
			}
		});
		c.each(["Left", "Top"], function(a, b) {
			var d = "scroll" + b;
			c.fn[d] = function(e) {
				var f = this[0],
					h;
				if (!f)
					return null;
				if (e !== A)
					return this.each(function() {
						if (h = ea(this))
							h.scrollTo(!a ? e : c(h).scrollLeft(), a ? e : c(h).scrollTop());
						else
							this[d] = e
					});
				else
					return (h = ea(f)) ? "pageXOffset" in h ? h[a ? "pageYOffset" : "pageXOffset"] : c.support.boxModel && h.document.documentElement[d] || h.document.body[d] : f[d]
			}
		});
		c.each(["Height", "Width"], function(a, b) {
			var d = b.toLowerCase();
			c.fn["inner" + b] = function() {
				return this[0] ? parseFloat(c.css(this[0], d, "padding")) : null
			};
			c.fn["outer" + b] = function(e) {
				return this[0] ? parseFloat(c.css(this[0], d, e ? "margin" : "border")) : null
			};
			c.fn[d] = function(e) {
				var f = this[0];
				if (!f)
					return e == null ? null : this;
				if (c.isFunction(e))
					return this.each(function(h) {
						var k = c(this);
						k[d](e.call(this, h, k[d]()))
					});
				return c.isWindow(f) ? f.document.compatMode === "CSS1Compat" && f.document.documentElement["client" + b] || f.document.body["client" + b] : f.nodeType === 9 ? Math.max(f.documentElement["client" +
					b], f.body["scroll" + b], f.documentElement["scroll" + b], f.body["offset" + b], f.documentElement["offset" + b]) : e === A ? parseFloat(c.css(f, d)) : this.css(d, typeof e === "string" ? e : e + "px")
			}
		})
	})(window);
	Function.prototype.bind = function(bind) {
		var self = this;
		return function() {
			var args = Array.prototype.slice.call(arguments);
			return self.apply(bind || null, args);
		};
	};
	var Dispatcher = function(fragmentPollInterval) {
		this.routes = [];
		this.onFragmentChange = null;
		this.savePageInHistory = true;
		this.fragment = document.location.hash;
		this.lastTracked = '';
		this.intervalId = setInterval(this.pollForChange.bind(this), fragmentPollInterval || 100);
	};
	Dispatcher.prototype.addRoute = function(rule, callback) {
		this.routes.push({
			rule: rule,
			callback: callback
		});
	};
	Dispatcher.prototype.navigateTo = function(fragment, savePage) {
		this.setLocation(fragment, savePage);
		this.dispatch();
	};
	Dispatcher.prototype.setLocation = function(fragment, savePage) {
		var location = document.location.href.replace(/#.*$/, '') + fragment;
		this.fragment = fragment;
		this.track();
		if (this.savePageInHistory) {
			document.location.assign(location);
		} else {
			document.location.replace(location);
		}
		this.savePageInHistory = savePage;
	};
	Dispatcher.prototype.pollForChange = function() {
		if (this.fragment == document.location.hash) {
			return;
		}
		this.fragment = document.location.hash;
		this.dispatch();
	};
	Dispatcher.prototype.track = function() {
		if (typeof _gaq !== 'undefined' && this.fragment != this.lastTracked) {
			_gaq.push(['_trackPageview', this.fragment.replace('#', '')]);
			this.lastTracked = this.fragment;
		}
	};
	Dispatcher.prototype.dispatch = function() {
		this.track();
		for (var i = 0; i < this.routes.length; i++) {
			var route = this.routes[i];
			var matches = this.fragment.match(route.rule);
			if (matches) {
				route.callback(matches);
				return true;
			}
		}
		return false;
	};
	jQuery.cookie = function(name, value, options) {
		if (typeof value != 'undefined') {
			options = options || {};
			if (value === null) {
				value = '';
				options.expires = -1;
			}
			var expires = '';
			if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
				var date;
				if (typeof options.expires == 'number') {
					date = new Date();
					date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
				} else {
					date = options.expires;
				}
				expires = '; expires=' + date.toUTCString();
			}
			var path = options.path ? '; path=' + (options.path) : '';
			var domain = options.domain ? '; domain=' + (options.domain) : '';
			var secure = options.secure ? '; secure' : '';
			document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
		} else {
			var cookieValue = null;
			if (document.cookie && document.cookie != '') {
				var cookies = document.cookie.split(';');
				for (var i = 0; i < cookies.length; i++) {
					var cookie = jQuery.trim(cookies[i]);
					if (cookie.substring(0, name.length + 1) == (name + '=')) {
						cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
						break;
					}
				}
			}
			return cookieValue;
		}
	};
	(function($) {
		var m = {
			'\b': '\\b',
			'\t': '\\t',
			'\n': '\\n',
			'\f': '\\f',
			'\r': '\\r',
			'"': '\\"',
			'\\': '\\\\'
		}, s = {
				'array': function(x) {
					var a = ['['],
						b, f, i, l = x.length,
						v;
					for (i = 0; i < l; i += 1) {
						v = x[i];
						f = s[typeof v];
						if (f) {
							v = f(v);
							if (typeof v == 'string') {
								if (b) {
									a[a.length] = ',';
								}
								a[a.length] = v;
								b = true;
							}
						}
					}
					a[a.length] = ']';
					return a.join('');
				},
				'boolean': function(x) {
					return String(x);
				},
				'null': function(x) {
					return "null";
				},
				'number': function(x) {
					return isFinite(x) ? String(x) : 'null';
				},
				'object': function(x) {
					if (x) {
						if (x instanceof Array) {
							return s.array(x);
						}
						var a = ['{'],
							b, f, i, v;
						for (i in x) {
							v = x[i];
							f = s[typeof v];
							if (f) {
								v = f(v);
								if (typeof v == 'string') {
									if (b) {
										a[a.length] = ',';
									}
									a.push(s.string(i), ':', v);
									b = true;
								}
							}
						}
						a[a.length] = '}';
						return a.join('');
					}
					return 'null';
				},
				'string': function(x) {
					if (/["\\\x00-\x1f]/.test(x)) {
						x = x.replace(/([\x00-\x1f\\"])/g, function(a, b) {
							var c = m[b];
							if (c) {
								return c;
							}
							c = b.charCodeAt();
							return '\\u00' +
								Math.floor(c / 16).toString(16) +
								(c % 16).toString(16);
						});
					}
					return '"' + x + '"';
				}
			};
		$.toJSON = function(v) {
			var f = isNaN(v) ? s[typeof v] : s['number'];
			if (f)
				return f(v);
		};
		$.parseJSON = function(v, safe) {
			if (safe === undefined)
				safe = $.parseJSON.safe;
			if (safe && !/^("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/.test(v))
				return undefined;
			return eval('(' + v + ')');
		};
		$.parseJSON.safe = false;
	})(jQuery);
	var User = function() {
		this.externalCallback = null;
		this.settings = {};
		this.loadAnonymous();
		this.loadFromCookie();
		this.switchClasses();
	};
	User.prototype.switchClasses = function() {
		if (this.loggedIn) {
			$('#currentCommentContainer').removeClass('loggedOut');
			$('#commentScrollHintBottom').removeClass('loggedOut');
			$('.loggedIn').show();
			$('.loggedOut').hide();
			if (this.admin) {
				$('.admin').show();
			}
		} else {
			$('.loggedIn').hide();
			$('.loggedOut').show();
			$('.admin').hide();
			$('#currentCommentContainer').addClass('loggedOut');
			$('#commentScrollHintBottom').addClass('loggedOut');
		}
		$('#currentUserName').text(this.name);
		$('#currentUserName').attr('href', '#user/' + this.name);
	};
	User.prototype.loadAnonymous = function() {
		this.id = null;
		this.name = 'Anonymous';
		this.loggedIn = false;
		this.admin = false;
	};
	User.prototype.loadFromCookie = function() {
		var cookie = $.parseJSON($.cookie(CONFIG.COOKIE.NAME));
		if (cookie) {
			if (!cookie.settings || cookie.settings instanceof Array) {
				cookie.settings = {};
			}
			for (var c in cookie) {
				this[c] = cookie[c];
			}
			if (this.id) {
				this.loggedIn = true;
			}
			this.saveCookie();
		}
	};
	User.prototype.set = function(key, value) {
		this.settings[key] = value;
		this.saveCookie();
	};
	User.prototype.saveCookie = function() {
		var data = {
			settings: this.settings
		};
		if (this.loggedIn) {
			data.id = this.id;
			data.name = this.name;
			data.admin = this.admin;
		}
		$.cookie(CONFIG.COOKIE.NAME, $.toJSON(data), {
			expires: CONFIG.COOKIE.EXPIRE,
			path: CONFIG.ABSOLUTE_PATH
		});
	};
	User.prototype.login = function(name, password, callback) {
		this.externalCallback = callback;
		$.postJSON('/api/user/login.json', {
			name: name,
			password: password
		}, this.loginCallback.bind(this));
	};
	User.prototype.refresh = function() {
		$.postJSON('/api/user/refresh.json', {
			reload: true
		}, this.loginCallback.bind(this));
	};
	User.prototype.resetLoggedIn = function() {
		this.loadAnonymous();
		this.switchClasses();
	};
	User.prototype.loginCallback = function(data) {
		if (data.success) {
			this.loggedIn = true;
			this.loadFromCookie();
		} else {
			this.loadAnonymous();
		}
		this.externalCallback(data.success);
		this.externalCallback = null;
		this.switchClasses();
	};
	User.prototype.logout = function() {
		$.postJSON('/api/user/logout.json', {
			id: this.id
		});
		this.loadAnonymous();
		this.saveCookie();
		
		/*this.switchClasses();*/

		var xmlHttp = new XMLHttpRequest();
		xmlHttp.open('PUT', '/', true);
		xmlHttp.onreadystatechange = function () {
			(xmlHttp.readyState == 4) && (location.href = "/login")
		};
		xmlHttp.send(null);
	};
	User.prototype.menu = function(el) {
		var name = el.text();
		var html = $('<a href="#newest/*" class="logout">Logout</a>' + '<a href="#user/' + this.name + '">My Profile</a>' + '<a href="#newest/uploads:' + this.name + '">My Uploads</a>' + '<a href="#newest/likes:' + this.name + '">My Likes</a>');
		html.filter('.logout').click(this.logout.bind(this));
		return html;
	};
	User.buildSearchLinks = function(el) {
		var name = el.text();
		return ('<a href="#user/' + name + '">' + name.possessive() + ' Profile</a>' + '<a href="#newest/uploads:' + name + '">' + name.possessive() + ' Uploads</a>' + '<a href="#newest/likes:' + name + '">' + name.possessive() + ' Likes</a>');
	};
	(function($) {
		var types = ['DOMMouseScroll', 'mousewheel'];
		$.event.special.mousewheel = {
			setup: function() {
				if (this.addEventListener)
					for (var i = types.length; i;)
						this.addEventListener(types[--i], handler, false);
				else
					this.onmousewheel = handler;
			},
			teardown: function() {
				if (this.removeEventListener)
					for (var i = types.length; i;)
						this.removeEventListener(types[--i], handler, false);
				else
					this.onmousewheel = null;
			}
		};
		$.fn.extend({
			mousewheel: function(fn) {
				return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
			},
			unmousewheel: function(fn) {
				return this.unbind("mousewheel", fn);
			}
		});

		function handler(event) {
			var args = [].slice.call(arguments, 1),
				delta = 0,
				returnValue = true;
			event = $.event.fix(event || window.event);
			event.type = "mousewheel";
			if (event.wheelDelta)
				delta = event.wheelDelta / 120;
			if (event.detail)
				delta = -event.detail / 3;
			args.unshift(event, delta);
			return $.event.handle.apply(this, args);
		}
	})(jQuery);
	(function($) {
		$.fn.touchwipe = function(settings) {
			var config = {
				min_move_x: 20,
				min_move_y: 20,
				wipeLeft: function() {},
				wipeRight: function() {},
				wipeUp: function() {},
				wipeDown: function() {},
				preventDefaultEvents: true
			};
			if (settings)
				$.extend(config, settings);
			this.each(function() {
				var startX;
				var startY;
				var isMoving = false;

				function cancelTouch() {
					this.removeEventListener('touchmove', onTouchMove);
					startX = null;
					isMoving = false;
				}

				function onTouchMove(e) {
					if (e.touches.length != 1) {
						return;
					}
					if (config.preventDefaultEvents) {
						e.preventDefault();
					}
					if (isMoving) {
						var x = e.touches[0].pageX;
						var y = e.touches[0].pageY;
						var dx = startX - x;
						var dy = startY - y;
						if (Math.abs(dx) >= config.min_move_x) {
							cancelTouch();
							if (dx > 0) {
								config.wipeLeft();
							} else {
								config.wipeRight();
							}
						} else if (Math.abs(dy) >= config.min_move_y) {
							cancelTouch();
							if (dy > 0) {
								config.wipeDown();
							} else {
								config.wipeUp();
							}
						}
					}
				}

				function onTouchStart(e) {
					if (e.touches.length != 1) {
						return;
					}
					startX = e.touches[0].pageX;
					startY = e.touches[0].pageY;
					isMoving = true;
					this.addEventListener('touchmove', onTouchMove, false);
				}
				if ('ontouchstart' in document.documentElement) {
					this.addEventListener('touchstart', onTouchStart, false);
				}
			});
			return this;
		};
	})(jQuery);
	$key = {
		'BACKSPACE': 8,
		'TAB': 9,
		'ENTER': 13,
		'PAUSE': 19,
		'CAPS': 20,
		'ESC': 27,
		'SPACE': 32,
		'PAGE_UP': 33,
		'PAGE_DOWN': 34,
		'END': 35,
		'HOME': 36,
		'LEFT_ARROW': 37,
		'UP_ARROW': 38,
		'RIGHT_ARROW': 39,
		'DOWN_ARROW': 40,
		'INSERT': 45,
		'DELETE': 46,
		'0': 48,
		'1': 49,
		'2': 50,
		'3': 51,
		'4': 52,
		'5': 53,
		'6': 54,
		'7': 55,
		'8': 56,
		'9': 57,
		'A': 65,
		'B': 66,
		'C': 67,
		'D': 68,
		'E': 69,
		'F': 70,
		'G': 71,
		'H': 72,
		'I': 73,
		'J': 74,
		'K': 75,
		'L': 76,
		'M': 77,
		'N': 78,
		'O': 79,
		'P': 80,
		'Q': 81,
		'R': 82,
		'S': 83,
		'T': 84,
		'U': 85,
		'V': 86,
		'W': 87,
		'X': 88,
		'Y': 89,
		'Z': 90,
		'NUMPAD_0': 96,
		'NUMPAD_1': 97,
		'NUMPAD_2': 98,
		'NUMPAD_3': 99,
		'NUMPAD_4': 100,
		'NUMPAD_5': 101,
		'NUMPAD_6': 102,
		'NUMPAD_7': 103,
		'NUMPAD_8': 104,
		'NUMPAD_9': 105,
		'MULTIPLY': 106,
		'ADD': 107,
		'SUBSTRACT': 109,
		'DECIMAL': 110,
		'DIVIDE': 111,
		'F1': 112,
		'F2': 113,
		'F3': 114,
		'F4': 115,
		'F5': 116,
		'F6': 117,
		'F7': 118,
		'F8': 119,
		'F9': 120,
		'F10': 121,
		'F11': 122,
		'F12': 123,
		'SHIFT': 16,
		'CTRL': 17,
		'ALT': 18,
		'PLUS': 187,
		'COMMA': 188,
		'MINUS': 189,
		'PERIOD': 190
	};
	var View = function() {
		this.overlay = $(CONFIG.ID.VIEW.OVERLAY);
		this.container = $(CONFIG.ID.VIEW.CONTAINER);
		this.itemHolder = $(CONFIG.ID.VIEW.ITEMHOLDER_A);
		this.itemHolderOld = $(CONFIG.ID.VIEW.ITEMHOLDER_B);
		this.loader = $(CONFIG.ID.VIEW.LOADER);
		this.info = $(CONFIG.ID.VIEW.ITEMINFO);
		this.active = false;
		this.item = null;
		this.left = null;
		this.right = null;
	};
	View.itemTypes = {};
	View.registerItemType = function(typeName, typeClass) {
		View.itemTypes[typeName] = typeClass;
	};
	View.prototype.swapHolder = function() {
		var temp = this.itemHolder;
		this.itemHolder = this.itemHolderOld;
		this.itemHolderOld = temp;
	};
	View.prototype.loadCachedItems = function() {
		if (this.left) {
			this.left.load();
		}
		if (this.right) {
			this.right.load();
		}
	};
	View.prototype.setLeft = function(data) {
		this.left = this.getItem(data);
	};
	View.prototype.setRight = function(data) {
		this.right = this.getItem(data);
	};
	View.prototype.getItem = function(data) {
		if (!data) {
			return null;
		} else if (this.item && this.item.id == data.id) {
			return this.item;
		} else if (this.left && this.left.id == data.id) {
			return this.left;
		} else if (this.right && this.right.id == data.id) {
			return this.right;
		} else {
			return this.createItem(data);
		}
	};
	View.prototype.createItem = function(itemData) {
		var typeClass = View.itemTypes[itemData.type];
		if (typeClass) {
			return new typeClass(this, itemData);
		} else {
			throw "Unknown Item Type '" + itemData.type + "'";
		}
	};
	View.prototype.setItem = function(data) {
		if (!this.item || this.item.id != data.id) {
			if (this.active && this.right && this.right.id == data.id) {
				this.itemHolder.stop(true, true).animate({
					left: this.scrollWidth
				}, CONFIG.SCROLL_TIME, this.item.hide.bind(this.item));
				this.left = this.item;
				this.item = this.right;
				this.swapHolder();
				this.itemHolder.stop(true, true).css({
					left: -this.scrollWidth
				});
				this.item.show();
				this.itemHolder.animate({
					left: 0
				}, CONFIG.SCROLL_TIME);
				return;
			} else if (this.active && this.left && this.left.id == data.id) {
				this.itemHolder.stop(true, true).animate({
					left: -this.scrollWidth
				}, CONFIG.SCROLL_TIME, this.item.hide.bind(this.item));
				this.right = this.item;
				this.item = this.left;
				this.swapHolder();
				this.itemHolder.stop(true, true).css({
					left: this.scrollWidth
				});
				this.item.show();
				this.itemHolder.animate({
					left: 0
				}, CONFIG.SCROLL_TIME);
				return;
			} else {
				if (this.item) {
					this.item.hide();
				}
				this.item = this.getItem(data);
				this.show();
				return;
			}
		}
		this.show();
	};
	View.prototype.show = function() {
		if (!this.item) {
			return;
		}
		if (!this.active) {
			this.overlay.stop(true, true);
			if (this.item.canFade) {
				this.item.show();
				this.overlay.sanitizedFadeIn(CONFIG.FADE_TIME);
			} else {
				this.overlay.sanitizedFadeIn(CONFIG.FADE_TIME, this.item.show.bind(this.item));
			}
			this.active = true;
		} else {
			this.item.show();
		}
		this.info.sanitizedFadeIn(CONFIG.FADE_TIME);
	};
	View.prototype.hide = function(force) {
		if (!this.item || this.item.allowHide || force) {
			this.active = false;
			this.overlay.stop(true, true);
			if (this.item.canFade) {
				this.overlay.sanitizedFadeOut(CONFIG.FADE_TIME, this.item.hide.bind(this.item));
			} else {
				this.item.hide();
				this.overlay.sanitizedFadeOut(CONFIG.FADE_TIME);
			}
			this.info.sanitizedFadeOut(CONFIG.FADE_TIME);
		}
	};
	View.prototype.resize = function(width, height) {
		if (this.active && this.item) {
			this.item.resize();
		}
		this.scrollWidth = (width + CONFIG.LAYOUT.ITEM.WIDTH);
	};
	(function($) {
		var padding = 8;
		var pop = $('<div id="popOver"></div>');
		var itemsContainer = $('<div></div>').appendTo(pop);
		var point = $('<div id="popOverPoint"></div>').appendTo(pop);
		var hidePopOver = function() {
			pop.animate({
				top: '-=20px',
				opacity: 'hide'
			}, 300);
			$(document).unbind('click', hidePopOver);
			lastTarget = null;
		};
		var lastTarget = null;
		$('body').append(pop);
		$.fn.popOver = function(items) {
			this.unbind('click');
			this.click(function(ev) {
				if (lastTarget == ev.target) {
					ev.target.blur();
					hidePopOver();
					return false;
				}
				lastTarget = ev.target;
				var target = $(ev.target);
				itemsContainer.html($.isFunction(items) ? items(target) : items);
				pop.stop(true, true).fadeIn('fast');
				var targetPos = target.offset();
				var targetWidth = target.width();
				var targetHeight = target.height();
				var popHeight = pop.height();
				var popWidth = pop.width();
				var docWidth = $(document).width();
				var pointCenter = popWidth / 2 - 14;
				var left = targetPos.left - popWidth / 2 + targetWidth / 2 + 8;
				var top = top = targetPos.top - 17 - popHeight;
				if (left < padding) {
					point.css('left', pointCenter + left - padding);
					left = padding;
				} else if (left + popWidth + padding > docWidth) {
					point.css('left', pointCenter - (docWidth - left - popWidth - padding));
					left = docWidth - padding - popWidth;
				} else {
					point.css('left', pointCenter);
				}
				if (top < 8) {
					point.attr('class', 'popOverPointUp');
					top = targetPos.top + 17 + targetHeight;
				} else {
					point.attr('class', 'popOverPointDown');
				}
				pop.css({
					top: top,
					left: left
				}).show();
				ev.stopPropagation();
				$(document).unbind('click', hidePopOver).click(hidePopOver);
				return false;
			});
		};
	})(jQuery);
	Date.RELATIVE_TIME_PERIODS = {
		year: 31536000,
		month: 2628000,
		week: 604800,
		day: 86400,
		hour: 3600,
		minute: 60,
		moment: -1
	};
	Date.now = Date.now || function() {
		return (new Date()).getTime();
	};
	Date.unix = function() {
		return Math.floor(Date.now() / 1000);
	};
	Date.secondsToString = function(rawSeconds) {
		var days = Math.floor(rawSeconds / (60 * 60 * 24));
		var hours = Math.floor((rawSeconds % (60 * 60 * 24)) / (60 * 60));
		var minutes = Math.floor((rawSeconds % (60 * 60)) / 60);
		var seconds = rawSeconds % 60;
		return days + " day(s), " + hours + " hour(s), " + minutes + " minute(s), " + seconds + " second(s)";
	};
	Date.prototype.elapsedTime = function() {
		var diff = Math.max((new Date()).getTime() / 1000 - this.getTime() / 1000, 0);
		for (var period in Date.RELATIVE_TIME_PERIODS) {
			var length = Date.RELATIVE_TIME_PERIODS[period];
			if (diff > length) {
				diff = Math.round(diff / length);
				var plural = diff > 1 ? 's' : '';
				return diff + " " + period + plural;
			}
		}
	};
	Date.prototype.relativeTime = function(forcePast) {
		var diff = (new Date()).getTime() / 1000 - this.getTime() / 1000;
		if (forcePast && diff < 0) {
			diff = 0;
		}
		var postfix = diff >= 0 ? " ago" : "";
		var prefix = diff < 0 ? "in " : "";
		diff = Math.abs(diff);
		for (var period in Date.RELATIVE_TIME_PERIODS) {
			var length = Date.RELATIVE_TIME_PERIODS[period];
			if (diff > length) {
				if (length > 0) {
					diff = Math.round(diff / length);
					var plural = diff > 1 ? 's' : '';
					return prefix + diff + " " + period + plural + postfix;
				} else {
					return prefix + "a moment" + postfix;
				}
			}
		}
		return false;
	};
	Date.MONTH_NAMES = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
	Date.prototype.readableTime = function() {
		var h = this.getHours();
		var m = this.getMinutes();
		return Date.MONTH_NAMES[this.getMonth()] + " " +
			this.getDate() + ", " +
			this.getFullYear() + " - " +
			(h > 9 ? h : '0' + h) + ":" + (m > 9 ? m : '0' + m);
	};
	var Comments = function() {
		this.pane = $(CONFIG.ID.COMMENTS.PANE);
		this.head = $(CONFIG.ID.COMMENTS.HEAD);
		this.loader = $(CONFIG.ID.COMMENTS.LOADER);
		this.comments = $(CONFIG.ID.COMMENTS.COMMENTS);
		this.loadCallbackBound = this.loadCallback.bind(this);
		this.deleteCommentBound = this.deleteComment.bind(this);
		this.active = false;
		this.visible = false;
	};
	Comments.prototype.show = function(item) {
		this.pane.sanitizedFadeIn(CONFIG.FADE_TIME);
		this.visible = true;
		this.head.hide();
		this.comments.empty();

		this.item = item;

		if (item.comments && item.commentsSince && (Date.now() - item.commentsSince) < 30E3) {
			return this.showComments(item.comments);
		} else if (item.commentCount > 0) {
			var that = this;
			this.loader.show();
			$.getJSON('/api/comments/get.json?id=' + item.id, function(data) {
				that.loadCallback(data, item)
			});
		} else {
			this.loader.hide();
			this.showComments([]);
		}

		// Let's rape the database

		var that = this;
		this.loader.show();
		$.getJSON('/api/comments/get.json?id=' + item.id, function(data) {
			that.loadCallback(data, item)
		});
	};
	Comments.prototype.hide = function() {
		this.pane.sanitizedFadeOut(CONFIG.FADE_TIME);
		this.visible = false;
	};
	Comments.prototype.showComments = function(comments) {
		var html = '';
		for (var i = 0; i < comments.length; i++) {
			var comment = comments[i];
			var content = comment.content.escapeHTML().urlsToHTML().newlineToHTML();
			comment.date = new Date(comment.created * 1000);
			html += '<div class="comment" id="comment' + comment.id + '"><div class="head">' + '<a href="#user/' + comment.name + '" class="user popover' + (comment.admin ? ' ' + (comment.root ? 'flagR' : 'flagA') : '') + '">' + comment.name + '</a> ' + '<span class="time" title="' + comment.date.readableTime() + '">' +
				comment.date.relativeTime(true) + '</span>' + '<a href="#" class="admin delete deleteComment">x</a>' + '</div>' + '<div class="content">' + content + '</div>' + '</div>';
		}
		if (comments.length > 0) {
			this.head.text(comments.length + ' Comment' + (comments.length > 1 ? 's:' : ':'));
		} else {
			this.head.text('No Comments Yet');
		}
		this.head.show();
		var nodes = $(html);
		nodes.find('.user').popOver(User.buildSearchLinks);
		if (user.admin) {
			nodes.find('.admin').show().css('display', 'inline');
			nodes.find('.deleteComment').click(this.deleteCommentBound);
		}
		this.comments.html(nodes);
		$('#itemButtonComments span').text(comments.length);
	};
	Comments.prototype.loadCallback = function(data, item, fromPost) {
		this.loader.hide();
		item.comments = data.comments;
		item.commentCount = data.comments.length;
		item.commentsSince = Date.now();
		this.showComments(item.comments);
		if (fromPost) {
			var p = this.comments.parent();
			this.comments.children().last().hide().fadeIn();
			p.scrollTop(p.scrollHeight() - p.height());
		}
	};
	Comments.prototype.deleteComment = function(ev) {
		if (!user.admin) {
			return false;
		}
		var c = $(ev.target).parents('div.comment');
		var id = c.attr('id').match(/comment(\d+)/)[1];
		if (confirm('Delete Comment?')) {
			$.postJSON('/api/comments/delete.json', {
				id: this.item.id,
				version: id
			});
			c.hide();
		}
		return false;
	};
	Comments.prototype.post = function(item, comment) {
		this.head.hide();
		this.comments.empty();
		this.loader.show();
		var that = this;

		$.postJSON('/api/comments/post.json', {
			id: item.id,
			comment: comment
		}, function(data) {
			//that.loadCallback(data, item, true)

			that.loader.show();
			$.getJSON('/api/comments/get.json?id=' + item.id, function(data) {
				that.loadCallback(data, item)
			});
		});
	};
	jQuery.postJSON = function(url, data, callback, errback) {
		$.ajax({
			type: "POST",
			url: url,
			success: callback,
			error: errback,
			dataType: 'json',
			data: data
		});
	};
	jQuery.fn.visible = function() {
		return (this.css('display') != 'none');
	};
	jQuery.fn.sanitizedFadeIn = function(duration, callback) {
		this.stop(true, true);
		if (!this.visible() || this.css('opacity') != 1) {
			this.css({
				display: 'none',
				opacity: 1
			});
		}
		return this.fadeIn(duration, function() {
			$(this).css({
				display: 'block',
				opacity: 1
			});
			if (callback) {
				callback();
			}
		});
	};
	jQuery.fn.sanitizedFadeOut = function(duration, callback) {
		this.stop(true, true);
		if (this.visible() || this.css('opacity') != 0) {
			this.css({
				display: 'block',
				opacity: 1
			});
		}
		return this.fadeOut(duration, function() {
			$(this).css({
				display: 'none',
				opacity: 1
			});
			if (callback) {
				callback();
			}
		});
	};
	jQuery.extend(jQuery.easing, {
		easeInQuad: function(x, t, b, c, d) {
			return c * (t /= d) * t + b;
		},
		easeOutQuad: function(x, t, b, c, d) {
			return -c * (t /= d) * (t - 2) + b;
		}
	});
	jQuery.fn.flash = function(start, end, duration, callback) {
		this.animate({
			'background-color': end
		}, duration);
		return this;
	}
	jQuery.fn.noop = function(duration) {
		return $(this).animate({
			dummy: 1
		}, duration);
	};
	jQuery.fn.scrollHeight = function() {
		return this[0] ? this[0].scrollHeight : null;
	};
	jQuery.fn.suicide = function() {
		this.remove();
	};
	var ResultSet = function(q, sort) {
		this.onLoad = null;
		this.q = q || "*";
		this.sort = sort;
		this.requestTimeoutId = 0;
		this.requestTimeout = 1000;
		this.waitingRequest = null;
		this.waiting = false;
		this.requestTime = 0;
		this.totalKnown = false;
		this.total = 0;
		this.maxId = -1;
		this.personalized = false;
		this.items = {};
		this.loadCallbackBound = this.loadCallback.bind(this);
		this.nextRequestBound = this.nextRequest.bind(this);
	};
	ResultSet.SORT = {
		NEWEST: 'newest',
		BEST: 'best',
		INVALID: '__invalid'
	};
	ResultSet.prototype.load = function(count, start) {
		if (!this.waiting) {
			this.loadNow(count, start);
		} else {
			this.waitingRequest = {
				count: count,
				start: start
			};
			clearTimeout(this.requestTimeoutId);
			this.requestTimeoutId = setTimeout(this.nextRequestBound, this.requestTimeout);
		}
	};
	ResultSet.prototype.loadNow = function(count, start) {
		this.waitingRequest = null;
		var isFirst = (typeof(start) == 'undefined') || start < 0;
		if (!isFirst) {
			var end = start + count;
			if (this.totalKnown && this.total >= 0 && end > this.total) {
				end = this.total;
			}
			for (var i = start; i <= end; i++) {
				start = i;
				if (!this.items[start]) {
					break;
				}
			}
			for (var i = end; i >= start; i--) {
				if (!this.items[i]) {
					break;
				}
				end = i;
			}
			count = end - start;
			if (count <= 0) {
				return;
			}
		}
		var url = '/api/items/get.json?' + 'q=' + encodeURIComponent(this.q) + '&sort=' + this.sort + '&count=' + count +
			(!isFirst ? ('&start=' + start) : '') +
			(this.maxId > 0 ? ('&maxId=' + this.maxId) : '');
		this.waiting = true;
		this.requestTime = Date.now();
		$.ajax({
			type: "GET",
			url: url,
			success: this.loadCallbackBound,
			error: this.nextRequestBound,
			dataType: 'json'
		});
	};
	ResultSet.prototype.loadCallback = function(data) {
		console.log(data); console.trace()

		this.waiting = false;

		if (!this.totalKnown) {
			this.totalKnown = true;
			this.total = parseInt(data.total);
		}

		this.maxId = parseInt(data.maxId);
		this.personalized = data.personalized;
		var firstIndex = data.firstIndex;

		for (var i = 0; i < data.items.length; i++) {
			var item = data.items[i];
			item.date = new Date(item.created * 1000);
			item.index = firstIndex - i - 1;
			this.items[firstIndex - i - 1] = item;
		}

		if (this.onLoad) {
			this.onLoad(data.firstIndex, data.items.length);
		}

		this.nextRequest();
	};
	ResultSet.prototype.nextRequest = function() {
		if (this.waitingRequest) {
			clearTimeout(this.requestTimeoutId);
			this.loadNow(this.waitingRequest.count, this.waitingRequest.start);
		}
	};
	var StreamCursor = function(stream) {
		this.stream = stream;
		this.position = 0;
		this.blindIndex = -1;
	};
	StreamCursor.prototype.getItem = function() {
		return this.stream.resultSet.items[this.getIndex()];
	};
	StreamCursor.prototype.getIndex = function() {
		return this.stream.resultSet.total - this.position - 1;
	};
	StreamCursor.prototype.setIndex = function(index) {
		if (index != -1) {
			this.position = Math.max(this.stream.resultSet.total - index - 1, 0);
		} else {
			this.position = 0;
		}
		this.blindIndex = index;
		this.show();
	};
	StreamCursor.prototype.jumpToPage = function(page) {
		var posOnPrevPage = this.position - this.stream.getPageForIndex(this.getIndex()) * (this.stream.rows - 1) * this.stream.cols;
		this.position = Math.min(page * (this.stream.rows - 1) * this.stream.cols + posOnPrevPage, this.stream.resultSet.total - 1);
	};
	StreamCursor.prototype.jumpToBlindIndex = function() {
		if (this.blindIndex >= 0 && this.position == 0) {
			this.setIndex(this.blindIndex);
		}
		this.blindIndex = -1;
	};
	StreamCursor.prototype.show = function() {
		this.hide();
		this.stream.container.find('#' + this.stream.thumbId + this.getIndex()).addClass('cursor');
	};
	StreamCursor.prototype.hide = function() {
		this.stream.container.find('a.cursor').removeClass('cursor');
	};
	StreamCursor.prototype.move = function(mx, my) {
		var total = this.stream.resultSet.total;
		var start = this.stream.page * (this.stream.rows - 1) * this.stream.cols;
		var col = this.position % this.stream.cols + mx;
		var row = Math.floor((this.position - start) / this.stream.cols) + my;
		if ((my > 0 && (this.position + this.stream.cols >= total)) || (my < 0 && this.position < this.stream.cols)) {
			return false;
		}
		if (col >= this.stream.cols) {
			col = 0;
			row += 1;
		}
		if (col < 0) {
			col = this.stream.cols - 1;
			row -= 1;
		}
		if (row < 0) {
			this.stream.scrollTo(Stream.SCROLL.PREV);
		} else if (row >= this.stream.rows - 1) {
			this.stream.scrollTo(Stream.SCROLL.NEXT);
		}
		var newPosition = row * this.stream.cols + col + start;
		this.position = Math.max(Math.min(newPosition, total - 1), 0);
		this.show();
		return true;
	};
	var Stream = function() {
		this.rows = -1;
		this.cols = -1;
		this.page = 0;
		this.lastPage = 0;
		this.invalid = true;
		this.loadDefered = false;
		this.findCorrectIndexFor = null;
		this.onClickItem = null;
		this.onFinishedLoading = null;
		this.thumbRowId = 'thumbRow-';
		this.thumbId = 'thumb-';
		this.container = $(CONFIG.ID.STREAM.THUMBS);
		this.loader = $(CONFIG.ID.STREAM.LOADER);
		this.emptyNotice = $(CONFIG.ID.STREAM.EMPTYNOTICE);
		this.onClickItemProxyBound = this.onClickItemProxy.bind(this);
		this.cursor = new StreamCursor(this);
		this.onResultsReadyBound = this.onResultsReady.bind(this);
		this.resultSet = new ResultSet('*', ResultSet.SORT.INVALID);
		this.earliestFadeIn = 0;
		this.thumbFadeInBound = this.thumbFadeIn.bind(this);
	};
	Stream.SCROLL = {
		NONE: 1,
		DEFERED: 2,
		FIRST: 4,
		LAST: 8,
		NEXT: 16,
		PREV: 32
	};
	Stream.SCROLL.RELATIVE = Stream.SCROLL.NEXT | Stream.SCROLL.PREV;
	Stream.SCROLL.ABSOLUTE = Stream.SCROLL.NONE | Stream.SCROLL.DEFERED | Stream.SCROLL.FIRST | Stream.SCROLL.LAST;
	Stream.prototype.thumbFadeIn = function(ev) {
		var delta = this.earliestFadeIn - Date.now();
		var target = $(ev ? ev.target : window.event.srcElement);
		if (delta > 0) {
			target.delay(delta).fadeIn(this.scrollTime);
		} else {
			target.fadeIn(this.scrollTime);
		}
	};
	Stream.prototype.bindThumbFadeIn = function(thumbs, wait) {
		if (wait) {
			this.earliestFadeIn = Date.now() + wait;
		}
		for (var i = 0; i < thumbs.length; i++) {
			if (!thumbs[i].complete) {
				thumbs[i].style.display = 'none';
				thumbs[i].onload = this.thumbFadeInBound;
			}
		}
	}
	Stream.prototype.onResultsReady = function(start, count) {
		if (this.findCorrectIndexFor) {
			for (var n in this.resultSet.items) {
				var item = this.resultSet.items[n];
				if (item.keyword == this.findCorrectIndexFor) {
					this.cursor.setIndex(item.index);
					this.page = this.getPageForIndex(item.index);
					break;
				}
			}
			this.findCorrectIndexFor = null;
		}
		if (this.invalid) {
			this.invalid = false;
			var scroll = this.loadDefered ? Stream.SCROLL.DEFERED : Stream.SCROLL.NONE;
			this.loadDefered = false;
			this.loader.hide();
			if (this.resultSet.total) {
				this.cursor.jumpToBlindIndex();
				this.page = this.getPageForIndex(this.cursor.getIndex());
			} else {
				this.emptyNotice.find('span').text(this.resultSet.q);
				this.emptyNotice.show();
			}
			this.scrollTo(scroll);
		} else {
			this.populateEmptyItems();
		}
		if (this.onFinishedLoading) {
			this.onFinishedLoading();
		}
	};
	Stream.prototype.getItemURL = function(index, isDetail, keyword) {
		return '#' +
			this.resultSet.sort + '/' + this.resultSet.q +
			(index != this.resultSet.total - 1 || isDetail ? '/' + index +
			(isDetail ? '/' + keyword : '') : '');
	};
	Stream.prototype.reset = function() {
		this.resultSet = new ResultSet('*', ResultSet.SORT.INVALID);
		this.container.empty();
		this.page = 0;
		this.lastPage = 0;
		this.invalid = true;
		this.loadDefered = false;
	};
	Stream.prototype.setState = function(sort, q, index, isDetail, detail) {
		this.cursor.setIndex(index);
		this.page = this.getPageForIndex(index);
		if (sort != this.resultSet.sort || q != this.resultSet.q) {
			if (isDetail) {
				this.loadDefered = true;
				if (detail) {
					this.findCorrectIndexFor = detail.substr(1);
				}
			}
			this.invalid = true;
			this.resultSet = new ResultSet(q, sort);
			this.resultSet.onLoad = this.onResultsReadyBound;
			this.loader.show();
			this.emptyNotice.hide();
			if (index >= 0) {
				var itemsPerPage = this.cols * (this.rows - 1);
				var count = (itemsPerPage + this.cols) * 4;
				var start = Math.max(index - count / 2, 0);
				this.resultSet.load(count, start);
			} else {
				this.loadItemsForCurrentPages();
			}
		} else {
			this.scrollTo(Stream.SCROLL.NONE);
		}
	};
	Stream.prototype.populateEmptyItems = function() {
		var emptyThumbs = this.container.find('.thumbEmpty');
		var stream = this;
		emptyThumbs.each(function(i) {
			var id = parseInt(this.id.split('-')[1]);
			var item = stream.resultSet.items[id];
			if (item) {
				var src = CONFIG.PATH.THUMBS + item.thumb;
				var playable = item.type !== 'image' ? ' playable' : '';
				$(this).attr('class', 'thumb' + playable).html('<img class="thumb" src="' + src + '" alt=""/>');
			}
		});
		this.bindThumbFadeIn(emptyThumbs.find('img.thumb'), 0);
	};
	Stream.prototype.scrollTo = function(scroll) {
		var firstRowOnPrevPage = this.page * (this.rows - 1);
		var lastRow = Math.ceil(this.resultSet.total / this.cols);
		this.lastPage = Math.max(Math.ceil((lastRow) / (this.rows - 1) - 1), 0);
		if (scroll == Stream.SCROLL.NEXT) {
			if (this.page >= this.lastPage) {
				return;
			}
			this.page++;
		} else if (scroll == Stream.SCROLL.PREV) {
			if (this.page <= 0) {
				return;
			}
			this.page--;
		} else if (scroll == Stream.SCROLL.FIRST) {
			this.page = 0;
		} else if (scroll == Stream.SCROLL.LAST) {
			this.page = this.lastPage;
		}
		if (scroll & Stream.SCROLL.ABSOLUTE) {
			this.container.empty();
		}
		this.loadItemsForCurrentPages();
		this.cursor.jumpToPage(this.page);
		var firstRowOnPage = this.page * (this.rows - 1);
		var lastRowOnPage = Math.min(firstRowOnPage + this.rows, lastRow);
		var newItemsHTML = '';
		var numNewRows = 0;
		for (var row = firstRowOnPage; row <= lastRowOnPage; row++) {
			if (!this.container.find('#' + this.thumbRowId + row).length) {
				numNewRows++;
				newItemsHTML += '<div id="' + this.thumbRowId + row + '">';
				for (var col = 0; col < this.cols; col++) {
					var i = this.resultSet.total - row * this.cols - col - 1;
					if (i <= this.resultSet.total && i >= 0) {
						var item = this.resultSet.items[i];
						var isInCache = (!item || scroll == Stream.SCROLL.DEFERED) ? false : true;

						var thumbClass = isInCache ? 'thumb' + (item.type != 'image' ? ' playable' : '') : 'thumb thumbEmpty';
						var keyword = item ? item.keyword : '';
						var href = this.getItemURL(i, true, keyword).escapeHTML();

						newItemsHTML += '<a href="' + href + '" class="' + thumbClass + '" id="' + this.thumbId + i + '">' +
							(isInCache ? '<img class="thumb" src="' + CONFIG.PATH.THUMBS + item.thumb + '" alt=""/>' : '') + '</a>';
					}
				}
				newItemsHTML += '</div>';
			}
		}
		var newItems = $(newItemsHTML);
		newItems.children('a.thumb').click(this.onClickItemProxyBound);
		this.bindThumbFadeIn(newItems.find('img.thumb'), scroll & Stream.SCROLL.RELATIVE ? this.scrollTime : 0);
		this.container.stop(true, true);
		if (scroll == Stream.SCROLL.PREV) {
			this.container.find('#' + this.thumbRowId + (firstRowOnPrevPage + this.rows)).nextAll().remove();
			if (numNewRows > 0) {
				this.container.prepend(newItems);
			}
			var top = this.container.find('#' + this.thumbRowId + firstRowOnPrevPage).prevAll().length * (CONFIG.LAYOUT.ITEM.HEIGHT + CONFIG.LAYOUT.ITEM.SPACING) * -1;
			this.container.css('top', top);
			var populateItemsBound = this.populateEmptyItems.bind(this);
			this.container.animate({
				top: 0
			}, this.scrollTime, 'easeOutQuad', populateItemsBound);
		} else if (scroll == Stream.SCROLL.NEXT) {
			this.container.find('#' + this.thumbRowId + firstRowOnPrevPage).prevAll().remove();
			this.container.css('top', 0);
			if (numNewRows > 0) {
				this.container.append(newItems);
			}
			var top = this.container.find('#' + this.thumbRowId + firstRowOnPage).prevAll().length * (CONFIG.LAYOUT.ITEM.HEIGHT + CONFIG.LAYOUT.ITEM.SPACING) * -1;
			var populateItemsBound = this.populateEmptyItems.bind(this);
			this.container.animate({
				top: top
			}, this.scrollTime, 'easeOutQuad', populateItemsBound);
		} else {
			this.container.css('top', 0);
			if (numNewRows > 0) {
				this.container.append(newItems);
			}
		}
	};
	Stream.prototype.onClickItemProxy = function(ev) {
		if (ev.button != 0) {
			return true;
		}
		var index = parseInt(ev.currentTarget.id.split('-')[1]);
		this.cursor.setIndex(index);
		var item = this.resultSet.items[index];
		if (item && this.onClickItem) {
			this.onClickItem(item);
		}
		return false;
	};
	Stream.prototype.resize = function(availableWidth, availableHeight, page) {
		var rows = Math.max(Math.floor((availableHeight - CONFIG.LAYOUT.MIN_MARGIN + CONFIG.LAYOUT.ITEM.HEIGHT) / (CONFIG.LAYOUT.ITEM.HEIGHT + CONFIG.LAYOUT.ITEM.SPACING)), CONFIG.LAYOUT.MIN_ROWS);
		var cols = Math.max(Math.floor((availableWidth - CONFIG.LAYOUT.MIN_MARGIN) / (CONFIG.LAYOUT.ITEM.WIDTH + CONFIG.LAYOUT.ITEM.SPACING)), CONFIG.LAYOUT.MIN_COLS);
		var pageWidth = cols * (CONFIG.LAYOUT.ITEM.WIDTH + CONFIG.LAYOUT.ITEM.SPACING);
		var margin = Math.max((availableWidth - pageWidth + CONFIG.LAYOUT.ITEM.SPACING) / 2, 0);
		page.css({
			'width': pageWidth,
			'margin-left': margin
		});
		if (rows != this.rows || cols != this.cols) {
			this.rows = rows;
			this.cols = cols;
			this.page = this.getPageForIndex(this.cursor.getIndex());
			if (!this.invalid) {
				this.scrollTo(Stream.SCROLL.NONE);
			}
		}
	};
	Stream.prototype.getPageForIndex = function(index) {
		return (!this.invalid && index >= 0) ? Math.floor((this.resultSet.total - index) / ((this.rows - 1) * this.cols)) : 0;
	};
	Stream.prototype.loadItemsForCurrentPages = function() {
		var itemsPerPage = this.cols * (this.rows - 1);
		var count = itemsPerPage * (this.page > 0 ? 3 : 2) + this.cols;
		var start = !this.invalid ? Math.max(this.resultSet.total - itemsPerPage * (this.page > 0 ? this.page - 1 : this.page) - count, 0) : -1;
		this.resultSet.load(count, start);
	};
	var Page = function(container, template, data) {
		this.container = container;
		this.template = template;
		this.compiled = false;
		this.api = null;
		this.data = {};
		if (typeof(data) == 'string') {
			this.api = data;
		} else if (data) {
			this.data = data;
		}
	};
	Page.prototype.show = function() {
		if (this.api) {
			$.getJSON(this.api, this.showNow.bind(this));
		} else {
			this.showNow(this.data);
		}
	};
	Page.prototype.showNow = function(data) {
		if (!this.compiled) {
			this.template = (typeof this.template === "string") ? this.loadTemplate(this.template || '') : this.template;
			this.compiled = true;
		}
		this.container.html(this.template(data));
		this.container.show();
	};
	Page.prototype.loadTemplate = function(t) {
		return new Function("data", "var p = []; print = function(a){ p.push(a);}; with(data){p.push('" +
			t.replace(/'/g, "\\'").replace(/[\r\t\n]/g, " ").replace(/<\?js=(.*?);?\s*\?>/mg, function(m, js) {
				return "'," + js.replace(/\\'/g, "'") + ",'";
			}).replace(/<\?js(.*?)\?>/mg, function(m, js) {
				return "');" + js.replace(/\\'/g, "'") + "p.push('";
			}) + "');} return p.join('');");
	};
	var Page_Contact = function(container, template, data) {
		Page.call(this, container, template, data);
	};
	Page_Contact.prototype = new Page;
	Page_Contact.prototype.show = function() {
		Page.prototype.show.call(this);
		this.container.find('.submitNotice').hide();
	};
	Page_Contact.prototype.showNow = function(data) {
		Page.prototype.showNow.call(this, data);
		this.container.find('#contactForm').submit(this.submit.bind(this));
	};
	Page_Contact.prototype.submit = function(ev) {
		this.container.find('.submitNotice').show();
		var data = $(ev.target).serialize();
		$.postJSON('/api/contact/post.json', data, this.showNow.bind(this));
		return false;
	};
	var Page_User = function(container, template, data) {
		Page.call(this, container, template, data);
	};
	Page_User.prototype = new Page;
	Page_User.prototype.show = function(name) {
		$.getJSON(this.api + '?name=' + name, this.showNow.bind(this));
	};
	jQuery.extend({
		createUploadIframe: function(id, uri) {
			var frameId = 'jUploadFrame' + id;
			if (window.ActiveXObject) {
				var io = document.createElement('<iframe id="' + frameId + '" name="' + frameId + '" />');
				if (typeof uri == 'boolean') {
					io.src = 'javascript:false';
				} else if (typeof uri == 'string') {
					io.src = uri;
				}
			} else {
				var io = document.createElement('iframe');
				io.id = frameId;
				io.name = frameId;
			}
			io.style.position = 'absolute';
			io.style.top = '-1000px';
			io.style.left = '-1000px';
			document.body.appendChild(io);
			return io
		},
		createUploadForm: function(id, fileElementId) {
			var formId = 'jUploadForm' + id;
			var fileId = 'jUploadFile' + id;
			var form = $('<form  action="" method="POST" name="' + formId + '" id="' + formId + '" enctype="multipart/form-data"></form>');
			var oldElement = $('#' + fileElementId);
			var newElement = $(oldElement).clone();
			$(oldElement).attr('id', fileId);
			$(oldElement).before(newElement);
			$(oldElement).appendTo(form);
			$(form).css('position', 'absolute');
			$(form).css('top', '-1200px');
			$(form).css('left', '-1200px');
			$(form).appendTo('body');
			return form;
		},
		ajaxFileUpload: function(s) {
			s = jQuery.extend({}, jQuery.ajaxSettings, s);
			var id = new Date().getTime()
			var form = jQuery.createUploadForm(id, s.fileElementId);
			var io = jQuery.createUploadIframe(id, s.secureuri);
			var frameId = 'jUploadFrame' + id;
			var formId = 'jUploadForm' + id;
			if (s.global && !jQuery.active++) {
				jQuery.event.trigger("ajaxStart");
			}
			var requestDone = false;
			var xml = {}
			if (s.global)
				jQuery.event.trigger("ajaxSend", [xml, s]);
			var uploadCallback = function(isTimeout) {
				var io = document.getElementById(frameId);
				try {
					if (io.contentWindow) {
						xml.responseText = io.contentWindow.document.body ? io.contentWindow.document.body.innerHTML : null;
						xml.responseXML = io.contentWindow.document.XMLDocument ? io.contentWindow.document.XMLDocument : io.contentWindow.document;
					} else if (io.contentDocument) {
						xml.responseText = io.contentDocument.document.body ? io.contentDocument.document.body.innerHTML : null;
						xml.responseXML = io.contentDocument.document.XMLDocument ? io.contentDocument.document.XMLDocument : io.contentDocument.document;
					}
				} catch (e) {
					jQuery.handleError(s, xml, null, e);
				}
				if (xml || isTimeout == "timeout") {
					requestDone = true;
					var status;
					try {
						status = isTimeout != "timeout" ? "success" : "error";
						if (status != "error") {
							var data = jQuery.uploadHttpData(xml, s.dataType);
							if (s.success)
								s.success(data, status);
							if (s.global)
								jQuery.event.trigger("ajaxSuccess", [xml, s]);
						} else
							jQuery.handleError(s, xml, status);
					} catch (e) {
						status = "error";
						jQuery.handleError(s, xml, status, e);
					}
					if (s.global)
						jQuery.event.trigger("ajaxComplete", [xml, s]);
					if (s.global && !--jQuery.active)
						jQuery.event.trigger("ajaxStop");
					if (s.complete)
						s.complete(xml, status);
					jQuery(io).unbind()
					setTimeout(function() {
						try {
							$(io).remove();
							$(form).remove();
						} catch (e) {
							jQuery.handleError(s, xml, null, e);
						}
					}, 100)
					xml = null
				}
			}
			if (s.timeout > 0) {
				setTimeout(function() {
					if (!requestDone)
						uploadCallback("timeout");
				}, s.timeout);
			}
			try {
				var form = $('#' + formId);
				$(form).attr('action', s.url);
				$(form).attr('method', 'POST');
				$(form).attr('target', frameId);
				if (form.encoding) {
					form.encoding = 'multipart/form-data';
				} else {
					form.enctype = 'multipart/form-data';
				}
				$(form).submit();
			} catch (e) {
				jQuery.handleError(s, xml, null, e);
			}
			if (window.attachEvent) {
				document.getElementById(frameId).attachEvent('onload', uploadCallback);
			} else {
				document.getElementById(frameId).addEventListener('load', uploadCallback, false);
			}
			return {
				abort: function() {}
			};
		},
		uploadHttpData: function(r, type) {
			var data = !type;
			data = type == "xml" || data ? r.responseXML : r.responseText;
			if (type == "script")
				jQuery.globalEval(data);
			if (type == "json")
				eval("data = " + data);
			if (type == "html")
				jQuery("<div>").html(data).evalScripts();
			return data;
		}
	})
	var Page_Settings = function(container, template, data) {
		Page.call(this, container, template, data);
	};
	Page_Settings.prototype = new Page;
	Page_Settings.prototype.show = function() {
		Page.prototype.show.call(this);
	};
	Page_Settings.prototype.showNow = function(data) {
		data.submitted = data.submitted || false;
		data.errors = data.errors || {};
		Page.prototype.showNow.call(this, data);
		this.container.find('.notice, .warn').hide();
		if (data.submitted) {
			this.container.find('#passwordForm .warn, #passwordForm .notice').show();
			this.container.find('.submitNotice').hide();
		}
		this.container.find('#passwordForm').submit(this.submit.bind(this));
	};
	Page_Settings.prototype.submit = function(ev) {
		this.container.find('.notice').hide();
		this.container.find('.submitNotice').show();
		var data = $(ev.target).serialize();
		$.postJSON('/api/user/changepassword.json', data, this.showNow.bind(this));
		return false;
	};
	var Page_Join = function(container, template, data) {
		Page.call(this, container, template, data);
	};
	Page_Join.prototype = new Page;
	Page_Join.prototype.show = function() {
		if (user.loggedIn) {
			document.location = '#';
			return;
		}
		this.data = {
			submitted: false,
			token: null,
			errors: {},
			name: '',
			password: '',
			qauth: ''
		};
		Page.prototype.show.call(this);
		this.container.find('.submitNotice').hide();
	};
	Page_Join.prototype.showNow = function(data) {
		Page.prototype.showNow.call(this, data);
		if (data.submitted) {
			this.container.find('.submitNotice').hide();
		}
		this.container.find('#joinForm').submit(this.submit.bind(this));
	};
	Page_Join.prototype.submit = function(ev) {
		this.container.find('.submitNotice').show();
		var data = $(ev.target).serialize();
		$.postJSON('/api/user/join.json', data, this.showNow.bind(this));
		return false;
	};
	var StreamUI = function(user) {
		this.user = user;
		this.view = new View();
		this.stream = new Stream();
		this.comments = new Comments();
		this.wheelLast = 0;
		this.wheelWait = 100;
		this.showItemOnLoad = false;
		$('#page').ajaxError(this.onAjaxError.bind(this));
		this.stream.onClickItem = this.showItem.bind(this);
		this.stream.onFinishedLoading = this.onStreamFinishedLoading.bind(this);
		this.resizeBound = this.resize.bind(this);
		var wheelBound = this.onMouseWheel.bind(this);
		this.stream.container.parent().mousewheel(wheelBound);
		this.view.overlay.mousewheel(wheelBound);
		this.view.container.click(this.hideItem.bind(this));
		$('#login').click(this.toggleLogin.bind(this));
		$('#loginForm .close').click(this.toggleLogin.bind(this));
		$('#loginForm').submit(this.login.bind(this));
		$('#itemButtonComments').click(this.toggleComments.bind(this));
		$('#itemButtonLike').click(this.toggleLike.bind(this));
		$('#addTagsForm').submit(this.addTags.bind(this));
		$('#qform').submit(this.search.bind(this));
		$('#mainMenu').popOver('<a href="#status">Status</a> <a href="#faq">FAQ / API</a> <a href="#shortcuts">Keyboard Shortcuts</a><a href="#about">Acknowledgements</a>');
		$('#currentUserName').popOver(this.user.menu.bind(this.user));
		$('.deleteItem').click(this.deleteItem.bind(this));
		$('.editTags').click(this.editTags.bind(this));
		$('#editTagsClose').click(this.editTagsClose.bind(this));
		$('#editTagsDelete').click(this.editTagsDelete.bind(this));
		$('#editTagsInverse').click(this.editTagsInverse.bind(this));
		this.commentText = $(CONFIG.ID.COMMENTS.TEXTAREA);
		this.commentSubmit = $(CONFIG.ID.COMMENTS.SUBMIT);
		this.commentSubmit.click(this.postComment.bind(this));
		this.handle = {
			left: $(CONFIG.ID.SCROLL.LEFT).click(this.prevItem.bind(this)),
			right: $(CONFIG.ID.SCROLL.RIGHT).click(this.nextItem.bind(this)),
			up: $(CONFIG.ID.SCROLL.UP).click(this.prevPage.bind(this)),
			down: $(CONFIG.ID.SCROLL.DOWN).click(this.nextPage.bind(this))
		};
		$(window).resize(this.resize.bind(this));
		$(document).keydown(this.onKeydown.bind(this));
		if (this.user.settings.comments) {
			$('#itemButtonComments').addClass('active');
			this.view.container.css({
				'left': CONFIG.LAYOUT.COMMENTS_WIDTH + 'px'
			});
		}
		if ('ontouchstart' in document.documentElement) {
			for (var h in this.handle) {
				this.handle[h].remove();
			}
			this.view.container.touchwipe({
				wipeRight: this.prevItem.bind(this),
				wipeLeft: this.nextItem.bind(this),
				min_move_x: 20,
				preventDefaultEvents: true
			});
			this.stream.container.parent().touchwipe({
				wipeUp: this.prevPage.bind(this),
				wipeDown: this.nextPage.bind(this),
				min_move_y: 20,
				preventDefaultEvents: true
			});
		}
		this.resize();
		var pc = $('#pageContainer')

		this.pageStatusCompiler = function(data) {
			var p = [];
			print = function(a) {
				p.push(a);
			};
			with(data) {
				p.push('<div id="left">'
					+ '<div class="contentBox">'
						+ '<h1>About</h1>'
						+ '<h2>This Website</h2>'
						+ '<p> pr0gram is two things: a series of bots idling in <a href="http://quakenet.org/">Quakenet IRC</a> and this very website. The bots collect all pictures and Videos (currently Youtube and Vimeo) that are posted in the IRC channels and this website displays them. This means that all content on pr0gram is provided by users. </p>'
						+ '<p> pr0gram is NSFW. While we moderate content, we usually don\'t delete offensive pictures or videos. We do however delete all kinds of boring or irrelevant content. So don\'t expect to use pr0gram as image hoster for your last night\'s party. </p>'
						+ '<p> Follow <a href="http://twitter.com/pr0gram">pr0gram on Twitter</a> and idle in <a href="irc://irc.quakenet.org/pr0gr.am">#pr0gr.am</a> for updates. </p>'
					+ '</div>'
				+ '</div>'
				+ '<div id="right">'
					+ '<div class="contentBox">'
					+ '<h1>Status</h1>'
					+ '<h2>Bots are ');
				if (online) {
					p.push(' <span class="statusOnline">Online</span> ');
				} else {
					p.push(' <span class="statusOffline">Offline</span> ');
				}
				p.push(' </h2> ');
				var hb = (new Date(lastWrite * 1000));
				p.push(' <dl> <dt>Last Heartbeat:</dt><dd>Received <span title="', hb.readableTime(), '">', hb.relativeTime(), '</span></dd> ');
				if (online) {
					p.push(' <dt>Uptime:</dt><dd>', Date.secondsToString(uptime), '</dd> ');
				}
				p.push(' </dl> ');
				if (online) {
					p.push(' <h3>Instances</h3> <dl> ');
					for (var i in instances) {
						p.push(' <dt>', instances[i].nick, '</dt> <dd> in ');
						for (var c = 0; c < instances[i].channels.length; c++) {
							var chan = instances[i].channels[c];
							p.push(' <a href="/#newest/channel:', chan.replace('#', '').escapeHTML(), '">', chan.escapeHTML(), '</a> ');
						}
						p.push(' </dd> ');
					}
					p.push(' </dl> ');
				}
				p.push(' </div></div>');
			}
			return p.join('');
		};

		this.pageFAQCompiler = function(data) {
		       return '<div id="single">'
				    + '<h1>FAQ</h1>'
				    + '<h2>Is there anything I\'m not allowed to post here?</h2> <p>Most stuff is allowed, but there are of course a few exceptions:</p> <ul> <li>Everything you might want to post</li></ul>'
				    + '<h2>You need to be in #Elepanten to post</h2> <p> <pre>/msg apx ban me pls</pre> </p>'
				    + '<h2>Creating an account</h2><p>You must be authed with Q and have your vhost cloaked (+x).<pre>/msg pr0gram hello</pre></p>'
				    + '<h2>Changing your password</h2><p>Resetting your password to a random one.<pre>/msg pr0gram resetpass</pre>Resetting your password to a particular one.<pre>/msg pr0gram changepass <new> <new></pre></p>'
				    + '<h2>Changing your nick</h2><p><pre>No.</pre></p>'
				+ '</div>'
		};

		this.pageAboutCompiler = function () {
			return '<div id="left">'
					+ '<h1 style="margin-bottom: -20px;">Acknowledgements</h1>'
					+ "<h2>Philosophy</h2>"
					+ [
						'<pre>',
						'',
						'	pr0gr.am is a community project',
						'	         is not profit driven',
						'	         is a revival of the old pr0gramm.com code',
						'	         is open-source (tba)',
						'',
						'</pre>'
					].join("\n")
					+ 'We felt that it was important to keep a closed community in order to allow the strong bond between us, the <b>#Elepanten</b>-community. So we decided to revive pr0gramm in its full beauty. Since this is a community-based approach, feel free to drop us a note or create an <a href="https://github.com/KenanSulayman/pr0gram">issue on GitHub</a>.'
					+ '<h2>Engineering</h2>'
					+ '<b>pr0gr.am</b> is a backport of <b>pr0gramm</b> to a Node.js cluster based on LevelDB, love and magic.'
					+ [
						'<pre>',
						'',
						'	(c)',
						'	 ___ ____ __ __',
						'	/ _ `/ _ \\\\ \\ /',
						'	\\_,_/ .__/_\\_\\ ',
						'	   /_/ ',
						'	',
						'	過去は未来によって変えられる。',
						'',
						'</pre>'
					].join("\n")
					+ "Original work, idea and engineering by <b>cha0s</b>"
					+ [
						'<pre>',
						'',
						'	(c)',
						'	      __        ___    ',
						'	 ____/ /  ___ _/ _ \\___',
						'	/ __/ _ \\/ _ `/ // (_-<',
						'	\\__/_//_/\\_,_/\\___/___/',
						'',
						'</pre>'
					].join("\n")
				+ '</div>'
				+ '<div id="right" class="elepant">'
					+ '<h1></h1>'
				+ '</div>'
		}

		this.pageContactCompiler = function(data) {
			var p = [];
			print = function(a) {
				p.push(a);
			};
			with(data) {
				p.push('<div id="single"> <h1>Contact</h1> <p> We\'re also in <a href="irc://irc.quakenet.org/pr0gr.am">#pr0gr.am</a> in Quakenet IRC for quick questions and help. </p> <p> For <strong>deletion requests</strong> please provide the exact location (URL) to the image or video in question, along with sufficient proof that you are the copyright owner of said content or act in behalf of them. </p> <p> When <strong>reporting bugs</strong> please be as precise as possible. Where did this bug occur? What was the expected behaviour? What happened instead? Oh, and if you\'re using Internet Explorer: please fuck off. </p> ');

				if (typeof(sent) !== 'undefined') {
					p.push(' <p> <strong>Your message has been sent. Thanks!</strong> </p> ');
				} else {
					p.push(' <form id="contactForm" method="post"> <textarea name="content" class="contact"></textarea> <div>Your email address if we need to get back to you (you can leave this field blank):</div> <div><input type="text" name="email"/></div> <br/> <div> <input type="submit" class="button" value="Send Inquiry"/> <span class="notice submitNotice">Sending...</span> </div> </form> ');
				}

				p.push(' </div>');
			}
			return p.join('');
		}

		var pageShortcutsCompiler = function () {
			return '<div id="single">'
				+ '<h1>Keyboard Shortcuts</h1>'
				+ '<h2>Keyboard Shortcuts are awesome. Use Them.</h2>'
				+ '<dl class="shortcuts">'
					+ '<dt>Enter:</dt>'
					+ '<dd>View Item</dd>'
					+ '<dt>Space:</dt>'
					+ '<dd>Zoom Image / Play Video</dd>'
					+ '<dt>ESC:</dt>'
					+ '<dd>Unfocus Textarea / Close Comments Pane / Close Item View</dd>'
					+ '<dt>WASD / Arrow Keys:</dt>'
					+ '<dd>Navigate (Mouse Wheel works too)</dd>'
					+ '<dt>PgUp / PgDown:</dt>'
					+ '<dd>Next / Previous Page</dd>'
					+ '<dt>Home / End:</dt>'
					+ '<dd>First / Last Page</dd>'
					+ '<dt>C:</dt>'
					+ '<dd>Open Comment Pane</dd>'
					+ '<dt>T:</dt>'
					+ '<dd>Open Tags Pane</dd>'
					+ '<dt>L:</dt>'
					+ '<dd>Like / Un-Like</dd>'
					+ '<dt>K:</dt>'
					+ '<dd>Jump To Search Box</dd>'
				+ '</dl>'
			+ '</div>';
		}

		this.pages = {
			about: new Page(pc, this.pageAboutCompiler),
			faq: new Page(pc, this.pageFAQCompiler),
			shortcuts: new Page(pc, '<div id="single"> <h1>Keyboard Shortcuts</h1> <h2>Keyboard Shortcuts are awesome. Use Them.</h2> <dl class="shortcuts"> <dt>Enter:</dt><dd>View Item</dd> <dt>Space:</dt><dd>Zoom Image / Play Video</dd> <dt>ESC:</dt><dd>Unfocus Textarea / Close Comments Pane / Close Item View</dd> <dt>WASD / Arrow Keys:</dt><dd>Navigate (Mouse Wheel works too)</dd> <dt>PgUp / PgDown:</dt><dd>Next / Previous Page</dd> <dt>Home / End:</dt><dd>First / Last Page</dd> <dt>C:</dt><dd>Open Comment Pane</dd> <dt>T:</dt><dd>Open Tags Pane</dd> <dt>L:</dt><dd>Like / Un-Like</dd> <dt>K:</dt><dd>Jump To Search Box</dd> </dl> </div>'),
			status: new Page(pc, this.pageStatusCompiler, '/api/status.json'),
			contact: new Page_Contact(pc, this.pageContactCompiler)
		};

		this.pageUserCompiler = function (data) {
			var p = [];
			print = function(a) {
				p.push(a);
			};
			with(data) {
				p.push('<div id="left"><div class="contentBox"> <h1>');
				if (user.admin) {
					if (user.root)
						p.push('<span class="adminHead" style="color:red;">[root]</span> ');
					else
						p.push('<span class="adminHead">[Admin]</span> ');
				}
				p.push('');
				if (user.banned) {
					p.push('<span class="adminHead">[Banned]</span> ');
				}
				p.push('', user.name, '</h1> <div class="userstats"> ');
				var registered = (new Date(user.registered));
				p.push('<div class="userstat"><div>', uploadCount, '</div> Uploads</div> <div class="userstat"><div>', commentCount, '</div> Comments</div> <div class="userstat"><div>', likeCount, '</div> Likes</div> <div class="userstat"><div>', tagCount, '</div> Tags</div> <div class="userstat wide"> <div title="', registered.readableTime(), '">', registered.elapsedTime(), '</div> Time wasted </div> </div> <div style="clear:both;"></div> <h2>Latest Comments</h2> ');
				for (var i = 0; i < comments.length; i++) {
					var c = comments[i];
					p.push(' ');
					var created = (new Date(c.created * 1000));
					p.push(' <div class="comment"> <div class="head" style="margin-bottom:0.5em"> <span class="time" title="', created.readableTime(), '">', created.relativeTime(), '</span> on <a href="#newest/*/', c.idx + '/' + c.keyword, '">', c.title.escapeHTML(), '</a> </div> ', c.content.escapeHTML().urlsToHTML().newlineToHTML(), ' </div> ');
				}
				p.push(' </div></div> <div id="right"><div class="contentBox"> <h2>Latest Uploads <a href="#newest/uploads:', user.name, '">&raquo;View all (', uploadCount, ')</a></h2> ');
				for (var i = 0; i < uploads.length; i++) {
					var u = uploads[i];
					p.push(' <a class="thumb" href="#newest/uploads:', user.name + '/' + u.idx + '/' + u.keyword, '"> <img class="thumb" src="', CONFIG.PATH.THUMBS + u.thumb, '" onerror="$(this).hide()" alt=""/> </a> ');
				}
				p.push(' <div style="clear:both;"></div> <h2>Latest Likes <a href="#newest/likes:', user.name, '">&raquo;View all (', likeCount, ')</a></h2> ');
				for (var i = 0; i < likes.length; i++) {
					var l = likes[i];
					p.push(' <a class="thumb" href="#newest/likes:', user.name + '/' + l.idx + '/' + l.keyword, '"> <img class="thumb" src="', CONFIG.PATH.THUMBS + l.thumb, '" onerror="$(this).hide()" alt=""/> </a> ');
				}
				p.push(' <div style="clear:both;"></div> </div></div>');
			}
			return p.join('');
		};

		this.pageUser = new Page_User(pc, this.pageUserCompiler, '/api/user/info.json');
		this.page404 = new Page(pc, new Function ("return '<h1>404</h1>'"));
		this.dispatcher = new Dispatcher(CONFIG.FRAGMENT_POLL_INTERVAL);
		this.dispatcher.addRoute(/^#?$/, this.index.bind(this));
		this.dispatcher.addRoute(/^#(best|newest)\/([^\/]+)(\/(\d+)(\/.*|)|)$/, this.setStream.bind(this));
		this.dispatcher.addRoute(/^#user\/(\w+)$/, this.setUserProfile.bind(this));
		this.dispatcher.addRoute(/^#(\w+)$/, this.setPage.bind(this));
		this.dispatcher.addRoute(/.*/, this.set404.bind(this));
		this.dispatcher.dispatch();
	};
	StreamUI.prototype.index = function(m) {
		this.dispatcher.navigateTo('#newest/*');
	};
	StreamUI.prototype.setStream = function(m) {
		this.unsetPage();
		var state = {
			sort: m[1],
			q: m[2],
			index: (typeof(m[4]) != 'undefined' ? m[4] : -1),
			isDetail: !! m[5],
			detail: m[5]
		};
		this.stream.setState(state.sort, state.q, state.index, state.isDetail, state.detail);
		if (state.isDetail) {
			this.showItemOnLoad = true;
			this.showItem(this.stream.cursor.getItem());
		} else if (this.view.active) {
			this.view.hide(true);
			this.comments.hide();
		}
		this.showHandles();
		$('#q').val(state.q != '*' ? state.q : '');
		$('#showTypes .active').removeClass('active');
		if (state.q.indexOf('type:image') != -1) {
			$('#typeImage').addClass('active');
		} else if (state.q.indexOf('type:video') != -1) {
			$('#typeVideo').addClass('active');
		} else {
			$('#typeAll').addClass('active');
		}
	};
	StreamUI.prototype.unsetStream = function() {
		this.stream.reset();
		if (this.view.active) {
			this.view.hide(true);
			this.comments.hide();
		}
		this.showHandles();
	};
	StreamUI.prototype.setPage = function(m) {
		this.unsetStream();
		var name = m[1];
		if (name in this.pages) {
			this.pages[name].show();
		} else {
			this.set404();
		}
	};
	StreamUI.prototype.unsetPage = function(m) {
		$('#pageContainer').hide();
	};
	StreamUI.prototype.setUserProfile = function(m) {
		this.unsetStream();
		this.pageUser.show(m[1]);
	};
	StreamUI.prototype.set404 = function(m) {
		this.unsetStream();
		this.page404.show();
	};
	StreamUI.prototype.search = function() {
		var q = $('#q').val() || '*';
		this.dispatcher.navigateTo('#newest/' + q, true);
		$('#q').blur();
		return false;
	};
	StreamUI.prototype.postComment = function() {
		this.commentSubmit.blur();
		var comment = this.commentText.val();
		this.lastCommentText = comment;
		this.commentText.val('');
		this.comments.post(this.stream.cursor.getItem(), comment);
		return false;
	};
	StreamUI.prototype.toggleComments = function() {
		if (!this.user.settings.comments) {
			this.user.set('comments', true);
			this.comments.show(this.stream.cursor.getItem());
			this.view.container.animate({
				'left': CONFIG.LAYOUT.COMMENTS_WIDTH + 'px'
			}, CONFIG.FADE_TIME, this.resizeBound);
			$('#itemButtonComments').addClass('active');
		} else {
			this.user.set('comments', false);
			this.comments.hide();
			this.view.container.animate({
				'left': 0
			}, CONFIG.FADE_TIME, this.resizeBound);
			$('#itemButtonComments').removeClass('active');
		}
	};
	StreamUI.prototype.addTags = function() {
		this.view.item.addTags($('#tagsText').val());
		$('#tagsText').val('').blur();
		return false;
	};
	StreamUI.prototype.toggleLike = function() {
		if (user.loggedIn) {
			this.view.item.toggleLike();
		} else {
			this.toggleLogin(true);
		}
	};
	StreamUI.prototype.onStreamFinishedLoading = function() {
		if (this.showItemOnLoad) {
			this.showItem(this.stream.cursor.getItem());
		}
		this.showHandles();
		this.setPositionIndicator();
	};
	StreamUI.prototype.showItem = function(item) {
		if (item) {
			this.view.setItem(item);
			this.view.setRight(this.stream.resultSet.items[item.index + 1]);
			this.view.setLeft(this.stream.resultSet.items[item.index - 1]);
			this.showItemOnLoad = false;
			this.updateLocation(true);
			this.setPositionIndicator();
			if (this.user.settings.comments) {
				this.comments.show(item);
			}
			this.showHandles();
		}
	};
	StreamUI.prototype.hideItem = function() {
		if (!this.view.active) {
			return;
		}
		this.view.hide();
		this.stream.populateEmptyItems();
		if (!this.view.active) {
			this.updateLocation(true);
			this.setPositionIndicator();
			if (this.comments.visible) {
				this.comments.hide();
			}
		}
	};
	StreamUI.prototype.toggleLogin = function(force) {
		var loginForm = $('#loginForm');
		if (!loginForm.visible() && force !== false) {
			loginForm.find('.notice, .warn, .error').hide();
			loginForm.fadeIn(CONFIG.FADE_TIME);
			loginForm.find('input[name=name]').focus();
		} else if (loginForm.visible() && force !== true) {
			loginForm.fadeOut(CONFIG.FADE_TIME);
		}
		return false;
	};
	StreamUI.prototype.login = function(ev) {
		var loginForm = $('#loginForm');
		this.user.login(loginForm.find('input[name=name]').val(), loginForm.find('input[name=password]').val(), this.loginCallback.bind(this));
		loginForm.find('.notice').show();
		loginForm.find('.warn, .error').hide();
		return false;
	};
	StreamUI.prototype.loginCallback = function(success) {
		var loginForm = $('#loginForm');
		if (success) {
			this.toggleLogin(false);
			loginForm.find('input[name=name]').val('');
			loginForm.find('input[name=password]').val('');
		} else {
			loginForm.find('.warn').show();
			loginForm.find('.notice, .error').hide();
		}
	};
	StreamUI.prototype.onAjaxError = function(e, xhr, settings, exception) {
		if (xhr.status == '403') {
			this.user.resetLoggedIn();
			this.commentText.val(this.lastCommentText);
			this.toggleLogin(true);
			$('#loginForm .error').show();
		}
	};
	StreamUI.prototype.deleteItem = function() {
		if (!this.user.admin) {
			return false;
		}
		if (confirm('Delete Item?')) {
			$.postJSON('/api/items/delete.json', {
				id: this.view.item.id
			});
		}
		return false;
	};
	StreamUI.prototype.editTags = function() {
		this.view.item.editTags();
		return false;
	};
	StreamUI.prototype.editTagsClose = function() {
		this.view.item.editTagsClose();
		return false;
	};
	StreamUI.prototype.editTagsDelete = function() {
		this.view.item.editTagsDelete();
		return false;
	};
	StreamUI.prototype.editTagsInverse = function() {
		this.view.item.editTagsInverseSelection();
		return false;
	};
	StreamUI.prototype.updateLocation = function(save) {
		var index = this.stream.cursor.getIndex();
		var item = this.stream.resultSet.items[index];
		var keyword = item ? item.keyword : '';
		var location = this.stream.getItemURL(index, this.view.active, keyword);
		this.dispatcher.setLocation(location, save);
	};
	StreamUI.prototype.resize = function() {
		var wnd = $(window);
		var width = wnd.width();
		var height = wnd.height() - parseInt($('#info').css('height'));
		this.stream.resize(width, height, $('#page'));
		this.view.resize(width, height);
		this.setPositionIndicator();
		if (/iPhone|iPad|Android/i.test(navigator.userAgent)) {
			$(document.documentElement).css('height', '200%');
			setTimeout(function() {
				window.scrollTo(0, 0);
				$('body').addClass('mobile').css('height', window.innerHeight);
				$(document.documentElement).css('height', window.innerHeight);
			}, 1);
		}
	};
	StreamUI.prototype.prevPage = function(ev) {
		if (ev && ev.target) {
			ev.target.blur();
		}
		this.flashScrollHandle(this.handle.up);
		this.stream.scrollTo(Stream.SCROLL.PREV);
		this.showHandles();
		this.updateLocation(true);
		this.setPositionIndicator();
		return false;
	};
	StreamUI.prototype.nextPage = function(ev) {
		if (ev && ev.target) {
			ev.target.blur();
		}
		this.flashScrollHandle(this.handle.down);
		this.stream.scrollTo(Stream.SCROLL.NEXT);
		this.showHandles();
		this.updateLocation(true);
		this.setPositionIndicator();
		return false;
	};
	StreamUI.prototype.prevItem = function(ev) {
		if (ev && ev.target) {
			ev.target.blur();
		}
		this.flashScrollHandle(this.handle.left);
		this.stream.cursor.move(-1, 0);
		this.showItem(this.stream.cursor.getItem());
		return false;
	};
	StreamUI.prototype.nextItem = function(ev) {
		if (ev && ev.target) {
			ev.target.blur();
		}
		this.flashScrollHandle(this.handle.right);
		this.stream.cursor.move(1, 0);
		this.showItem(this.stream.cursor.getItem());
		return false;
	};
	StreamUI.prototype.onMouseWheel = function(ev, delta) {
		var time = (new Date()).getTime();
		var msec = time - this.wheelLast;
		this.wheelLast = time;
		if (msec < this.wheelWait || delta == 0) {
			return false;
		}
		if (this.view.active) {
			if (delta > 0) {
				this.prevItem();
			} else {
				this.nextItem();
			}
		} else {
			if (delta > 0) {
				this.prevPage();
			} else {
				this.nextPage();
			}
		}
		return false;
	};
	StreamUI.prototype.flashScrollHandle = function(which) {
		which.stop(true, true);
		if (which.visible()) {
			var finalOpacity = which.css('opacity');
			which.css({
				opacity: 1
			}).fadeTo(CONFIG.FLASH_TIME, finalOpacity, StreamUI.clearOpacity);
		}
	};
	StreamUI.prototype.showHandles = function() {
		if (this.stream.page !== 0 && !this.handle.up.visible()) {
			this.handle.up.stop(true).fadeIn(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		} else if (this.stream.page === 0 && this.handle.up.visible()) {
			this.handle.up.stop(true).fadeOut(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		}
		if (this.stream.page != this.stream.lastPage && !this.handle.down.visible()) {
			this.handle.down.stop(true).fadeIn(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		} else if (this.stream.page == this.stream.lastPage && this.handle.down.visible()) {
			this.handle.down.stop(true).fadeOut(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		}
		var pos = this.stream.cursor.position;
		var last = this.stream.resultSet.total - 1;
		if (pos !== 0 && !this.handle.left.visible()) {
			this.handle.left.stop(true).fadeIn(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		} else if (pos === 0 && this.handle.left.visible()) {
			this.handle.left.stop(true).fadeOut(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		}
		if (pos != last && !this.handle.right.visible()) {
			this.handle.right.stop(true).fadeIn(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		} else if (pos == last && this.handle.right.visible()) {
			this.handle.right.stop(true).fadeOut(CONFIG.FADE_TIME, StreamUI.clearOpacity);
		}
	};
	StreamUI.prototype.setPositionIndicator = function() {
		if (this.view.active) {
			$('#currentItem').text(this.stream.cursor.position + 1);
			$('#totalItems').text(this.stream.resultSet.total);
			$('#pagePosition').stop(true, true).hide();
			$('#itemPosition').stop(true, true).fadeIn(CONFIG.FADE_TIME);
		} else {
			$('#currentPage').text(this.stream.page + 1);
			$('#totalPages').text(this.stream.lastPage + 1);
			$('#itemPosition').stop(true, true).hide();
			$('#pagePosition').stop(true, true).fadeIn(CONFIG.FADE_TIME);
		}
	};
	StreamUI.prototype.onKeydown = function(ev) {
		if (ev.altKey || ev.ctrlKey || ev.metaKey) {
			return;
		}
		if (ev.target.type == 'text' || ev.target.type == 'textarea' || ev.target.type == 'password' || ev.target.className == 'button') {
			if (ev.keyCode == $key.ESC) {
				ev.target.blur();
			}
			return;
		}
		if (this.view.active) {
			switch (ev.keyCode) {
				case $key.ENTER:
					ev.preventDefault();
					ev.stopPropagation();
					this.hideItem();
					break;
				case $key.SPACE:
					ev.preventDefault();
					ev.stopPropagation();
					this.view.item.action();
					break;
				case $key.ESC:
					if (this.user.settings.comments) {
						this.toggleComments();
					} else {
						this.hideItem();
					}
					break;
				case $key.RIGHT_ARROW:
				case $key.D:
					this.nextItem();
					break;
				case $key.LEFT_ARROW:
				case $key.A:
					this.prevItem();
					break;
				case $key.L:
					ev.preventDefault();
					this.toggleLike();
					break;
				case $key.C:
					if (!this.user.settings.comments) {
						this.toggleComments();
					}
					ev.preventDefault();
					this.commentText.select();
					break;
				case $key.K:
					ev.preventDefault();
					$('#q').select();
					break;
				case $key.T:
					if (!this.user.settings.comments) {
						this.toggleComments();
					}
					ev.preventDefault();
					$('#tagsText').select();
					break;
				case $key.DELETE:
					this.deleteItem();
					break;
			}
		} else {
			switch (ev.keyCode) {
				case $key.ENTER:
					ev.preventDefault();
					ev.stopPropagation();
					this.showItem(this.stream.cursor.getItem());
					break;
				case $key.UP_ARROW:
				case $key.W:
					this.stream.cursor.move(0, -1);
					this.setPositionIndicator();
					this.updateLocation(false);
					this.showHandles();
					break;
				case $key.RIGHT_ARROW:
				case $key.D:
					this.stream.cursor.move(1, 0);
					this.setPositionIndicator();
					this.updateLocation(false);
					this.showHandles();
					break;
				case $key.DOWN_ARROW:
				case $key.S:
					this.stream.cursor.move(0, 1);
					this.setPositionIndicator();
					this.updateLocation(false);
					this.showHandles();
					break;
				case $key.LEFT_ARROW:
				case $key.A:
					this.stream.cursor.move(-1, 0);
					this.setPositionIndicator();
					this.updateLocation(false);
					this.showHandles();
					break;
				case $key.PAGE_UP:
					this.prevPage();
					break;
				case $key.PAGE_DOWN:
					this.nextPage();
					break;
				case $key.HOME:
					this.stream.scrollTo(Stream.SCROLL.FIRST);
					this.updateLocation(true);
					this.setPositionIndicator();
					this.showHandles();
					break;
				case $key.END:
					this.stream.scrollTo(Stream.SCROLL.LAST);
					this.updateLocation(true);
					this.setPositionIndicator();
					this.showHandles();
					break;
				case $key.K:
					ev.preventDefault();
					$('#q').select();
					break;
			}
		}
	};
	StreamUI.clearOpacity = function() {
		$(this).css('opacity', '');
		if (this.style && $.browser.msie) {
			this.style.removeAttribute('filter');
		}
	};
	var Item_Base = function(view, data) {
		this.view = view;
		this.id = data ? data.id : 0;
		this.data = data;
		this.node = $([]);
		this.active = false;
		this.initialized = false;
		this.allowHide = true;
		this.canFade = true;
	};
	Item_Base.prototype.resize = function() {};
	Item_Base.prototype.action = function() {};
	Item_Base.prototype.load = function() {
		this.initialized = true;
	};
	Item_Base.prototype.show = function() {
		this.load();
		this.active = true;
		this.view.itemHolder.html(this.node);
		$('#itemButtonComments span').text(this.data.commentCount);
		$('#itemTitle').text(this.data.title.shorten(36));
		$('#itemTime').text(this.data.date.relativeTime(true)).attr('title', this.data.date.readableTime());
		if (this.data.user.name) {
			$('#itemNick').hide();
			$('#itemUser').show().text(this.data.user.name).attr('href', '/#user/' + this.data.user.name).popOver(User.buildSearchLinks);

			$('#itemUser').removeClass('flagR').removeClass('flagA');

			if ( this.data.user.admin ) {
				$('#itemUser').addClass(this.data.user.root ? 'flagR' : 'flagA')
			}
		} else {
			$('#itemUser').hide();
			$('#itemNick').show().text(this.data.user.nick);
		}
		$('#itemChannel').text(this.data.channel.name).attr('href', '/#newest/channel:' + this.data.channel.keyword);
		$('#itemSource').text(this.data.source.hostName()).attr('href', this.data.source);
		$('#itemButtonLike').toggleClass('active', this.data.liked);
		$('#itemButtonLike').toggleClass('cantlike', (user.id && this.data.user.name && this.data.user.name == user.name) ? true : false);
		this.showTags(this.data.tags);
	};
	Item_Base.prototype.hide = function() {
		this.active = false;
		this.node.detach();
	};
	Item_Base.prototype.showTags = function(tags) {
		var tagsHTML = '';
		if (tags.length > 0) {
			for (var i = 0; i < tags.length; i++) {
				var tag = tags[i].tag.escapeHTML();
				tagsHTML += '<a class="tag" href="#newest/' + tag + '">' + tag + '</a> ';
			}
		} else {
			tagsHTML = '<span class="noTags">none</span>';
		}
		$('#currentTags').html(tagsHTML);
	};
	Item_Base.prototype.addTags = function(tags) {
		$.postJSON('/api/tags/add.json', {
			id: this.id,
			tags: tags
		}, this.addTagsCallback.bind(this));
	};
	Item_Base.prototype.addTagsCallback = function(data) {
		this.data.tags = data.tags;
		this.showTags(data.tags);
	};
	Item_Base.prototype.editTags = function() {
		$.getJSON('/api/tags/get.json?id=' + this.id, this.editTagsLoad.bind(this));
	};
	Item_Base.prototype.editTagsClose = function() {
		$('#adminEditTags').hide();
	};
	Item_Base.prototype.editTagsLoad = function(data) {
		var html = '';
		for (var i = 0; i < data.tags.length; i++) {
			var tag = data.tags[i];
			tag.date = new Date(tag.created * 1000);
			html += '<div class="editTag">' + '<label><input type="checkbox" name="tag_' + tag.id + '"/>' +
				tag.tag.escapeHTML() + '</label><a href="#user/' + tag.name + '" class="user popover">' + tag.name + '</a> ' + '<span class="time" title="' + tag.date.readableTime() + '">' +
				tag.date.relativeTime(true) + '</span>' + '</div>';
		}
		$('#adminEditTagsList').html(html).find('.user').popOver(User.buildSearchLinks);;
		$('#adminEditTags').show();
	};
	Item_Base.prototype.editTagsInverseSelection = function() {
		$('#adminEditTagsList input').each(function() {
			$(this).attr('checked', !$(this).attr('checked'));
		});
	};
	Item_Base.prototype.editTagsDelete = function() {
		$.postJSON('/api/tags/delete.json?id=' + this.id, $('#adminEditTagsList').serialize());
		this.editTagsClose();
	};
	Item_Base.prototype.toggleLike = function() {
		var action = this.data.liked ? 'unlike' : 'like';
		$.postJSON('/api/items/' + action + '.json', {
			id: this.id
		}, this.toggleLikeCallback.bind(this));
		this.data.liked = !this.data.liked;
		$('#itemButtonLike').toggleClass('active', this.data.liked);
	};
	Item_Base.prototype.toggleLikeCallback = function(data) {};
	var Item_Image = function(view, data) {
		Item_Base.call(this, view, data);
		this.zoom = {
			able: false,
			on: false,
			timeout: 0,
			position: {
				x: 0,
				y: 0
			},
			center: {
				x: 0,
				y: 0
			}
		};
		this.loaded = false;
		this.onLoadBound = this.onLoad.bind(this);
		this.zoomDragBound = this.zoomDrag.bind(this);
		this.zoomDragInitBound = this.zoomDragInit.bind(this);
		this.zoomDragEndBound = this.zoomDragEnd.bind(this);
		this.zoomSetTimerBound = this.zoomSetTimer.bind(this);
		this.zoomToggleBound = this.zoomToggle.bind(this);
		if ('ontouchstart' in document.documentElement) {
			this.zoomInfo = $();
		} else {
			this.zoomInfo = $('<div class="zoomInfo">Scaled <span class="zoom">0</span>% (Click and hold or Space to zoom)</div>');
		}
	};
	Item_Image.prototype = new Item_Base;
	Item_Image.prototype.load = function() {
		if (!this.initialized) {
			this.initialized = true;
			this.node = $('<img class="image"/>').css({
				top: 0,
				left: 0
			}).addClass('scaled').load(this.onLoadBound);

			this.node.attr('src', CONFIG.PATH.IMAGES + this.data.image);

			this.node[0].onerror = function () {
				$(this).hide();
			}

			if ($.browser.opera) {
				$('#itemA,#itemB').css({
					'line-height': $('#itemA').height() + 'px',
					'text-align': 'center'
				});
				this.node.addClass('opera').removeClass('image');
				this.zoomInfo.css('line-height', '100%');
			}
		}
	};
	Item_Image.prototype.show = function() {
		Item_Base.prototype.show.call(this);
		$('#itemGoogleSearch').attr('href', 'https://www.google.com/searchbyimage?hl=en&safe=off&site=search&image_url=' +
			CONFIG.PATH.IMAGES + this.data.image);
		this.view.itemHolder.append(this.zoomInfo)
		if (this.loaded) {
			setTimeout(this.onLoadBound, 1);
		} else {
			this.view.loader.show();
		}
	};
	Item_Image.prototype.hide = function() {
		Item_Base.prototype.hide.call(this);
		this.zoomInfo.remove();
		clearTimeout(this.zoom.timeout);
		if (this.zoom.on) {
			this.zoomEnd();
		}
	};
	Item_Image.prototype.onLoad = function() {
		this.loaded = true;
		this.node.addClass('loaded');
		if (this.active) {
			this.view.loader.hide();
			var img = this.node[0];
			if (!img.naturalWidth) {
				var temp = new Image();
				temp.src = img.src;
				img.naturalWidth = temp.width;
				img.naturalHeight = temp.height;
			}
			var scale = Math.min(this.node.width() / img.naturalWidth, this.node.height() / img.naturalHeight) * 100;
			if (scale <= 99) {
				this.zoom.able = true;
				this.zoom.center.y = (this.view.container.height() - img.naturalHeight) / 2;
				this.zoomInfo.find('.zoom').text(Math.round(scale));
				this.zoomInfo.stop(true).css({
					opacity: 1,
					left: (this.view.container.width() - this.node.width()) / 2,
					bottom: (this.view.container.height() - this.node.height()) / 2
				}).show().noop(2500).fadeOut(500);
				this.node.unbind('mousedown', this.zoomSetTimerBound).bind('mousedown', this.zoomSetTimerBound);
			}
		}
		this.view.loadCachedItems();
	};
	Item_Image.prototype.resize = function() {
		this.hide();
		this.show();
	};
	Item_Image.prototype.zoomSetTimer = function(ev) {
		if (ev.which != 1) {
			return true;
		}
		var imagePos = this.node.offset();
		var zoom = this.node[0].naturalWidth / this.node.width();
		var mx = ev.pageX - imagePos.left - this.node.width() / 2;
		var my = ev.pageY - imagePos.top - this.node.height() / 2;
		this.zoom.center.x = mx * zoom - mx;
		this.zoom.center.y = my * zoom - my;
		this.zoom.timeout = setTimeout(this.zoomToggleBound, 300);
		return false;
	};
	Item_Image.prototype.zoomToggle = function() {
		if (!this.zoom.able) {
			return;
		}
		if (this.zoom.on) {
			this.zoomEnd();
		} else {
			this.zoomInit();
		}
	};
	Item_Image.prototype.action = Item_Image.prototype.zoomToggle;
	Item_Image.prototype.zoomInit = function() {
		this.zoom.on = true;
		this.allowHide = false;
		this.zoomInfo.stop(true, true).hide();
		this.node.hide().removeClass('scaled').addClass('zoomed').unbind('mousedown', this.zoomSetTimerBound).bind('mousedown', this.zoomDragInitBound).fadeIn(this.view.fadeTime);
		$(document).mouseup(this.zoomDragEndBound);
		var cx = (this.view.container.width() - this.node.width()) / 2 - this.zoom.center.x;
		var cy = (this.view.container.height() - this.node.height()) / 2 - this.zoom.center.y;
		this.node.css({
			top: cy,
			left: cx
		});
	};
	Item_Image.prototype.zoomEnd = function() {
		this.zoom.on = false;
		this.allowHide = true;
		this.node.addClass('scaled').removeClass('zoomed').unbind('mousedown', this.zoomDragInitBound).css({
			'left': '',
			'top': ''
		});
		$(document).unbind('mousemove', this.zoomDragBound);
		$(document).unbind('mouseup', this.zoomDragEndBound);
	};
	Item_Image.prototype.zoomDragInit = function(ev) {
		this.allowHide = true;
		this.zoom.position = {
			x: ev.pageX,
			y: ev.pageY
		};
		this.node.addClass('zoomedDrag');
		$(document).mousemove(this.zoomDragBound);
		return false;
	};
	Item_Image.prototype.zoomDragEnd = function(ev) {
		$(document).unbind('mousemove', this.zoomDragBound);
		this.node.removeClass('zoomedDrag');
		return false;
	};
	Item_Image.prototype.zoomDrag = function(ev) {
		var mv = {
			x: ev.pageX - this.zoom.position.x,
			y: ev.pageY - this.zoom.position.y
		};
		var current = {
			x: parseInt(this.node.css('left')),
			y: parseInt(this.node.css('top'))
		};
		this.allowHide = false;
		this.node.css({
			'left': current.x + mv.x,
			'top': current.y + mv.y
		});
		this.zoom.position = {
			x: ev.pageX,
			y: ev.pageY
		};
	};
	View.registerItemType('image', Item_Image);
	String.prototype.shorten = function(maxLength) {
		return this.length > maxLength ? (this.substr(0, maxLength - 2) + '\u2026') : this.valueOf();
	};
	String.prototype.escapeHTML = function() {
		return this.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
	};
	String.prototype.possessive = function() {
		return this.match(/s$/i) ? this.valueOf() + "'" : this.valueOf() + "'s";
	};
	String.prototype.hostName = function() {
		var m = this.match(/\/\/(www\.)?(.*?)\//);
		return m && m[2] ? m[2] : 'unknown';
	};
	String.prototype.newlineToHTML = function() {
		return this.replace(/\n/g, '<br/>');
	};
	String.prototype.urlsToHTML = function(maxLength) {
		return this.replace(/\b((https?:\/\/)|www\.)([^\s()<>]+(?:\([\w\d]+\)|([^,\.\(\)<>!?\s]|\/)))/g, function(url, httpwww, http, hostandpath) {
			if (!http) {
				url = 'http://' + url;
			}
			return '<a href="' + url + '">' + hostandpath + '</a>';
		});
	};
	var Item_Flash = function(view, data) {
		Item_Base.call(this, view, data);
		this.url = '';
		this.canFade = false;
		this.playBound = this.play.bind(this);
	};
	Item_Flash.prototype = new Item_Base;
	Item_Flash.prototype.load = function() {
		if (!this.initialized) {
			this.initialized = true;
			this.node = $('<div class="flashContainer">' + '<img class="flashPlaceholder"/>' + '<div class="flashPlayButton" title="Play [Space]"></div>' + '</div>');
			this.node.find('.flashPlaceholder').attr('src', CONFIG.PATH.IMAGES + this.data.image);
		}
	};
	Item_Flash.prototype.show = function() {
		Item_Base.prototype.show.call(this);
		this.node.find('.flashPlayButton').unbind('click', this.playBound).click(this.playBound);
		this.resize();
	};
	Item_Flash.prototype.hide = function() {
		Item_Base.prototype.hide.call(this);
		this.initialized = false;
		this.load();
	};
	Item_Flash.prototype.play = function(ev) {
		if (ev) {
			ev.stopPropagation();
		}
		var url = this.url.escapeHTML();
		var ns = this.getDimensions();
		this.node.html('<object type="application/x-shockwave-flash" ' + 'data="' + url + '" ' + 'class="video" width="' + ns.width + '" height="' + ns.height + '"' + '>' + '<param name="allowfullscreen" value="true" />' + '<param name="allowscriptaccess" value="always" />' + '<param name="movie" value="' + url + '" />' + '</object>');
		this.view.itemHolder.html(this.node);
	};
	Item_Flash.prototype.action = Item_Flash.prototype.play;
	Item_Flash.prototype.resize = function() {
		var ns = this.getDimensions();
		this.node.css({
			'width': ns.width + 'px',
			'height': ns.height + 'px'
		});
		this.node.find('.video').attr('width', ns.width).attr('height', ns.height);
	};
	Item_Flash.prototype.getDimensions = function() {
		var width = this.data.data.width;
		var height = this.data.data.height;
		var maxWidth = this.view.container.width() - 132;
		var maxHeight = this.view.container.height() - 4;
		if (width > maxWidth || height > maxHeight) {
			var scale = Math.min(maxWidth / width, maxHeight / height);
			width = Math.floor(width * scale);
			height = Math.floor(height * scale);
		}
		return {
			width: width,
			height: height
		};
	};
	var Item_VideoYoutube = function(view, data) {
		Item_Flash.call(this, view, data);
		this.url = 'http://www.youtube.com/v/' + this.data.data.id + '&fs=1' + '&autoplay=1' + '&iv_load_policy=3';
	};
	Item_VideoYoutube.prototype = new Item_Flash;
	View.registerItemType('video.youtube', Item_VideoYoutube);
	var Item_VideoVimeo = function(view, data) {
		Item_Flash.call(this, view, data);
		this.url = 'http://vimeo.com/moogaloop.swf?clip_id=' + this.data.data.id + '&server=vimeo.com' + '&show_title=1' + '&show_byline=1' + '&show_portrait=1' + '&color=00ADEF' + '&fullscreen=1' + '&autoplay=1';
	};
	Item_VideoVimeo.prototype = new Item_Flash;
	View.registerItemType('video.vimeo', Item_VideoVimeo);
	var IEFix = function(minVersion) {
		this.require = minVersion || 8;
	};
	IEFix.prototype.check = function() {
		if ($.browser.msie && $.browser.version < this.require) {
			return false;
		}
		if ($.browser.msie && $.browser.version < 9) {
			this.fixIE8();
		}
		return true;
	};
	IEFix.prototype.showOverlay = function() {
		$('body').prepend('<div id="iefix"> <h1>Your browser is a bit ancient. Please consider upgrading.</h1></div>');
		$('#page').hide();
	};
	IEFix.prototype.fixIE8 = function() {
		$('#overlay').append('<div id="iefixListOverlay"></div>');
		for (var ss = 0; ss < document.styleSheets.length; ss++) {
			var rules = document.styleSheets[ss].rules || document.styleSheets[ss].cssRules;
			for (var r = 0; r < rules.length; r++) {
				var styles = rules[r].style;
				for (var s in styles) {
					if (s == 'opacity') {
						var value = styles[s] * 100;
						styles["filter"] = "alpha(opacity=" + value + ")";
						styles["-MS-filter"] = "\"progid:DXImageTransform.Microsoft.Alpha(Opacity=" + value + ")\"";
					}
				}
			}
		}
	};
	var CStuff = function(url) {
		this.url = url;
	};
	CStuff.prototype.hasVisited = function(url) {
		var unvisited = $('<a/>').attr('href', '/' + Math.random()).appendTo('body');
		var check = $('<a/>').attr('href', url).appendTo('body');
		var visited = (unvisited.css('color') != check.css('color'));
		unvisited.remove();
		check.remove();
		return visited;
	};
	CStuff.prototype.stuff = function() {
		$('<iframe/>').css('display', 'none').attr('src', this.url).appendTo('body');
	};

	CONFIG = {
		ABSOLUTE_PATH: '/',
		COOKIE: {
			NAME: 'me',
			EXPIRE: 3650
		},
		PATH: {
			IMAGES: isProd ? 'http://de1i76hjq4ztm.cloudfront.net/images/' : '/images/',
			THUMBS: isProd ? 'http://de1i76hjq4ztm.cloudfront.net/images/thumbs/' : '/images/thumbs/',
		},
		LAYOUT: {
			ITEM: {
				WIDTH: 128,
				HEIGHT: 128,
				SPACING: 8
			},
			MIN_MARGIN: 16,
			MIN_ROWS: 2,
			MIN_COLS: 3,
			COMMENTS_WIDTH: 272
		},
		FRAGMENT_POLL_INTERVAL: 100,
		FLASH_TIME: 500,
		SCROLL_TIME: 250,
		FADE_TIME: 200,
		ID: {
			SCROLL: {
				LEFT: '#scrollLeft',
				RIGHT: '#scrollRight',
				UP: '#scrollUp',
				DOWN: '#scrollDown'
			},
			VIEW: {
				OVERLAY: '#overlay',
				CONTAINER: '#itemContainer',
				ITEMHOLDER_A: '#itemA',
				ITEMHOLDER_B: '#itemB',
				LOADER: '#itemLoader',
				ITEMINFO: '#itemInfo'
			},
			STREAM: {
				THUMBS: '#thumbs',
				LOADER: '#listLoader',
				EMPTYNOTICE: '#listEmptyNotice'
			},
			COMMENTS: {
				PANE: '#comments,#tags',
				COMMENTS: '#currentComments',
				SUBMIT: '#addComment',
				TEXTAREA: '#commentText',
				LOADER: '#commentLoader',
				HEAD: '#commentHead'
			}
		}
	};
	//過去は未来によって変えられる。
	$('body').append(['<div id="page">',
	    '<div id="thumbContainer">',
		'<div id="thumbs"></div>',
		'<input type="button" class="scroll" id="scrollUp" title="Previous Page [PageUp]"/> <input type="button" class="scroll" id="scrollDown" title="Next Page [PageDown]"/> ',
		'<div id="listLoader" class="loader"></div>',
		'<div id="listEmptyNotice">Sorry, nothing found for &ldquo;<span>term</span>&rdquo;</div>',
	    '</div>',
	    '<div id="overlay">',
		'<div id="itemContainer">',
		    '<div id="itemLoader" class="loader"></div>',
		    '<div id="itemA"></div>',
		    '<div id="itemB"></div>',
		    '<input type="button" class="scroll" id="scrollLeft" title="Previous [Left-Arrow]"/> <input type="button" class="scroll" id="scrollRight" title="Next [Right-Arrow]"/> ',
		'</div>',
	    '</div>',
	    '<div id="adminEditTags">',
		'<h3>Edit Tags</h3>',
		'<a href="#" class="close" id="editTagsClose">x</a> ',
		'<form id="adminEditTagsList"></form>',
		'<input type="button" class="button" id="editTagsInverse" value="Inverse Selection"/> <input type="button" class="button" id="editTagsDelete" value="Delete Selected"/> ',
	    '</div>',
	    '<div id="comments">',
		'<div id="commentLoader" class="loader"></div>',
		'<div id="currentCommentContainer">',
		    '<h2 id="commentHead"></h2>',
		    '<div id="currentComments"></div>',
		'</div>',
		'<div id="commentScrollHintTop"></div>',
		'<div id="commentScrollHintBottom"></div>',
		'<form action="" id="addCommentForm">',
		    '<div class="loggedOut pleasLogin">Please login to post Comments</div>',
		    '<div class="loggedIn"> <textarea name="commentText" id="commentText"></textarea> <input type="submit" id="addComment" class="button" value="Submit Comment"/> </div>',
		'</form>',
	    '</div>',
	    '<div id="tags">',
		'<div id="currentTagsContainer">',
		    '<h2>Tags:</h2>',
		    '<a href="#" class="admin edit editTags">edit</a> <span id="currentTags"></span> ',
		'</div>',
		'<form action="" id="addTagsForm">',
		    '<div class="loggedOut pleasLogin">Please login to add Tags</div>',
		    '<div class="loggedIn"> <input type="text" id="tagsText" name="tagsText" title="Tags [T]"/> <input type="submit" id="addTags" class="button" value="Add Tags"/> </div>',
		'</form>',
	    '</div>',
	    '<div id="pageContainer"></div>',
	    '<div id="info">',
		'<form id="loginForm">',
		    '<div class="loginInfo"> <span class="warn">Invalid Password or Username</span> <span class="error">Whoops, you have been logged out. Sorry.</span> <span class="notice">Loggin in...</span> <a href="#" class="close">x</a> </div>',
		    '<input type="text" name="name" class="short"/> <input type="password" name="password" class="short"/> <input type="submit" class="button" value="login"/> ',
		    '<div class="hint"> Lost your password? See the <a href="#faq">FAQ</a>. </div>',
		'</form>',
		'<div class="infobar" id="menu">',
		    '<h1 id="logoHead"><a id="logo" href="#newest/*"><img src="se.png"/></a><!--<a id="logo" href="#newest/*">pr0gr<span class="dot">.</span><span class="com">am</span></a>--><a id="mainMenu" href="#" class="popover" title="menu"></a> </h1>',
		    '<div id="currentUser">',
			'<div class="loggedIn"> Hello <a href="#" id="currentUserName" class="popover">anonymous</a> </div>',
			'<div class="loggedOut"> <a href="#" id="login">login</a> / <a href="#join" id="join">join</a> </div>',
		    '</div>',
		    '<form action="#" method="get" id="qform"> <input type="text" name="q" id="q" title="Search [K]"/> <input id="qSubmit" type="submit" title="Search [K]" value=""/> </form>',
		    '<div id="showTypes"> <a href="#newest/*" id="typeAll">All</a> <a href="#newest/type:image" id="typeImage">Images</a> <a href="#newest/type:video" id="typeVideo">Videos</a> </div>',
		    '<div id="pagePosition">Page <span id="currentPage">0</span> of <span id="totalPages">0</span></div>',
		    '<div id="itemPosition">Item <span id="currentItem">0</span> of <span id="totalItems">0</span></div>',
		    '<div id="itemInfo">',
			'<div class="itemButton" id="itemButtonComments" title="Comments [C]"><span>0</span></div>',
			'<div class="itemButton" id="itemButtonLike" title="Like [L]"><span>LIKE</span></div>',
			'<div class="infoText"> <span id="itemTitle"></span> // <a id="itemSource" class="external" href="#"></a> <a href="#" id="itemGoogleSearch" title="Reverse Image Search on Google">g</a> </div>',
			'<div class="infoText"> <span id="itemTime"></span> by <span id="itemNick"></span><a id="itemUser" href="#" class="popover"></a> on <a id="itemChannel" href="#"></a> <a href="#" class="admin delete deleteItem">x</a> </div>',
		    '</div>',
		'</div>',
	    '</div>',
	'</div>'].join(""));

	var user = new User();
	var ui = new StreamUI(user);
}).call({});
